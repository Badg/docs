<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs – State Management</title><link>/user-guide/state-management/</link><description>Recent content in State Management on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/user-guide/state-management/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Guide: Cloud Pods</title><link>/user-guide/state-management/cloud-pods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/cloud-pods/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Cloud pods are persistent state snapshots of your LocalStack instance that can easily be stored, versioned, shared, and restored. Cloud Pods can be used for various purposes, such as:&lt;/p>
&lt;ul>
&lt;li>Save and manage snapshots of active LocalStack instances.&lt;/li>
&lt;li>Share state snapshots with your team to debug collectively.&lt;/li>
&lt;li>Automate your testing pipelines by pre-seeding CI environments.&lt;/li>
&lt;li>Create reproducible development and testing environments locally.&lt;/li>
&lt;/ul>
&lt;img src="pods-ui.png" alt="Cloud Pods Web UI" title="Cloud Pods Web UI" width="800px" />
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>You can save and load the persistent state of Cloud Pods, you can use the &lt;a href="/user-guide/state-management/pods-cli/">Cloud Pods command-line interface (CLI)&lt;/a>. LocalStack provides a remote storage backend that can be used to store the state of your running application and share it with your team members. You can interact with the Cloud Pods over the storage backend via the LocalStack Web Application.&lt;/p>
&lt;p>Cloud Pods CLI is included in the &lt;a href="https://docs.localstack.cloud/getting-started/installation/#localstack-cli">LocalStack CLI installation&lt;/a>, so there&amp;rsquo;s no need for additional installations to begin using it. If you&amp;rsquo;re a licensed user, we suggest setting the &lt;code>LOCALSTACK_AUTH_TOKEN&lt;/code> as an environment variable. This enables you to access the complete range of LocalStack Cloud Pods features.&lt;/p>
&lt;p>You can access the Cloud Pods CLI by running the &lt;code>pod&lt;/code> command from your terminal.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod --help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: localstack pod [OPTIONS] COMMAND [ARGS]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Manage the state of your instance via Cloud Pods.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h, --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete Delete a Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inspect
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list List all available Cloud Pods
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> load
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote Manage cloud pod remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> save Create a new Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
These Cloud Pods are securely stored within an AWS storage backend, where each user or organization is allocated a dedicated and isolated S3 bucket. The LocalStack Cloud Pods CLI utilizes secure S3 presigned URLs to directly interface with the S3 bucket, bypassing the need to transmit the state files through LocalStack Platform APIs.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Cloud Pods and assumes basic knowledge of the LocalStack CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how you can save a snapshot of your active LocalStack instance into your LocalStack account, and pull it to a running instance.&lt;/p>
&lt;h3 id="create-aws-resources">Create AWS resources&lt;/h3>
&lt;p>You can use the &lt;code>awslocal&lt;/code> CLI to create new AWS resources within your active LocalStack instance. For example, you can create an S3 bucket and add data to it using the &lt;code>awslocal&lt;/code> CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#34;hello world&amp;#34; &amp;gt; /tmp/hello-world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/hello-world s3://test/hello-world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 ls s3://test/&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="save-your-cloud-pod-state">Save your Cloud Pod state&lt;/h3>
&lt;p>You can now save your Pod state using the &lt;code>save&lt;/code> command, specifying the desired Cloud Pod name as the first argument. This action will save the pod and register it with the LocalStack Web Application:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save s3-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cloud Pod `s3-test` successfully created ✅
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Version: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Remote: platform
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Services: s3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Optionally, you can include a message with the saved Cloud Pod using the &lt;code>--message&lt;/code> flag.&lt;/p>
&lt;p>You can access the list of available Cloud Pods for both you and your organization by utilizing the &lt;code>list&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┓
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>┃ Name ┃ Max Version ┃ Last Change ┃
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━┩
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ s3-test │ 1 │ 2024-01-04 11:03:00 │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└──────────────────────────────┴─────────────┴─────────────────────┘
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>With the &lt;code>save&lt;/code> command you can create multiple versions of a Cloud Pod.
For instance, let us create a SQS queue and second version of &lt;code>s3-test&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sqs create-queue --queue-name test-queue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save s3-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cloud Pod `s3-test` successfully created ✅
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Version: 2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Remote: platform
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Services: s3,sqs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>We can now use the command &lt;code>versions&lt;/code> to list all the created version for a Cloud Pod.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod versions s3-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>┏━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━┳━━━━━━━━━━━━━┓
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>┃ Version ┃ Creation Date ┃ LocalStack Version ┃ Services ┃ Description ┃
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>┡━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━╇━━━━━━━━━━━━━┩
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 1 │ 2024-01-04 11:03:00 │ 3.1.1. │ s3 │ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ 2 │ 2024-02-28 14:01:45 │ 3.1.1. │ s3,sqs │ │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└─────────┴─────────────────────┴─────────────────────────┴──────────┴─────────────┘
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="pull-your-pod-state">Pull your Pod state&lt;/h3>
&lt;p>On a separate machine, start LocalStack while ensuring the auth token is properly configured. Then, retrieve the previously created Cloud Pod by employing the &lt;code>load&lt;/code> command, specifying the Cloud Pod name as the first argument:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod load s3-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cloud Pod s3-test successfully loaded
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can examine the S3 buckets within the Cloud Pod:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 ls s3://test/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-10-04 22:33:54 12 hello-world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can also load a specific version by appending a version number to the pod name after a colon.
If not specified, the latest version will be loaded.
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod load s3-test:1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cloud Pod s3-test:1 successfully loaded
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>After loading the Cloud Pod&amp;rsquo;s content, you can use the &lt;code>state inspect&lt;/code> command to observe the state of the running LocalStack instance.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack state inspect --format json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;000000000000&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S3&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;global&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;listBuckets&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Buckets&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;test&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CreationDate&amp;#34;: &amp;#34;2023-10-03T07:19:31.000Z&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>For comprehensive instructions, navigate to our &lt;a href="/user-guide/state-management/pods-cli/">Command-Line Interface (CLI) Guide&lt;/a>. To access your Cloud Pods through the LocalStack Web Application, navigate to the &lt;a href="https://app.localstack.cloud/pods">Cloud Pods browser&lt;/a>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Permission on Cloud Pods are assigned at organization level.
This means that every individual in the organization can view, load, and delete Cloud Pods created by other team members.
Similarly, everyone can save a new version of a Cloud Pod on top of a Pod originally created by someone else.
&lt;/div>
&lt;h2 id="web-application">Web Application&lt;/h2>
&lt;p>The LocalStack Web Application enables you to :&lt;/p>
&lt;ul>
&lt;li>Browse your Cloud Pods and access your version history.&lt;/li>
&lt;li>Export &amp;amp; import Cloud Pods to and from LocalStack instances.&lt;/li>
&lt;/ul>
&lt;h3 id="browse-cloud-pods">Browse Cloud Pods&lt;/h3>
&lt;p>&lt;a href="https://app.localstack.cloud/pods">Cloud Pods Browser&lt;/a> allows you to view, manage, and explore your Cloud Pods through the LocalStack Web Application.
With Cloud Pods, you can have individual or shared ownership of a snapshot of your LocalStack instance.&lt;/p>
&lt;img src="cloud-pods-browser.png" alt="LocalStack Web Application's Cloud Pods Browser outlining various saved Clod Pods" title="Cloud Pods Browser" width="900" />
&lt;br>&lt;br>
&lt;p>The Cloud Pods Browser provides the following functionalities:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>View Cloud Pods&lt;/strong>: View all Cloud Pods saved by you or your organization.&lt;/li>
&lt;li>&lt;strong>View Versions&lt;/strong>: View the version history of a Cloud Pod and access previous versions of specific Cloud Pods by clicking on the Cloud Pod&amp;rsquo;s name.&lt;/li>
&lt;li>&lt;strong>View Cloud Pod Details&lt;/strong>: View the details of a specific Cloud Pod version by clicking on the version.&lt;/li>
&lt;li>&lt;strong>View Cloud Pod storage&lt;/strong>: View the organization storage usage and user storage usage on top of the Cloud Pods Browser.&lt;/li>
&lt;li>&lt;strong>Delete Cloud Pod&lt;/strong>: Delete a Cloud Pod by selecting the Cloud Pod and navigating to the &lt;strong>Actions&lt;/strong> button, followed by &lt;strong>Delete&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h3 id="export--import-cloud-pods">Export &amp;amp; Import Cloud Pods&lt;/h3>
&lt;p>You can export and import your LocalStack infrastructure state as a Cloud Pod using the LocalStack Web Application.
This feature is particularly useful when you need to use a user-friendly interface to manage your Cloud Pods, without the need to interact with the CLI.&lt;/p>
&lt;img src="export-import-state-cloud-pod.png" alt="LocalStack Export/Import State Cloud Pod Mode" title="LocalStack Export/Import State Cloud Pod Mode" width="900" />
&lt;h4 id="export-the-state">Export the State&lt;/h4>
&lt;p>To export the state, follow these steps:&lt;/p>
&lt;ol>
&lt;li>Navigate to the &lt;strong>Cloud Pod&lt;/strong> tab within the &lt;a href="https://app.localstack.cloud/inst/default/state">Export/Import State&lt;/a> page.&lt;/li>
&lt;li>Create AWS resources locally as needed.&lt;/li>
&lt;li>Enter the Pod name and toggle between the &lt;strong>New Pod&lt;/strong> and &lt;strong>Existing Pod&lt;/strong> options.&lt;/li>
&lt;li>Click on &lt;strong>Create New Pod&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;p>A new Cloud Pod will be created and will be available for import into another LocalStack instance.
You can check out the list of available Cloud Pods in the &lt;a href="https://app.localstack.cloud/pods">Cloud Pod&lt;/a> page.&lt;/p>
&lt;h4 id="import-the-state">Import the State&lt;/h4>
&lt;p>To import the state, follow these steps:&lt;/p>
&lt;ol>
&lt;li>Navigate to the &lt;strong>Cloud Pod&lt;/strong> tab within the &lt;a href="https://app.localstack.cloud/inst/default/state">Export/Import State&lt;/a> page.&lt;/li>
&lt;li>Choose the Cloud Pod from the drop-down list.&lt;/li>
&lt;li>Click on &lt;strong>Load State From Pod&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;p>To confirm the successful injection of the container state, visit the respective &lt;a href="https://app.localstack.cloud/inst/default/resources">Resource Browser&lt;/a> for the services and verify the resources.&lt;/p>
&lt;h2 id="auto-loading-cloud-pods">Auto Loading Cloud Pods&lt;/h2>
&lt;p>In addition to loading Cloud Pods through the Command-Line Interface (CLI) or the Web Application, you can configure the automatic loading of one or more Cloud Pods upon the startup of the LocalStack container.&lt;/p>
&lt;h3 id="environmental-variables">Environmental variables&lt;/h3>
&lt;p>To automatically load a Cloud Pod at startup, utilize the &lt;code>AUTO_LOAD_POD&lt;/code> &lt;a href="https://docs.localstack.cloud/references/configuration/">configuration variable&lt;/a>.&lt;/p>
&lt;p>&lt;code>AUTO_LOAD_POD&lt;/code> can accept multiple Cloud Pod names separated by commas. To autoload multiple Cloud Pods, such as &lt;code>foo-pod&lt;/code> and &lt;code>bar-pod&lt;/code>, use: &lt;code>AUTO_LOAD_POD=foo-pod,bar-pod&lt;/code>. The order of Cloud Pods in &lt;code>AUTO_LOAD_POD&lt;/code> dictates their loading sequence. When autoloading multiple Cloud Pods, later pods might overwrite the state of earlier ones if they share the same service, account, and region.&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-14" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-bash"
id="tabs-14-00-tab" data-toggle="tab" href="#tabs-14-00" role="tab"
onclick="persistLang(&amp;#34;bash&amp;#34;);"aria-controls="tabs-14-00" aria-selected="false">
LocalStack CLI
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link persistLang-yaml"
id="tabs-14-01-tab" data-toggle="tab" href="#tabs-14-01" role="tab"
onclick="persistLang(&amp;#34;yaml&amp;#34;);"aria-controls="tabs-14-01" aria-selected="false">
Docker Compose
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link"
id="tabs-14-02-tab" data-toggle="tab" href="#tabs-14-02" role="tab"
aria-controls="tabs-14-02" aria-selected="false">
Docker
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-14-content">
&lt;div class="tab-pane fade show active"
id="tabs-14-00" role="tabpanel" aria-labelled-by="tabs-14-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">AUTO_LOAD_POD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>foo-pod localstack start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-14-01" role="tabpanel" aria-labelled-by="tabs-14-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;3.8&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">services&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">container_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;localstack-main&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack/localstack-pro&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;127.0.0.1:4566:4566&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;127.0.0.1:4510-4559:4510-4559&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN:?}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">DEBUG=1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">AUTO_LOAD_POD=foo-pod,bar-pod&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;./volume:/var/lib/localstack&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;/var/run/docker.sock:/var/run/docker.sock&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-14-02" role="tabpanel" aria-labelled-by="tabs-14-02-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -e &lt;span style="color:#000">LOCALSTACK_AUTH_TOKEN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">LOCALSTACK_AUTH_TOKEN&lt;/span>&lt;span style="color:#000;font-weight:bold">:?&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -e &lt;span style="color:#000">AUTO_LOAD_POD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>foo-pod &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -v ./volume:/var/lib/localstack &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -p 4566:4566 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> localstack/localstack-pro&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="configuration-file">Configuration file&lt;/h3>
&lt;p>LocalStack allows for the use of configuration files to automatically load Cloud Pods during startup.&lt;/p>
&lt;p>Within the container, LocalStack searches through the &lt;code>/etc/localstack/init-pod.d&lt;/code> directory for two file types: &lt;code>zip&lt;/code> files created using the &lt;code>localstack state export&lt;/code> command, and &lt;code>txt&lt;/code> files, where each line represents the name of a Cloud Pod.&lt;/p>
&lt;p>Take the following example of a project layout:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── docker-compose.yml
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── init-pods.d
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── pod-list.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── my-state.pod.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The &lt;code>pod-list.txt&lt;/code> contains the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>foo-pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bar-pod
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>LocalStack, upon mounting &lt;code>init-pods.d&lt;/code> to the appropriate location, will sequentially load &lt;code>foo-pod&lt;/code> and &lt;code>bar-pod&lt;/code> as listed in &lt;code>pod-list.txt&lt;/code>, and then proceed to load &lt;code>my-state.pod.zip&lt;/code>.&lt;/p>
&lt;p>The docker compose file for correctly mounting &lt;code>init-pods.d&lt;/code> will look like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;3.8&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">services&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">container_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;localstack-main&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack/localstack-pro&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;127.0.0.1:4566:4566&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;127.0.0.1:4510-4559:4510-4559&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN:?}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">DEBUG=1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;./volume:/var/lib/localstack&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;./init-pods.d:/etc/localstack/init-pods.d&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="remotes">Remotes&lt;/h2>
&lt;p>A remote is the location where Cloud Pods are stored. By default, Cloud Pod artifacts are stored in the LocalStack platform. However, if your organization&amp;rsquo;s data regulations or sovereignty requirements prohibit storing Cloud Pod assets in a remote storage infrastructure, you have the option to persist Cloud Pods in an on-premises storage location under your complete control.&lt;/p>
&lt;p>LocalStack provides two types of alternative remotes:&lt;/p>
&lt;ul>
&lt;li>S3 bucket remote storage.&lt;/li>
&lt;li>&lt;a href="https://oras.land/">ORAS&lt;/a> (OCI Registry as Storage) remote storage.&lt;/li>
&lt;/ul>
&lt;p>Cloud Pods command-line interface (CLI) allows you to create, delete, and list remotes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod remote --help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: localstack pod remote [OPTIONS] COMMAND [ARGS]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Manage cloud pod remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h, --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add Add a remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete Delete a remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list List the available remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="s3-bucket-remote-storage">S3 bucket remote storage&lt;/h3>
&lt;p>The S3 remote enables you to store Cloud Pod assets in an existing S3 bucket within an actual AWS account. The initial step is to export the necessary AWS credentials within the terminal session.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The Cloud Pods S3 remote is currently &lt;em>only&lt;/em> available when &lt;a href="https://docs.localstack.cloud/getting-started/installation/#localstack-cli">installing the &lt;code>localstack&lt;/code> CLI via &lt;code>pip&lt;/code>&lt;/a>, and not for the binary CLI distribution.
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">AWS_ACCESS_KEY_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">AWS_SECRET_ACCESS_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A possible option is to obtain credentials via &lt;a href="https://github.com/synfinatic/aws-sso-cli">AWS SSO CLI&lt;/a>.&lt;/p>
&lt;p>Next, we establish a new remote specifically designed for an S3 bucket. By running the following command, we create a remote named &lt;code>s3-storage-aws&lt;/code> responsible for storing Cloud Pod artifacts in an S3 bucket called &lt;code>ls-pods-bucket-test&lt;/code>.&lt;/p>
&lt;p>The &lt;code>access_key_id&lt;/code> and &lt;code>secret_access_key&lt;/code> placeholders ensure the correct transmission of AWS credentials to the container.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod remote add s3-storage-aws &amp;#39;s3://ls-pods-bucket-test/?access_key_id={access_key_id}&amp;amp;secret_access_key={secret_access_key}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Lastly, you can utilize the standard &lt;code>pod&lt;/code> CLI command to generate a new Cloud Pod that points to the previously established remote.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save my-pod s3-storage-aws&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the command has been executed, you can confirm the presence of Cloud Pod artifacts in the S3 bucket by simply running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>aws s3 ls s3://ls-pods-bucket-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-09-27 13:50:10 &lt;span style="color:#0000cf;font-weight:bold">83650&lt;/span> localstack-pod-my-pod-state-1.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-09-27 13:50:11 &lt;span style="color:#0000cf;font-weight:bold">85103&lt;/span> localstack-pod-my-pod-version-1.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use the &lt;code>pod load&lt;/code> command to load the same pod that was previously saved in this remote:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod load my-pod s3-storage-aws&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="oras-remote-storage">ORAS remote storage&lt;/h3>
&lt;p>The ORAS remote enables users to store Cloud Pods in OCI-compatible registries like Docker Hub, Nexus, or ECS registries. ORAS stands for &amp;ldquo;OCI Registry as Service,&amp;rdquo; and you can find additional information about this standard &lt;a href="https://oras.land/">on the official website&lt;/a>.&lt;/p>
&lt;p>For example, let&amp;rsquo;s illustrate how you can utilize Docker Hub to store and retrieve Cloud Pods.&lt;/p>
&lt;p>To begin, you must configure the new remote using the LocalStack CLI. You&amp;rsquo;ll need to export two essential environment variables, &lt;code>ORAS_USERNAME&lt;/code> and &lt;code>ORAS_PASSWORD&lt;/code>, which are necessary for authenticating with Docker Hub.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ORAS_USERNAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>docker_hub_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ORAS_PASSWORD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ILoveLocalStack1!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now use the CLI to create a new remote called &lt;code>oras-remote&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod remote add oras-remote &amp;#39;oras://{oras_username}:{oras_password}@registry.hub.docker.com/&amp;lt;docker_hub_id&amp;gt;&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Lastly, you can store a pod using the newly configured remote, where &lt;code>my-pod&lt;/code> represents the Cloud Pod&amp;rsquo;s name, and &lt;code>oras-remote&lt;/code> is the remote&amp;rsquo;s name.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save my-pod oras-remote&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Likewise, you can execute the reverse operation to load a Cloud Pod from &lt;code>oras-remote&lt;/code> using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod load my-pod oras-remote&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="miscellaneous">Miscellaneous&lt;/h3>
&lt;p>Unless explicitly specified, all Cloud Pods commands default to targeting the LocalStack Platform as the storage remote. It&amp;rsquo;s important to note that the CLI must be authenticated correctly with our Platform.&lt;/p>
&lt;p>Custom remote configurations are stored within the &lt;a href="https://docs.localstack.cloud/references/filesystem/#localstack-volume-directory">LocalStack volume directory&lt;/a> and are managed by the LocalStack container. Consequently, when sharing Cloud Pods among your team using a custom remote, each team member must define the identical remote configuration. Once added, a remote persists even after LocalStack restarts.&lt;/p>
&lt;h2 id="cloud-pods--persistence">Cloud Pods &amp;amp; Persistence&lt;/h2>
&lt;p>&lt;a href="/user-guide/state-management/persistence/">Persistence&lt;/a> ensures that the service state persists across container restarts. You can enable persistence via a LocalStack config flag &lt;code>PERSISTENCE=1&lt;/code> to restore your local resources, in case you’re stopping and re-starting the LocalStack instance on the same machine.&lt;/p>
&lt;p>In contrast, Cloud Pods provide more detailed control over your state. Rather than just restoring a state during LocalStack restarts, Cloud Pods enable you to capture snapshots of your local instance using the &lt;code>save&lt;/code> command and inject these snapshots into a running instance using the &lt;code>load&lt;/code> command, all without needing to perform a full restart.&lt;/p>
&lt;h3 id="limitations">Limitations&lt;/h3>
&lt;p>Cloud Pods (and state management in general), come with a few limitation.
In particular, Cloud Pods states might not be correctly restored if the LocalStack version used to create the pod and the target one differ.
We detect version miss-matches when using the &lt;code>pod load&lt;/code> and prompt a confirmation message to the user.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod load old-pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>This Cloud Pod was created with LocalStack 2.1.0. but you are running LocalStack 3.2.1. Cloud Pods might be incompatible across different LocalStack versions.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Loading a Cloud Pod with mismatching version might lead to a corrupted state of the emulator. Do you want to continue? [y/N]:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>We are working to extend Cloud Pods support to all AWS services emulated in LocalStack.
However, state management might not yet work reliably for every service.&lt;/p>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;h3 id="unable-to-obtain-auth-token">Unable to obtain auth token&lt;/h3>
&lt;p>When you try to save a Cloud Pod and see the error in LocalStack logs like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>localstack.cli.exceptions.CLIError: Failed to create Cloud Pod sample-pod ❌ - Unable to obtain auth token &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>code 401&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> - please log in again.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>It would be good to check if you have outdated authentication credentials (bearer token from a previous LocalStack login) in the &lt;code>remotes.yaml&lt;/code> file for cloud pods. You have two options to fix this:&lt;/p>
&lt;ol>
&lt;li>Run another &lt;code>localstack auth login&lt;/code> command.&lt;/li>
&lt;li>Find the &lt;code>remotes.yaml&lt;/code> file in the &lt;code>&amp;lt;localstack_volume&amp;gt;&lt;/code> directory on your machine and delete the file, or at least remove the &lt;code>&amp;quot;default&amp;quot;&lt;/code> entry from it.&lt;/li>
&lt;/ol>
&lt;p>Additionally, if there is a &lt;code>~/.localstack/auth.json&lt;/code> file in your home directory, delete it as well if it still exists.&lt;/p>
&lt;h3 id="license-not-found">License not found&lt;/h3>
&lt;p>When you try to save a Cloud Pod and see the &lt;code>license.not_found&lt;/code> error in LocalStack logs like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>lsmulti-localstack &lt;span style="color:#000;font-weight:bold">|&lt;/span> 2024-03-15T13:06:16.358 WARN --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>functhread31&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> l.p.remotes.remotes : Failed to register pod sample-pod: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;error&amp;#34;&lt;/span>: true, &lt;span style="color:#4e9a06">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;licensing.license.not_found&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To fix this, clear the LocalStack cache directory and restart the LocalStack instance before trying to save the Cloud Pod again. You can find the cache directories at:&lt;/p>
&lt;ul>
&lt;li>&lt;code>/Users/localstack/Library/Caches/localstack&lt;/code>&lt;/li>
&lt;li>&lt;code>/Users/localstack/Library/Caches/localstack-cli&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Adjust the path based on your operating system.&lt;/p>
&lt;h3 id="ssl-certificate-verification-failed">SSL Certificate verification failed&lt;/h3>
&lt;p>If you get an SSL certificate verification error while trying to save a Cloud Pod, as shown below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>An error occurred &lt;span style="color:#204a87;font-weight:bold">while&lt;/span> checking remote management &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> pod &lt;span style="color:#4e9a06">&amp;#34;cloud-pod-product-app&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;MyHTTPSConnectionPool(host=&amp;#39;api.localstack.cloud&amp;#39;, port=443): Max retries exceeded with url: /v1/cloudpods/cloud-pod-product-app (Caused by SSLError(SSLCertVerificationError(1, &amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>SSL: CERTIFICATE_VERIFY_FAILED&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> certificate verify failed: Hostname mismatch, certificate is not valid &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;api.localstack.cloud&amp;#39;&lt;/span>. &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>_ssl.c:1006&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;)))&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Check if your machine&amp;rsquo;s clock is set incorrectly or if the certificate store is outdated. This error can also occur if you use &lt;code>localstack&lt;/code> as &lt;code>LOCALSTACK_HOST&lt;/code>. In this case, the DNS incorrectly resolves &lt;code>api.localstack.cloud&lt;/code> to &lt;code>localhost&lt;/code>, causing a certificate mismatch.&lt;/p></description></item><item><title>User-Guide: Persistence</title><link>/user-guide/state-management/persistence/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/persistence/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>LocalStack&amp;rsquo;s Persistence mechanism enables the saving and restoration of the entire LocalStack state, including all AWS resources and data, on your local machine. It functions as a &amp;ldquo;pause and resume&amp;rdquo; feature, allowing you to take a snapshot of your LocalStack instance and save this data to disk. This mechanism ensures a quick and efficient way to preserve and continue your work with AWS resources locally.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>To start snapshot-based persistence, launch LocalStack with the configuration option &lt;code>PERSISTENCE=1&lt;/code>. This setting instructs LocalStack to save all AWS resources and their respective application states into the LocalStack Volume Directory. Upon restarting LocalStack, you&amp;rsquo;ll be able to resume your activities exactly where you left off.&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-0" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-bash"
id="tabs-00-00-tab" data-toggle="tab" href="#tabs-00-00" role="tab"
onclick="persistLang(&amp;#34;bash&amp;#34;);"aria-controls="tabs-00-00" aria-selected="false">
LocalStack CLI
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link persistLang-yaml"
id="tabs-00-01-tab" data-toggle="tab" href="#tabs-00-01" role="tab"
onclick="persistLang(&amp;#34;yaml&amp;#34;);"aria-controls="tabs-00-01" aria-selected="false">
Docker Compose
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link"
id="tabs-00-02-tab" data-toggle="tab" href="#tabs-00-02" role="tab"
aria-controls="tabs-00-02" aria-selected="false">
Docker
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-0-content">
&lt;div class="tab-pane fade show active"
id="tabs-00-00" role="tabpanel" aria-labelled-by="tabs-00-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">LOCALSTACK_AUTH_TOKEN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>... &lt;span style="color:#000">PERSISTENCE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> localstack start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-00-01" role="tabpanel" aria-labelled-by="tabs-00-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack/localstack-pro&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN:?}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">PERSISTENCE=1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack&amp;#34;&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-00-02" role="tabpanel" aria-labelled-by="tabs-00-02-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>docker run &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -e &lt;span style="color:#000">LOCALSTACK_AUTH_TOKEN&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">LOCALSTACK_AUTH_TOKEN&lt;/span>&lt;span style="color:#000;font-weight:bold">:?&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -e &lt;span style="color:#000">PERSISTENCE&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -v ./volume:/var/lib/localstack &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> -p 4566:4566 &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> localstack/localstack-pro&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Snapshots may not be compatible across different versions of LocalStack.
It is possible that snapshots from older versions can be restored, but there are no guarantees to whether LocalStack will start into a consistent state.
We are actively working on a solution for this problem.
&lt;/div>
&lt;h3 id="save-strategies">Save strategies&lt;/h3>
&lt;p>LocalStack takes point-in-time snapshot of its state and dumps them to disk.
There are four strategies that you can choose from that govern when these snapshots are taken.
You can select a particular save strategy by setting &lt;code>SNAPSHOT_SAVE_STRATEGY=&amp;lt;strategy&amp;gt;&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>ON_REQUEST&lt;/code>&lt;/strong>: On every AWS API call that potentially modifies the state of a service, LocalStack will save the state of that service.
This strategy minimizes the chance for data loss, but also has significant performance implications. The service has to be locked during snapshotting, meaning that any requests to the particular AWS service will be blocked until the snapshot is complete. In many cases this is just a few milliseconds, but can become significant in some services.&lt;/li>
&lt;li>&lt;strong>&lt;code>ON_SHUTDOWN&lt;/code>&lt;/strong>: The state of all services are saved during the shutdown phase of LocalStack.
This strategy has zero performance impact, but is not good when you want to minimize the chance for data loss. Should LocalStack for some reason not shut down properly or is terminated before it can finalize the snapshot, you may be left with an incomplete state on disk.&lt;/li>
&lt;li>&lt;strong>&lt;code>SCHEDULED&lt;/code>&lt;/strong> (&lt;strong>default&lt;/strong>): Saves at regular intervals the state of all the services that have been modified since the last snapshot.
By default, the flush interval is 15 seconds. It can be configured via the &lt;code>SNAPSHOT_FLUSH_INTERVAL&lt;/code> configuration variable.
This is a compromise between &lt;code>ON_REQUEST&lt;/code> and &lt;code>ON_SHUTDOWN&lt;/code> in terms of performance and reliability.&lt;/li>
&lt;li>&lt;strong>&lt;code>MANUAL&lt;/code>&lt;/strong>: Turns off automatic snapshotting and gives you control through the internal state endpoints.&lt;/li>
&lt;/ul>
&lt;h3 id="load-strategies">Load Strategies&lt;/h3>
&lt;p>Similarly, you can configure when LocalStack should restore the state snapshots, by using &lt;code>SNAPSHOT_LOAD_STRATEGY=&amp;lt;strategy&amp;gt;&lt;/code>.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>&lt;code>ON_REQUEST&lt;/code>&lt;/strong>: (&lt;strong>default&lt;/strong>) The state is loaded lazily when the service is requested. This maintains LocalStack&amp;rsquo;s lazy-loading behavior for AWS services.&lt;/li>
&lt;li>&lt;strong>&lt;code>ON_STARTUP&lt;/code>&lt;/strong>: The state of all services in the snapshot is restored when LocalStack starts up. This means that services that have stored state are also started on LocalStack start, which will increase the startup time, but also give you immediate feedback whether the state was restored correctly.&lt;/li>
&lt;li>&lt;strong>&lt;code>MANUAL&lt;/code>&lt;/strong>: Turns off automatic loading of snapshots and gives you control through the internal state endpoints.&lt;/li>
&lt;/ul>
&lt;h3 id="endpoints">Endpoints&lt;/h3>
&lt;p>As mentioned, with the &lt;code>MANUAL&lt;/code> save or load strategy you can trigger snapshotting manually when it best suits your application flow.&lt;/p>
&lt;ul>
&lt;li>&lt;code>POST /_localstack/state/&amp;lt;service&amp;gt;/save&lt;/code> take a snapshot the given service&lt;/li>
&lt;li>&lt;code>POST /_localstack/state/&amp;lt;service&amp;gt;/load&lt;/code> load the most recent snapshot of the given service&lt;/li>
&lt;/ul>
&lt;p>For example, a snapshot for a particular service (e.g., &lt;code>s3&lt;/code>) can be triggered by running the following command. The service name refers to the AWS service code.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -X POST http://localhost:4566/_localstack/state/s3/save&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>It is also possible to take and load a snapshot of all the services at once. We provide the following endpoints:&lt;/p>
&lt;ul>
&lt;li>&lt;code>POST /_localstack/state/save&lt;/code>&lt;/li>
&lt;li>&lt;code>POST /_localstack/state/load&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The response streams line by line the service that has been saved/loaded and the status of the operation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -X POST localhost:4566/_localstack/state/save
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;service&amp;#34;: &amp;#34;sqs&amp;#34;, &amp;#34;status&amp;#34;: &amp;#34;ok&amp;#34;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;service&amp;#34;: &amp;#34;s3&amp;#34;, &amp;#34;status&amp;#34;: &amp;#34;ok&amp;#34;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="service-coverage">Service coverage&lt;/h2>
&lt;p>Although we are working to support both snapshot-based persistence and Cloud pods for all AWS services,
there are some common issues, known limitations, and also services that are not well tested for persistence support.
An overview is available &lt;a href="/user-guide/state-management/support/">here&lt;/a>.&lt;/p>
&lt;p>Please help us improve persistence support by reporting bugs on our &lt;a href="https://github.com/localstack/localstack/issues/new/choose">GitHub issue tracker&lt;/a>.&lt;/p>
&lt;h2 id="technical-details">Technical Details&lt;/h2>
&lt;p>State persistence in LocalStack works on a per-service basis and uses a custom state serialization protocol based on &lt;a href="https://docs.python.org/3/library/pickle.html">Python&amp;rsquo;s pickle mechanism&lt;/a>.
Some services also store application-specific data, which we call &lt;em>assets&lt;/em>.
For example, when you start an RDS PostgreSQL database, LocalStack not only stores the RDS resource information, but also the PostgreSQL data.
Another example is Kinesis, which persists some data in form of JSON objects per account, or DynamoDB that serializes its stat into an SQLite database per account and region.&lt;/p>
&lt;p>The current LocalStack snapshot is stored into &lt;code>/var/lib/localstack/state&lt;/code>, and separated into &lt;code>api_states&lt;/code> (LocalStack internal state), and assets (one directory per service).
Here is what this looks like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>/var/lib/localstack/state # state directory
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── api_states # serialized LocalStack stores
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── dynamodb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── store.state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── ec2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── backend.state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── iot
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── store.state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── lambda
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── store.state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── dynamodb # dynamodb assets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── 000000000000_eu-central-1.db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── 886002141588_us-east-1.db
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└── kinesis # kinesis assets
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ├── 000000000000.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> └── 886002141588.json
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To load a snapshot, LocalStack traverses the state directory and deserializes state files to loads them into the memory.
When we restore server backends (like an RDS server or DynamoDB server), we make sure that they are configured to use the state stored in the respective asset directory.&lt;/p>
&lt;p>When LocalStack saves snapshots, it has to lock the particular service to avoid state pollution.
That means that, while a snapshot for a particular service is created, all requests to the service are blocked.
Depending on what you are building, you may find this behavior is slowing down your application.
In most cases, the &lt;code>ON_SHUTDOWN&lt;/code> save strategy should solve this problem.&lt;/p></description></item><item><title>User-Guide: Export &amp; Import State</title><link>/user-guide/state-management/export-import-state/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/export-import-state/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>The Export/Import State feature enables you to export the state of your LocalStack instance into a file and import it into another LocalStack instance. This feature is useful when you want to save your LocalStack instance&amp;rsquo;s state for later use.&lt;/p>
&lt;h2 id="localstack-cli">LocalStack CLI&lt;/h2>
&lt;p>The LocalStack CLI enables you to export your infrastructure state to a file and import it into another LocalStack instance. You can access the state management commands by running &lt;code>localstack state&lt;/code> in your terminal.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack state --help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: localstack state [OPTIONS] COMMAND [ARGS]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (Preview) Manage and manipulate the localstack state.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> The state command group allows you to interact with LocalStack&amp;#39;s state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read more: https://docs.localstack.cloud/references/persistence-
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> mechanism/#snapshot-based-persistence
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h, --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export Export the state of LocalStack services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> import Import the state of LocalStack services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reset Reset the state of LocalStack services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="export-the-state">Export the State&lt;/h3>
&lt;p>To export the state, you can run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack state export &amp;lt;file-name&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can specify a file path to export the state to. If you do not specify a file path, the state will be exported to the current working directory into a file named &lt;code>ls-state-export&lt;/code>. You can specify the following flags to customize the export:&lt;/p>
&lt;ul>
&lt;li>&lt;code>--services&lt;/code>: Specify the services to export. You can specify multiple services by separating them with a comma. If you do not specify any services, all services will be exported.&lt;/li>
&lt;li>&lt;code>--format&lt;/code>: Specify the format of the exported state. For example, you can specify &lt;code>json&lt;/code> to specify the save command output as JSON.&lt;/li>
&lt;/ul>
&lt;h3 id="import-the-state">Import the State&lt;/h3>
&lt;p>To import the state, you can run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack state import &amp;lt;file-name&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>&amp;lt;file-name&amp;gt;&lt;/code> argument is required and specifies the file path to import the state from. The file should be generated from a previous export.&lt;/p>
&lt;h2 id="web-application">Web Application&lt;/h2>
&lt;p>The LocalStack Web Application enables you to export your infrastructure state to a file and import it into another LocalStack instance. The Local mode allows you to perform local exports and imports of your LocalStack instance&amp;rsquo;s state.&lt;/p>
&lt;img src="export-import-state-local.png" alt="LocalStack Export/Import State Local Mode" title="LocalStack Export/Import State Local Mode" width="900" />
&lt;h3 id="export-the-state-1">Export the State&lt;/h3>
&lt;p>To export the state, follow these steps:&lt;/p>
&lt;ol>
&lt;li>Navigate to the &lt;strong>Local&lt;/strong> tab within the &lt;a href="https://app.localstack.cloud/inst/default/state">Export/Import State&lt;/a> page.&lt;/li>
&lt;li>Create AWS resources locally as needed.&lt;/li>
&lt;li>Click on the &lt;strong>Export State&lt;/strong> button. This action will initiate the download of a ZIP file.&lt;/li>
&lt;/ol>
&lt;p>The downloaded ZIP file contains your container state, which can be injected into another LocalStack instance for further use.&lt;/p>
&lt;h3 id="import-the-state-1">Import the State&lt;/h3>
&lt;p>To import the state, follow these steps:&lt;/p>
&lt;ol>
&lt;li>Navigate to the &lt;strong>Local&lt;/strong> tab within the &lt;a href="https://app.localstack.cloud/inst/default/state">Export/Import State&lt;/a> page.&lt;/li>
&lt;li>Upload the ZIP file that contains your container state. This action will restore your previously loaded AWS resources.&lt;/li>
&lt;/ol>
&lt;p>To confirm the successful injection of the container state, visit the respective &lt;a href="https://app.localstack.cloud/inst/default/resources">Resource Browser&lt;/a> for the services and verify the resources.&lt;/p></description></item><item><title>User-Guide: Launchpad</title><link>/user-guide/state-management/launchpad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/launchpad/</guid><description>
&lt;p>The LocalStack Cloud Pods Launchpad enables you to easily share and inject Cloud Pods into a LocalStack instance.&lt;/p>
&lt;h2 id="creating-your-shareable-link">Creating your shareable link&lt;/h2>
&lt;p>You can visit &lt;a href="https://app.localstack.cloud/launchpad">Cloud Pods launchpad&lt;/a> to generate a shareable link for your pods.&lt;/p>
&lt;p>&lt;img src="link-generator.png" alt="Cloud Pods Launchpad Link Generator">&lt;/p>
&lt;p>Enter a public URL to your pod Cloud Pod the first input field, then click &lt;strong>Generate Link&lt;/strong>. You can copy the resulting link and share it with others. Additionally, you have the option to copy a markdown snippet for quickly adding a badge to your repository.&lt;/p>
&lt;div class="alert alert-danger" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;p>The Launchpad accepts any URL as input and directly passes it to your LocalStack instance for Cloud Pod injection. As a result, this process may carry the risk of unintended side effects, as there is no validation applied to the URL provided to the launchpad.&lt;/p>
&lt;p>Furthermore, it&amp;rsquo;s essential to exercise caution and only use URLs that you trust when utilizing the launchpad, as the URL is displayed in the user interface.&lt;/p>
&lt;/div>
&lt;h2 id="adding-a-badge-to-your-repository">Adding a badge to your repository&lt;/h2>
&lt;p>To add a badge to your README that links to the Cloud Pod Launchpad, you can include the following markdown snippet:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-markdown" data-lang="markdown">&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#204a87;font-weight:bold">![Launch LocalStack Cloudpod&lt;/span>](&lt;span style="color:#c4a000">https://localstack.cloud/gh/launch-pod-badge.svg&lt;/span>)](https://app.localstack.cloud/launchpad?url=url_of_your_pod)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="badge-demo.png" alt="Cloud Pods Badge Demonstration">&lt;/p>
&lt;p>You need to include the &lt;code>url_of_your_pod&lt;/code> as the &lt;code>url&lt;/code> query parameter in the URL. For instance, if your Cloud Pod is hosted within the same repository, simply use the URL that directs to the raw Cloud Pod file.&lt;/p>
&lt;p>Additionally, you can utilize the &lt;a href="#creating-your-sharable-link">Link Generator&lt;/a> to generate a shareable link for your pod and copy the corresponding markdown snippet for your repository. Check out a proper example &lt;a href="https://github.com/localstack/cloud-pod-badge" target="_blank">on th Cloud Pod badge GitHub repository&lt;/a>.&lt;/p>
&lt;h2 id="troubleshooting-common-problems">Troubleshooting common problems&lt;/h2>
&lt;p>In this section we present an overview of common problems and how to solve them.&lt;/p>
&lt;h3 id="localstack-is-not-running">LocalStack is not running&lt;/h3>
&lt;p>If your LocalStack instance is not running, you will encounter the following error message:&lt;/p>
&lt;p>&lt;img src="ls-not-running.png" alt="Cloud Pods Launchpad Error LocalStack not running">&lt;/p>
&lt;p>Start your LocalStack instance and attempt the operation once more. For detailed instructions on starting LocalStack, refer to the &lt;a href="/getting-started/">Getting Started&lt;/a> section.&lt;/p>
&lt;h3 id="failed-to-load-metadata">Failed to load metadata&lt;/h3>
&lt;p>If the launchpad encounters difficulties while loading the metadata of your pod, you will receive the following error message:&lt;/p>
&lt;p>&lt;img src="metadata-load-failed.png" alt="Cloud Pods Launchpad Error failed to load metadata">&lt;/p>
&lt;p>This can occur when the pod is no longer accessible or if the URL provided is invalid. Review the URL and attempt the operation once more.&lt;/p>
&lt;h3 id="failed-to-inject-pod">Failed to inject pod&lt;/h3>
&lt;p>If the launchpad is unable to successfully inject the pod into your LocalStack instance, you will encounter a &lt;code>Pod injection failed&lt;/code> message in the log. This issue may arise from various factors, such as version disparities. For further insights and information, please review your LocalStack logs.&lt;/p></description></item><item><title>User-Guide: CLI command reference</title><link>/user-guide/state-management/pods-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/pods-cli/</guid><description>
&lt;p>This reference provides descriptions and example commands for LocalStack Cloud Pods CLI (&lt;code>pod&lt;/code>) commands.&lt;/p>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>Use the following syntax to run &lt;code>localstack pod&lt;/code> commands from your terminal window:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod [OPTIONS] COMMAND [ARGS]...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the above syntax:&lt;/p>
&lt;ul>
&lt;li>&lt;code>COMMAND&lt;/code> specifies the operation you want to perform with your Cloud Pods (&lt;code>save&lt;/code> or &lt;code>load&lt;/code>).&lt;/li>
&lt;li>&lt;code>OPTIONS&lt;/code> specifies the optional flags.&lt;/li>
&lt;li>&lt;code>ARGS&lt;/code> specifies the command arguments.&lt;/li>
&lt;/ul>
&lt;h2 id="commands">Commands&lt;/h2>
&lt;p>The following section lists the available commands for the Cloud Pods CLI.
You can have an overview of these command by typing &lt;code>localstack pod --help&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod [OPTIONS] COMMAND [ARGS]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Manage the state of your instance via Cloud Pods.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete Delete a Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inspect Inspect the contents of a Cloud Pod This command shows the...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list List all available Cloud Pods
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> load Load the state of a Cloud Pod into the application runtime/...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote Manage cloud pod remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> save Create a new Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions List all available versions for a Cloud Pod This command lists...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="save">&lt;code>save&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod save [OPTIONS] NAME [REMOTE]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Save the current state of the LocalStack container in a Cloud Pod.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A Cloud Pod can be registered and saved with different storage options,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> called remotes. By default, Cloud Pods are hosted in the LocalStack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> platform. However, users can decide to store their Cloud Pods in other
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remotes, such as AWS S3 buckets or ORAS registries.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> An optional message can be attached to any Cloud Pod. Furthermore, one
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> could decide to export only a subset of services with the optional
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --service option.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> To use the LocalStack platform for storage, the desired Cloud Pod&amp;#39;s name will suffice, e.g.:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localstack pod save &amp;lt;pod_name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Please be aware that each following save invocation with the same name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> will result in a new version being created.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> To save a local copy of your state, you can use the &amp;#39;localstack state export&amp;#39; command.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -m, --message TEXT Add a comment describing this Cloud Pod&amp;#39;s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -s, --services TEXT Comma-delimited list of services to push in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> the Cloud Pod (all by default)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --visibility [public|private] Set the visibility of the Cloud Pod [`public`
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> or `private`]. Does not create a new version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [json] The formatting style for the save command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>save&lt;/code> command allows you to save a new version of a Cloud Pod targeting a specific remote.
To save and load the state locally, you can use the command in the &lt;code>localstack state&lt;/code> group.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save my-pod&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command generates a new version of &lt;code>my-pod&lt;/code> and uploads it on the LocalStack platform.
When pushing an already existing pod, a new version is created and subsequently uploaded to the platform.&lt;/p>
&lt;p>Users also have the option to select a specific subset of AWS services they want to include in the new Cloud Pod version using the &lt;code>--services&lt;/code> option.&lt;/p>
&lt;p>Users who want to make a Cloud Pod accessible outside their organization can mark it as &lt;strong>public&lt;/strong> with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save --name my-pod --visibility public&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command does not create a new version and requires a version already registered with the platform. The CLI manual for the &lt;code>save&lt;/code> command is as follows:&lt;/p>
&lt;h3 id="load">&lt;code>load&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod load [OPTIONS] NAME [REMOTE]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Load the state of a Cloud Pod into the application runtime/ Users can
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> import Cloud Pods from different remotes, with the LocalStack platform
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> being the default one.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Loading the state of a Cloud Pod into LocalStack might cause some
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conflicts with the current state of the container. By default, LocalStack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> will attempt a best-effort merging strategy between the current state and
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> the one from the Cloud Pod. For a service X present in both the current
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> state and the Cloud Pod, we will attempt to merge states across different
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> accounts and regions. If the service X has a state for the same account
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> and region both in the running container and the Cloud Pod, the latter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> will be used. If a service Y is present in the running container but not
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> in the Cloud Pod, it will be left untouched. With `--merge overwrite`, the
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> state of the Cloud Pod will completely replace the state of the running
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> To load a local copy of a LocalStack state, you can use the &amp;#39;localstack state import&amp;#39; command.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --merge [overwrite|merge] The merge strategy to adopt when loading the
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -y, --yes Automatic yes to prompts. Assume a positive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer to all prompts and run non-interactively
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>load&lt;/code> command is the inverse operation of &lt;code>save&lt;/code>.
It retrieves the content of a previously stored Cloud Pod a remote (by default, theLocalStack platform) and injects it into the LocalStack container.&lt;/p>
&lt;h3 id="delete">&lt;code>delete&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod delete [OPTIONS] NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Delete a Cloud Pod registered on the remote LocalStack platform.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This command will remove all the versions of a Cloud Pod, and the
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> operation is not reversible.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>delete&lt;/code> command let users delete a Cloud Pod stored in the remote platform.
The CLI manual for the &lt;code>delete&lt;/code> command is as follows:&lt;/p>
&lt;h3 id="inspect">&lt;code>inspect&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod inspect [OPTIONS] NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Inspect the contents of a Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This command shows the content of a Cloud Pod. By default, it starts a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curses interface which allows an interactive inspection of the contents in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> the Cloud Pod.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [curses|rich|json]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> The formatting style for the inspect command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>inspect&lt;/code> command simply lets the user inspect the content of a Cloud Pod.&lt;/p>
&lt;h3 id="list">&lt;code>list&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod list [OPTIONS] [REMOTE]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List all the Cloud Pods available for a single user, or for an entire
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> organization, if the user is part of one.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> With the --public flag, it lists the all the available public Cloud Pods.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A public Cloud Pod is available across the boundary of a user one/or
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> organization. In other words, any public Cloud Pod can be injected by any
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> other user holding a LocalStack Pro (or above) license.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -p, --public List all the available public Cloud Pods
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [table|json] The formatting style for the list pods command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>list&lt;/code> command lists all of the available Cloud Pods.
It shows all the pods available for a single user and its organization by default.&lt;/p>
&lt;h3 id="versions">&lt;code>versions&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod versions [OPTIONS] NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List all available versions for a Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This command lists the versions available for a Cloud Pod. Each invocation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> of the save command is going to create a new version for a named Cloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pod, if a Pod with such name already does exist in the LocalStack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> platform.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [table|json] The formatting style for the version command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>versions&lt;/code> command lists all the available versions of a Cloud Pod.
The CLI manual for the &lt;code>version&lt;/code> command is as follows:&lt;/p>
&lt;h3 id="remote">&lt;code>remote&lt;/code>&lt;/h3>
&lt;p>The &lt;code>remote&lt;/code> command group lets you manage custom Cloud Pod remotes, to enable alternative storage backends in addition to the default LocalStack managed platform.
It offers 3 commands: &lt;code>add&lt;/code>, &lt;code>delete&lt;/code>, and &lt;code>list&lt;/code>.&lt;/p>
&lt;p>For more info about remote usage, check our &lt;a href="https://docs.localstack.cloud/user-guide/cloud-pods/remotes/">documentation&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod remote [OPTIONS] COMMAND [ARGS]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Manage cloud pod remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add Add a remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete Delete a remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list Lists the available remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h4 id="remote-add">&lt;code>remote add&lt;/code>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod remote add [OPTIONS] NAME URL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Add a new remote for Cloud Pods.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A remote is the place where your Cloud Pods are stored. By default, Cloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pods are store in the LocalStack platform.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h4 id="remote-delete">&lt;code>remote delete&lt;/code>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod remote delete [OPTIONS] NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Remove a remote for Cloud Pods.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h4 id="remote-list">&lt;code>remote list&lt;/code>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod remote list [OPTIONS]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [table|json] The formatting style for the remotes command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;hr>
&lt;h1 id="local-commands">Local Commands&lt;/h1>
&lt;p>In addition to the commands in the &lt;code>pod&lt;/code> group, we also offer a simple alternative to save and load the LocalStack state.
The &lt;code>state&lt;/code> group offers two commands to export and import the state of the LocalStack container to/from a zip file from the host machine.&lt;/p>
&lt;h2 id="state-syntax">&lt;code>state&lt;/code> syntax&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: state [OPTIONS] COMMAND [ARGS]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (Preview) Manage and manipulate the localstack state.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> The state command group allows you to interact with LocalStack&amp;#39;s state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read more: https://docs.localstack.cloud/references/persistence-mechanism/#snapshot-based-persistence
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export Export the state of LocalStack services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> import Import the state of LocalStack services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reset Reset the state of LocalStack services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="state-export">&lt;code>state export&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: state export [OPTIONS] [DESTINATION]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Save the current state of the LocalStack container to a file on the local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> disk. This file can be restored at any point in time using the `localstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> state import` command. Please be aware that this might not be possible
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> when importing the state with a different version of LocalStack.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> If you are looking for a managed solution to handle the state of your
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LocalStack container, please check out the Cloud Pods feature:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> https://docs.localstack.cloud/user-guide/tools/cloud-pods/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Use the DESTINATION argument to specify an absolute path for the exported
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file or a filename in current working directory. If no destination is
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> specified, a file named `ls-state-export` will be saved in the current
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> working directory.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Examples:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localstack state export my-state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localstack state export /home/johndoe/my-state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> You can also specify a subset of services to export. By default, the state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> of all running services is exported.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -s, --services TEXT Comma-delimited list of services to reset. By default,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> the state of all running services is exported.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [json] The formatting style for the save command output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="state-import">&lt;code>state import&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: state import [OPTIONS] SOURCE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Load the state of LocalStack from a file into the running container. The
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SOURCE file must have been generated from a previous `localstack state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export` command. Please be aware that it might not be possible to import a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> state generated from a different version of LocalStack.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Examples:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localstack state import my-state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localstack state import /home/johndoe/my-state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="state-reset">&lt;code>state reset&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: state reset [OPTIONS]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Reset the service states of the current LocalStack runtime.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This command invokes a reset of services in the currently running
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LocalStack container. By default, all services are rest. The `services`
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options allows to select a subset of services which should be reset.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This command tries to automatically discover the running LocalStack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instance. If LocalStack has not been started with `localstack start` (and
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> is not automatically discoverable), please set `LOCALSTACK_HOST`.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -s, --services TEXT Comma-delimited list of services to reset. By default,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> the state of all running services is reset.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Persistence Coverage for AWS Services</title><link>/user-guide/state-management/support/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/state-management/support/</guid><description>
&lt;h2 id="persistence-coverage-overview">Persistence Coverage Overview&lt;/h2>
&lt;div class="coverage-report">
&lt;table>
&lt;thead>
&lt;tr>
&lt;th class="coverage-report-header-1">Service&lt;/th>
&lt;th class="coverage-report-header-2">Supported&lt;/th>
&lt;th class="coverage-report-header-1">Persistence Test Suite&lt;/th>
&lt;th class="coverage-report-header-2">Limitations&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/account/">AWS Account Management&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/acm/">ACM (AWS Certificate Manager)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/acm-pca/">AWS Private Certificate Authority (CA)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/amplify/">Amplify&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/apigateway/">API Gateway&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/appconfig/">AppConfig&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/applicationautoscaling/">applicationautoscaling&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/appsync/">AppSync&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/athena/">Athena&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/autoscaling/">Auto Scaling&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/backup/">Backup&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/batch/">Batch&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ce/">CE (Cost Explorer API)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cloudformation/">CloudFormation&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cloudfront/">CloudFront&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cloudtrail/">CloudTrail&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cloudwatch/">CloudWatch&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/codecommit/">CodeCommit&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cognito-identity/">Cognito Identity&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cognito-idp/">Cognito IDP (Cognito User Pools API)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/config/">Config&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/dms/">dms&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/docdb/">DocumentDB&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/dynamodb/">DynamoDB&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/dynamodbstreams/">DynamoDB Streams&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ec2/">EC2 (Elastic Compute Cloud)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ecr/">ECR (Elastic Container Registry)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ecs/">ECS (Elastic Container Service)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/efs/">EFS (Elastic File System)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/eks/">EKS (Elastic Kubernetes Service)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elasticache/">ElastiCache&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elasticbeanstalk/">Elastic Beanstalk&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elb/">ELB (Elastic Load Balancer)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elbv2/">ELB v2 (Elastic Load Balancer v2)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/emr/">EMR (Elastic MapReduce)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/es/">ES (OpenSearch, legacy Elasticsearch)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/events/">EventBridge&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/firehose/">Kinesis Data Firehose&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/fis/">FIS (Fault Injection Simulator)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/glacier/">Glacier (S3 Glacier)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/glue/">Glue&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/iam/">IAM (Identity and Access Management)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/identitystore/">identitystore&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/iot/">IoT (Internet of Things)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/iot-data/">IoT Data&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/iotanalytics/">IoT Analytics&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/iotwireless/">IoT Wireless&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/kafka/">MSK (Managed Streaming for Apache Kafka)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>The Kafka instances are restored. However, their content is not.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/kinesis/">Kinesis&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/kinesisanalytics/">Kinesis Data Analytics API&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/kinesisanalyticsv2/">Kinesis Data Analytics API v2&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/kms/">KMS (Key Management Service)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/lakeformation/">Lake Formation&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/lambda/">Lambda&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>Hot-Reloading is currently not supported (see https://github.com/localstack/localstack/issues/9974).&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/logs/">CloudWatch Logs&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/managedblockchain/">managedblockchain&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/mediaconvert/">mediaconvert&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/mediastore/">Elemental MediaStore&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/memorydb/">MemoryDB for Redis&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/mq/">Amazon MQ&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/mwaa/">MWAA (Managed Workflows for Apache Airflow)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/neptune/">Neptune&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/opensearch/">OpenSearch&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/organizations/">Organizations&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/pinpoint/">pinpoint&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/pipes/">Pipes (EventBridge Pipes)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/qldb/">QLDB (Quantum Ledger Database)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ram/">ram (Resource Access Manager)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/rds/">RDS (Relational Database Service)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>MSSQL does not support persistence.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/rds-data/">RDS data (Relational Database Service Data)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/redshift/">Redshift&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/resource-groups/">Resource Groups&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/resourcegroupstaggingapi/">Resource Groups Tagging API&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/route53/">Route 53&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/route53resolver/">Route 53 Resolver&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/s3/">S3 (Simple Storage Service)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/sagemaker/">SageMaker&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/scheduler/">scheduler (EventBridge Scheduler)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/secretsmanager/">Secrets Manager&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/serverlessrepo/">Serverless Application Repository&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/servicediscovery/">Service Discovery (Cloud Map)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ses/">SES (Simple Email Service)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/sesv2/">SES v2 (Simple Email Service v2)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/sns/">SNS (Simple Notification Service)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/sqs/">SQS (Simple Queue Service)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ssm/">SSM (Web Services Systems Manager)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/sso-admin/">sso-admin (IAM Identity Center (successor to Single Sign-On))&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/stepfunctions/">Step Functions&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/sts/">STS (Security Token Service)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/support/">Support API&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/swf/">SWF (Simple Workflow Service)&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/textract/">textract&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/timestream/">timestream&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/transcribe/">Transcribe&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
✔️
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/transfer/">Transfer&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/verifiedpermissions/">verifiedpermissions&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/wafv2/">wafv2&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green">&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/xray/">X-Ray&lt;/a>&lt;/td>
&lt;td class="coverage-shadow-overlay-green">
&lt;/td>
&lt;td class="coverage-shadow-overlay-green"> ✔️ &lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;br/>
&lt;/div>
&lt;h3 id="terminology">Terminology&lt;/h3>
&lt;ul>
&lt;li>&lt;strong>Persistence Test Suite&lt;/strong>: tested by LocalStack&amp;rsquo;s internal persistence test suite.
To test persistence, we use an approach similar to snapshot parity test:
we first record API responses from LocalStack, we then reset and restore the snapshotted state,
and finally verify that the same API responses matches with the initial ones.&lt;/li>
&lt;/ul></description></item></channel></rss>