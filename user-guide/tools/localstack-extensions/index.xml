<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs â€“ LocalStack Extensions</title><link>/user-guide/tools/localstack-extensions/</link><description>Recent content in LocalStack Extensions on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/user-guide/tools/localstack-extensions/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Guide: AWS Replicator</title><link>/user-guide/tools/localstack-extensions/aws-replicator-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/localstack-extensions/aws-replicator-extension/</guid><description>
&lt;p>AWS Replicator Extension is a LocalStack extension that allows you to replicate AWS resources into your LocalStack instance.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This Extension is experimental and still under active development. Report any issues or feature requests on our &lt;a href="https://github.com/localstack/localstack-extensions">GitHub repository&lt;/a>.
&lt;/div>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>To install the CLI extension, use the following &lt;code>pip&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>pip install &amp;#34;git+https://github.com/localstack/localstack-extensions/#egg=localstack-extension-aws-replicator&amp;amp;subdirectory=aws-replicator&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To install the Extension itself (server component running inside LocalStack), use the following &lt;code>extensions&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack extensions install &amp;#34;git+https://github.com/localstack/localstack-extensions/#egg=localstack-extension-aws-replicator&amp;amp;subdirectory=aws-replicator&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>This extension currently offers two modes of operation:&lt;/p>
&lt;ul>
&lt;li>AWS connection proxy&lt;/li>
&lt;li>Resource replicator CLI&lt;/li>
&lt;/ul>
&lt;h3 id="aws-connection-proxy">AWS Connection Proxy&lt;/h3>
&lt;p>The AWS connection proxy can be used to forward certain API calls in LocalStack to real AWS, in order to enable seamless transition between local and remote resources.&lt;/p>
&lt;p>For example, in order to forward all API calls for DynamoDB/S3/Cognito to real AWS, the proxy can be started via the CLI as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix"># &lt;/span>configure terminal session to allow access to a real cloud account
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export AWS_ACCESS_KEY_ID=... AWS_SECRET_ACCESS_KEY=...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix"># &lt;/span>start proxy via the CLI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack aws proxy -s dynamodb,s3,cognito-idp&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
Be careful when using the proxy. Ensure to never give access to production accounts or any critical/sensitive data!
&lt;/div>
&lt;h3 id="resource-replicator-cli">Resource Replicator CLI&lt;/h3>
&lt;p>Resource Replicator CLI can be used to replicate the state, e.g., an SQS queue and the messages contained in it, from AWS into your LocalStack instance.&lt;/p>
&lt;p>To use the resource replicator, make sure that you have access to AWS configured in your terminal. The extension will only talk to AWS in read-only mode, and will &lt;strong>not&lt;/strong> make any changes to your real AWS account.&lt;/p>
&lt;p>The following command can be used to replicate SQS queues (including their messages) into your LocalStack instance:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack aws replicate -s sqs&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the command has completed, you should be able to list and interact with the queue that was replicated into your local account:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sqs list-queues
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sqs receive-message --queue-url ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Stripe</title><link>/user-guide/tools/localstack-extensions/stripe-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/localstack-extensions/stripe-extension/</guid><description>
&lt;p>The Stripe Extension provides a mocked version of Stripe as a service, via &lt;a href="https://github.com/adrienverge/localstripe">&lt;code>localstripe&lt;/code>&lt;/a>, a stateful Stripe server implementation in Python. The extension is purely for testing purposes, and is not intended for production use. The LocalStack Stripe Extension does not modify &lt;code>localstripe&lt;/code> in any way.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This Extension is experimental and still under active development. Please report any issues or feature requests on our &lt;a href="https://github.com/localstack/localstack-extensions">GitHub repository&lt;/a>.
&lt;/div>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>To install the Stripe Extension, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack extensions install &amp;#34;git+https://github.com/localstack/localstack-extensions/#egg=localstack-extensions-stripe&amp;amp;subdirectory=stripe&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>After installation, you can query Strip either through &lt;a href="https://localhost:4566/stripe">&lt;code>localhost:4566/stripe&lt;/code>&lt;/a> or &lt;a href="https://stripe.localhost.localstack.cloud:4566">&lt;code>stripe.localhost.localstack.cloud:4566&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl stripe.localhost.localstack.cloud:4566/v1/customers \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -u sk_test_12345: \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -d description=&amp;#34;Customer data for Alice&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Miniflare</title><link>/user-guide/tools/localstack-extensions/miniflare-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/localstack-extensions/miniflare-extension/</guid><description>
&lt;p>This extension makes &lt;a href="https://miniflare.dev/">Miniflare&lt;/a>, a simulator for developing and testing &lt;a href="https://workers.cloudflare.com/">Cloudflare Workers&lt;/a>, available directly in LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This Extension is experimental and still under active development. Report any issues or feature requests on our &lt;a href="https://github.com/localstack/localstack-extensions">GitHub repository&lt;/a>.
&lt;/div>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>To install the Extension, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack extensions install &amp;#34;git+https://github.com/localstack/localstack-extensions/#egg=localstack-extension-miniflare&amp;amp;subdirectory=miniflare&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can also install the Extension using the &lt;a href="https://app.localstack.cloud/extensions/remote?url=git+https://github.com/localstack/localstack-extensions/#egg=localstack-extension-miniflare&amp;amp;subdirectory=miniflare">Extensions Installer&lt;/a> which is available in the LocalStack Web Application.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>To publish the sample application to Miniflare running in LocalStack, we can use the &lt;code>wrangler&lt;/code> CLI with the following environment variables for local dev mode:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export CLOUDFLARE_API_TOKEN=test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export CLOUDFLARE_API_BASE_URL=http://localhost:4566/miniflare
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>wrangler publish&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>If you encounter issues with this configuration, such as receiving &lt;code>Fetch failed&lt;/code> error messages during &lt;code>wrangler publish&lt;/code>, consider using this alternative API endpoint:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export CLOUDFLARE_API_BASE_URL=https://localhost.localstack.cloud:4566/miniflare&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>Once deployed, the Cloudflare worker can be easily invoked via &lt;code>curl&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://hello.miniflare.localhost.localstack.cloud:4566/test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Hello World!
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: MailHog</title><link>/user-guide/tools/localstack-extensions/mailhog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/localstack-extensions/mailhog/</guid><description>
&lt;p>This extension makes &lt;a href="https://github.com/mailhog/MailHog">MailHog&lt;/a> for Web and API based STMP testing available directly in LocalStack.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>To install the Extension, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack extensions install &amp;#34;git+https://github.com/localstack/localstack-extensions/#egg=localstack-mailhog-extension&amp;amp;subdirectory=mailhog&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can also install the Extension using the &lt;a href="https://app.localstack.cloud/extensions/remote?url=git+https://github.com/localstack/localstack-extensions/#egg=localstack-extension-mailhog&amp;amp;subdirectory=mailhog">Extensions Installer&lt;/a> which is available in the LocalStack Web Application.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>When utilizing this extension, LocalStack is automatically set up to utilize the MailHog SMTP server for sending emails. You can execute the following AWS CLI commands to verify an email address and send an email:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ses verify-email-identity --email-address user1@yourdomain.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ses send-email \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --from user1@yourdomain.com \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --message &amp;#39;Body={Text={Data=&amp;#34;Hello from LocalStack to MailHog&amp;#34;}},Subject={Data=Test Email}&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --destination &amp;#39;ToAddresses=recipient1@example.com&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can then access the MailHog UI at &lt;a href="http://mailhog.localhost.localstack.cloud:4566/">&lt;strong>mailhog.localhost.localstack.cloud:4566&lt;/strong>&lt;/a> or &lt;a href="http://localhost:4566/mailhog/">&lt;strong>localhost:4566/mailhog&lt;/strong>&lt;/a> to view the received email.&lt;/p>
&lt;img src="mailhog-localstack-extension-ui.png" title="Mailhog LocalStack Extension" width="800" />
&lt;br>&lt;/br>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;p>To configure the Extension, you can make use of the &lt;a href="https://github.com/mailhog/MailHog/blob/master/docs/CONFIG.md">MailHog configuration environment variables&lt;/a>. When working with the LocalStack CLI, you can include them by employing the following syntax: &lt;code>DOCKER_FLAGS='-e MH_&amp;lt;var&amp;gt;=&amp;lt;val&amp;gt; -e ...'&lt;/code>. In case you are working within a Docker-Compose setup, simply add these variables as environment settings for the respective container.&lt;/p>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;p>The MailHog UI offers real-time updates through WebSockets, a feature not currently supported on the default &lt;code>:4566&lt;/code> port. If you encounter this error in the LocalStack logs when accessing the UI, rest assured that it can be safely ignored.&lt;/p></description></item><item><title>User-Guide: httpbin</title><link>/user-guide/tools/localstack-extensions/httpbin-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/localstack-extensions/httpbin-extension/</guid><description>
&lt;p>This extension makes &lt;a href="https://httpbin.org/">httpbin&lt;/a>, a simple HTTP Request &amp;amp; Response Service, available directly in LocalStack.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>To install the Extension, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack extensions install localstack-extension-httpbin&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can also install the Extension using the &lt;a href="https://app.localstack.cloud/extensions/remote?url=git+https://github.com/localstack/localstack-extensions/#egg=localstack-extension-httpbin&amp;amp;subdirectory=httpbin">Extensions Installer&lt;/a> which is available in the LocalStack Web Application.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>You can access the Flasgger UI by opening &lt;a href="http://httpbin.localhost.localstack.cloud:4566/">&lt;strong>httpbin.localhost.localstack.cloud:4566&lt;/strong>&lt;/a> in your web browser.&lt;/p>
&lt;img src="httpbin-localstack-extension-ui.png" title="httpbin LocalStack Extension UI" width="800" />
&lt;br>&lt;/br>
&lt;p>You can call the API endpoints just as you would call any other API endpoint with httpbin.&lt;/p>
&lt;img src="httpbin-localstack-extension-terminal.png" title="http LocalStack Extension on terminal" width="800" />
&lt;br>&lt;/br></description></item><item><title>User-Guide: Diagnosis Viewer</title><link>/user-guide/tools/localstack-extensions/diagnosis-viewer-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/localstack-extensions/diagnosis-viewer-extension/</guid><description>
&lt;p>This extension makes Diagnosis Viewer to view the diagnostics endpoint available directly in LocalStack.&lt;/p>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>To install the Extension, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack extensions install localstack-extension-diagnosis-viewer&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can also install the Extension using the &lt;a href="https://app.localstack.cloud/extensions/remote?url=git+https://github.com/localstack/localstack-extensions/#egg=localstack-extension-diagnosis-viewer&amp;amp;subdirectory=diagnosis-viewer">Extensions Installer&lt;/a> which is available in the LocalStack Web Application.&lt;/p>
&lt;h2 id="usage">Usage&lt;/h2>
&lt;p>This Extension serves as a Web User-Interface for the diagnostic endpoint of LocalStack, which becomes active when LocalStack is launched with &lt;code>DEBUG=1&lt;/code>.&lt;/p>
&lt;p>You can access the diagnostic endpoint through the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -s localhost:4566/_localstack/diagnose&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Subsequently, you can access the web UI at &lt;a href="http://localhost:4566/diapretty">&lt;strong>localhost:4566/diapretty&lt;/strong>&lt;/a>.&lt;/p>
&lt;img src="diagnosis-viewer-extension.png" title="LocalStack Diagnosis Viewer Extension" width="800" /></description></item></channel></rss>