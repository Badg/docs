<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs – Security Testing</title><link>/user-guide/security-testing/</link><description>Recent content in Security Testing on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/user-guide/security-testing/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Guide: IAM Policy Enforcement</title><link>/user-guide/security-testing/iam-enforcement/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/security-testing/iam-enforcement/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>IAM Policy Enforcement feature can be used to test your security policies and create a more realistic environment that more closely resembles real AWS. The environment configuration &lt;code>ENFORCE_IAM=1&lt;/code> is required while starting LocalStack to enable this feature. Per default, IAM enforcement is disabled, and all APIs can be accessed without authentication.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to IAM Policy Enforcement and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container with the &lt;code>DEBUG=1&lt;/code> and &lt;code>ENFORCE_IAM=1&lt;/code> environment variables set:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>DEBUG=1 ENFORCE_IAM=1 localstack start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>We will demonstrate IAM Policy Enforcement, by creating a user and obtaining the access/secret keys. We will make an attempt to create a bucket using the user’s credentials, which inevitably fails due to insufficient permissions.&lt;/p>
&lt;p>Lastly, a policy is attached to the user, granting the necessary &lt;code>s3:CreateBucket&lt;/code> permission, thereby enabling the successful creation of the bucket.&lt;/p>
&lt;h3 id="create-a-user">Create a user&lt;/h3>
&lt;p>To follow this guide, open two separate terminal sessions: &lt;strong>Terminal 1&lt;/strong> for the administrative IAM commands, which will utilize the default root IAM user, and &lt;strong>Terminal 2&lt;/strong> for executing the commands under the test IAM user you are about to create. This way, we can demonstrate the differentiation in access permissions between the administrative and test users in real-time.&lt;/p>
&lt;p>In &lt;strong>Terminal 1&lt;/strong>, execute the following commands to create a &lt;code>test&lt;/code> user and obtain the access/secret keys:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-user --user-name test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;User&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Path&amp;#34;: &amp;#34;/&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserName&amp;#34;: &amp;#34;test&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserId&amp;#34;: &amp;#34;d7ryukg7bls4rq1ihq1d&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Arn&amp;#34;: &amp;#34;arn:aws:iam::000000000000:user/test&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CreateDate&amp;#34;: &amp;#34;2023-11-03T12:20:12.332000Z&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-access-key --user-name test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AccessKey&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserName&amp;#34;: &amp;#34;test&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AccessKeyId&amp;#34;: &amp;#34;LKIAQAAAAAAAHFR7QTN3&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Status&amp;#34;: &amp;#34;Active&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SecretAccessKey&amp;#34;: &amp;#34;EYUHpIol7bRJpKd/28c/LI2C4bbEnp82LJCRwXRV&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CreateDate&amp;#34;: &amp;#34;2023-11-03T12:20:27Z&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="attempt-to-create-a-bucket">Attempt to create a bucket&lt;/h3>
&lt;p>Navigate to &lt;strong>Terminal 2&lt;/strong>, where we will configure the access keys for the user &lt;code>test&lt;/code> in the environment. Once the access keys are set, you will attempt to create an S3 bucket using these credentials.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export AWS_ACCESS_KEY_ID=LKIAQAAAAAAAHFR7QTN3 AWS_SECRET_ACCESS_KEY=EYUHpIol7bRJpKd/28c/LI2C4bbEnp82LJCRwXRV
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://mybucket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make_bucket failed: s3://mybucket An error occurred (AccessDeniedException) when calling the CreateBucket operation: Access to the specified resource is denied
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>As anticipated, the attempt to create the bucket fails with an &lt;code>AccessDeniedException&lt;/code> error, confirming that user &lt;code>test&lt;/code> lacks the necessary permissions for this action. You can view the LocalStack logs to validate the policy enforcement:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-11-03T12:21:10.971 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> l.s.i.p.handler : Request &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> service &lt;span style="color:#4e9a06">&amp;#39;s3&amp;#39;&lt;/span> by principal &lt;span style="color:#4e9a06">&amp;#39;arn:aws:iam::000000000000:user/test&amp;#39;&lt;/span> &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> operation &lt;span style="color:#4e9a06">&amp;#39;CreateBucket&amp;#39;&lt;/span> denied.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-03T12:21:10.972 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS s3.CreateBucket &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">403&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>AccessDenied&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="attach-a-policy-to-the-user">Attach a policy to the user&lt;/h3>
&lt;p>Let&amp;rsquo;s now return to &lt;strong>Terminal 1&lt;/strong> and execute the following commands to attach a policy to the user &lt;code>test&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-policy --policy-name p1 --policy-document &amp;#39;{&amp;#34;Version&amp;#34;:&amp;#34;2012-10-17&amp;#34;,&amp;#34;Statement&amp;#34;:[{&amp;#34;Effect&amp;#34;:&amp;#34;Allow&amp;#34;,&amp;#34;Action&amp;#34;:&amp;#34;s3:CreateBucket&amp;#34;,&amp;#34;Resource&amp;#34;:&amp;#34;*&amp;#34;}]}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam attach-user-policy --user-name test --policy-arn arn:aws:iam::000000000000:policy/p1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-a-bucket">Create a bucket&lt;/h3>
&lt;p>Now, let&amp;rsquo;s switch back to &lt;strong>Terminal 2&lt;/strong> and observe how the bucket creation succeeds with the &lt;code>test&lt;/code> IAM user:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://mybucket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make_bucket: mybucket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The bucket creation succeeds, confirming that the user &lt;code>test&lt;/code> now has the necessary permissions to perform this action. You can view the LocalStack logs to validate the policy enforcement:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-11-03T12:23:11.469 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS iam.CreatePolicy &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-03T12:23:15.753 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS iam.AttachUserPolicy &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-03T12:23:22.795 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_2&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS s3.CreateBucket &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can further use the IAM Policy Enforcement feature to test your Infrastructure as Code (IaC) deployments and ensure that your policies are correctly enforced. If the IAM policies are not correctly enforced, you will get an unsuccessful response from the API call, and the LocalStack logs will provide you with the necessary information to debug the issue.&lt;/p></description></item><item><title>User-Guide: Explainable IAM</title><link>/user-guide/security-testing/explainable-iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/security-testing/explainable-iam/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>The IAM Policy Engine logs output related to failed policy evaluation directly to the LocalStack logs. You can enable &lt;code>DEBUG=1&lt;/code> to gain visibility into these log messages, allowing you to identify the additional policies required for your request to succeed.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Explainable IAM and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container with the &lt;code>DEBUG=1&lt;/code> and &lt;code>ENFORCE_IAM=1&lt;/code> environment variables set:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>DEBUG=1 ENFORCE_IAM=1 localstack start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In this guide, we will create a policy for creating Lambda functions by only allowing the &lt;code>lambda:CreateFunction&lt;/code> permission. However we have not included the &lt;code>iam:PassRole&lt;/code> permission, and we will use the Policy Engine&amp;rsquo;s log to point out adding the necessary permission.&lt;/p>
&lt;h3 id="create-a-new-user">Create a new user&lt;/h3>
&lt;p>Create a policy document named &lt;code>policy_1.json&lt;/code> and add the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Version&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2012-10-17&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Statement&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Sid&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;FirstStatement&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Effect&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Allow&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Action&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;lambda:CreateFunction&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Resource&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now create a new user named &lt;code>test-user&lt;/code>, and put the policy in place by executing the following commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-user --user-name test-user
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;User&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Path&amp;#34;: &amp;#34;/&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserName&amp;#34;: &amp;#34;test-user&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserId&amp;#34;: &amp;#34;x8a2eu4mc91yqtjazvhp&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Arn&amp;#34;: &amp;#34;arn:aws:iam::000000000000:user/test-user&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CreateDate&amp;#34;: &amp;#34;2022-07-05T16:08:25.741000+00:00&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam put-user-policy --user-name test-user --policy-name policy1 --policy-document file://policy_1.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can further create an access key for the user by executing the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-access-key --user-name test-user&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Export the access key and secret key as environment variables:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export AWS_ACCESS_KEY_ID=...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export AWS_SECRET_ACCESS_KEY=...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="attempt-to-create-a-lambda-function">Attempt to create a Lambda function&lt;/h3>
&lt;p>You can now attempt to create a Lambda function using the newly created user&amp;rsquo;s credentials:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name test-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::000000000000:role/lambda-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime python3.8 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler handler.handler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb://function.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>An error occurred (AccessDeniedException) when calling the CreateFunction operation: Access to the specified resource is denied
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can inspect the LocalStack logs, to observe the presence of five log entries directly related to the denied request:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>INFO:localstack_ext.services.iam.policy_engine.handler: Request &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> service lambda &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> operation CreateFunction denied.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG:localstack_ext.services.iam.policy_engine.handler: Necessary permissions &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> this action: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Action &amp;#39;lambda:CreateFunction&amp;#39; for &amp;#39;arn:aws:lambda:us-east-1:000000000000:function:test-function&amp;#39;&amp;#34;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;Action &amp;#39;iam:PassRole&amp;#39; for &amp;#39;arn:aws:iam::000000000000:role/lambda-role&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG:localstack_ext.services.iam.policy_engine.handler: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> permissions have been explicitly denied: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG:localstack_ext.services.iam.policy_engine.handler: &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> permissions have been explicitly allowed: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Action &amp;#39;lambda:CreateFunction&amp;#39; for &amp;#39;arn:aws:lambda:us-east-1:000000000000:function:test-function&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG:localstack_ext.services.iam.policy_engine.handler: &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> permissions have been implicitly denied: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Action &amp;#39;iam:PassRole&amp;#39; for &amp;#39;arn:aws:iam::000000000000:role/lambda-role&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Upon examination, it becomes apparent that the action &lt;code>iam:PassRole&lt;/code> is not allowed; rather, it is implicitly denied for your user concerning the resource &lt;code>arn:aws:iam::000000000000:role/lambda-role&lt;/code>. This implies that there is no explicit deny statement in the relevant policies, but there is also no allow statement, resulting in the implicit denial of the action. You can incorporate this action into the policy.&lt;/p>
&lt;h3 id="incorporate-the-action-into-the-policy">Incorporate the action into the policy&lt;/h3>
&lt;p>For illustrative purposes, we will keep the example straightforward, using the same wildcard resource. Edit the &lt;code>policy_1.json&lt;/code> file to include the &lt;code>iam:PassRole&lt;/code> action:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Version&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2012-10-17&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Statement&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Sid&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;FirstStatement&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Effect&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Allow&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Action&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;lambda:CreateFunction&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;iam:PassRole&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Resource&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Re-run the Lambda &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html">&lt;code>CreateFunction&lt;/code>&lt;/a> API. You will notice that the request is now successful, and the function is created.&lt;/p>
&lt;h2 id="soft-mode">Soft Mode&lt;/h2>
&lt;p>Enabling &lt;code>IAM_SOFT_MODE=1&lt;/code> allows you to review the logs and assess whether your requests would have been denied or granted while executing your entire stack without disruptions.&lt;/p>
&lt;p>Using this, you can avoid the need for redeployment to address each missing permission individually, streamlining the debugging process and enhancing the efficiency of your IAM configurations.&lt;/p></description></item><item><title>User-Guide: IAM Policy Stream</title><link>/user-guide/security-testing/iam-policy-stream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/security-testing/iam-policy-stream/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>The IAM Policy Stream generates a steady stream of policies along with their corresponding principals or resources. When a request is made, it initially displays the principal or resource to which the policy will be attached. This is typically a service resource for resource-based policies, or an IAM principal for other cases. Subsequently, it displays the suggested policy. This feature aids in identifying the correct permissions for cloud applications and can help spot logical errors, such as unexpected actions in a policy.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users who are new to the IAM Policy Stream. It assumes you have basic knowledge of the AWS CLI (and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script).&lt;/p>
&lt;h3 id="start-your-localstack-container">Start your LocalStack container&lt;/h3>
&lt;p>To experiment with the IAM Policy Stream, initiate LocalStack using these flags:&lt;/p>
&lt;ol>
&lt;li>Enable debugging: &lt;code>DEBUG=1&lt;/code>&lt;/li>
&lt;li>Set your LocalStack API key: &lt;code>LOCALSTACK_API_KEY=&amp;lt;Your_API_Key&amp;gt;&lt;/code>&lt;/li>
&lt;li>Set the IAM Soft Mode: &lt;code>IAM_SOFT_MODE=1&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>You can execute the following command in your terminal to start your LocalStack container:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>DEBUG=1 IAM_SOFT_MODE=1 localstack start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="enable-iam-policy-stream">Enable IAM Policy Stream&lt;/h3>
&lt;p>To enable the IAM Policy Stream, open a new terminal window or tab and run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack aws iam stream&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-aws-resources">Create AWS Resources&lt;/h3>
&lt;p>In a separate terminal tab, we will create AWS resources to observe the necessary policies for them. In this example, we are creating an SNS topic using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns create-topic --name test-topic&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the other tab, the required policy will be generated. This policy can then be attached to an IAM role, enabling it to create the resource.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Attached to identity: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:root&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Policy:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Version&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2012-10-17&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Statement&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Sid&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Test3a92fb6c&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Effect&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Allow&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Action&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;sns:CreateTopic&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Resource&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:sns:us-east-1:000000000000:test-topic&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="web-application">Web Application&lt;/h2>
&lt;p>The LocalStack Web Application includes an IAM Policy Stream dashboard, which allows you to discover the necessary permissions for AWS API calls. The Web Application provides the following features:&lt;/p>
&lt;ol>
&lt;li>Provides a live display of API calls and the specific policies each call generates.&lt;/li>
&lt;li>Offers a real-time summary policy, merging all individual policies into one consolidated policy.&lt;/li>
&lt;li>Includes a feature to activate or deactivate this functionality on-the-fly for performance tuning.&lt;/li>
&lt;li>Presents an option to reset the stream, facilitating a clean slate to generate new policies.&lt;/li>
&lt;/ol>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">Tip&lt;/h4>
You don&amp;rsquo;t need to set additional configuration variables, such as &lt;code>DEBUG=1&lt;/code> or &lt;code>IAM_SOFT_MODE=1&lt;/code>, when using the IAM Policy Stream with Web Application. However, it won&amp;rsquo;t enforce policies or print IAM-related logs in the LocalStack container.
&lt;/div>
&lt;p>To use this feature, open the LocalStack Web Application in your browser, go to the IAM Policy Stream section, and click on &lt;strong>Enable&lt;/strong> to view the &lt;strong>Summary Policy&lt;/strong> and &lt;strong>Output&lt;/strong>.&lt;/p>
&lt;img src="live-policy-stream-enable.png" alt="IAM Policy Stream UI" title="IAM Policy Stream UI" width="800" class="img-fluid shadow rounded" />
&lt;br>&lt;br>
&lt;p>Run the following command in your terminal to generate a corresponding policy in the IAM Policy Stream dashboard:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns create-topic --name test-topic&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You will see the following output in the IAM Policy Stream dashboard:&lt;/p>
&lt;img src="policy-generate.png" alt="IAM Policy Stream UI" title="IAM Policy Stream UI" width="800" class="img-fluid shadow rounded" /></description></item></channel></rss>