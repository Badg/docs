<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs – Local AWS Services</title><link>/user-guide/aws/</link><description>Recent content in Local AWS Services on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/user-guide/aws/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Guide: AWS Service Feature Coverage</title><link>/user-guide/aws/feature-coverage/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/feature-coverage/</guid><description>
&lt;h2 id="coverage-levels">Coverage Levels&lt;/h2>
&lt;p>LocalStack provides emulation services for different AWS APIs (e.g., Lambda, SQS, SNS, &amp;hellip;), but the level of support with the real system differs and is categorized using the following system:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>&lt;/th>
&lt;th>&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>⭐⭐⭐⭐⭐&lt;/td>
&lt;td>Feature fully supported by LocalStack maintainers; feature is guaranteed to pass all or the majority of tests&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Feature partially supported by LocalStack maintainers&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Feature supports basic functionalities (e.g., CRUD operations)&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⭐⭐&lt;/td>
&lt;td>Feature should be considered unstable&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>⭐&lt;/td>
&lt;td>Feature is experimental and regressions should be expected&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>-&lt;/strong>&lt;/td>
&lt;td>Feature is not yet implemented&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="emulation-levels">Emulation Levels&lt;/h2>
&lt;ul>
&lt;li>CRUD: The service accepts requests and returns proper (potentially static) responses. No additional business logic besides storing entities.&lt;/li>
&lt;li>Emulated: The service imitates the functionality, including synchronous and asynchronous business logic operating on service entities.&lt;/li>
&lt;/ul>
&lt;h2 id="aws-feature-coverage">AWS Feature Coverage&lt;/h2>
&lt;p>In the coverage table below, the features are marked with their respective availability across different LocalStack versions:&lt;/p>
&lt;ul>
&lt;li>Community image (default, if not marked)&lt;/li>
&lt;li>Pro image (marked with &lt;strong>Pro&lt;/strong>)&lt;/li>
&lt;/ul>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Service / Feature&lt;/th>
&lt;th>Coverage Level&lt;/th>
&lt;th>Emulation Level&lt;/th>
&lt;th>Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;strong>AWS Certificate Manager (ACM)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_acm/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Certificates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Account Configuration&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/amplify/">&lt;strong>Amplify&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_amplify/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Apps&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backend Environments&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Branches&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deployments&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domain Associations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Webhooks&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>API Gateway&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_apigateway/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API Keys&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Authorizers (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Base Path Mappings&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deployments&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Documentation Parts&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Documentation Versions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domain Names&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Gateway / Integration / Method Responses&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Integrations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Methods&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Models&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Request Validators&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resources&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>REST APIs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stages&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Usage Plans&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Usage Plan Keys&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPC Links&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/apigateway/">&lt;strong>API Gateway v2&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_apigatewayv2/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>APIs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API Mappings&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Authorizers&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deployments&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domain Names&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Import APIs from OpenAPI specs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Integrations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Integration Responses&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Models&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Routes&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Route Responses&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stages&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPC Links&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>API Gateway Management API&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_apigatewaymanagementapi/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Connections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>AppConfig&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_appconfig/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Applications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Configuration Profiles&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Configurations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deployment Strategies&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Deployments&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Environments&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hosted Configuration Versions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Application Autoscaling&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_application-autoscaling/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scalable Targets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scaling Activities&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scaling Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scheduled Actions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/appsync/">&lt;strong>AppSync&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_appsync/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API Caches&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API Keys&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Data Sources&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Functions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>GraphQL APIs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resolvers&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Types&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/athena/">&lt;strong>Athena&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_athena/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Data Catalogs&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Databases&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Named Queries&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Prepared Statements&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Query Executions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Table Metadata&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Work Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Autoscaling&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_autoscaling/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Collection&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Autoscaling Groups&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Loadbalancer&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/backup/">&lt;strong>Backup&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_backup/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Jobs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Plans&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Selections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Vaults&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Vault Access Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Vault Notifications&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Global Settings&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Protected Resources&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Recovery Points&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Batch&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_batch/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Compute Environments&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Job Queues&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Job Definitions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>AWS Cost Explorer (CE)&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ce/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Anomaly Monitoring&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Anomaly Subscription&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cost Category&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cost Usage/Forecast&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Savings Plan&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cloudformation/">&lt;strong>CloudFormation&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cloudformation/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Change Sets&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stacks&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Drifts&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Events&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Instances&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Resources&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stack Sets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Publishers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Templates&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Type Activations&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cloudfront/">&lt;strong>CloudFront&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cloudfront/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Distributions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Field Level Encryption&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Functions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Invalidations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Key Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Monitoring Subscriptions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Origin Access Identities&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Origin Request Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Public Keys&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Realtime Log Configs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Streaming Distributions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>CloudTrail&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cloudtrail/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Selectors&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Insight Selectors&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Trails&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Start/Stop Logging&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cloudwatch/">&lt;strong>CloudWatch&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cloudwatch/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Alarms&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Alarm Histories&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Anomaly Detectors&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dashboards&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Insight Rules&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Data&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Statistics&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Streams&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/codecommit/">&lt;strong>CodeCommit&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_codecommit/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Approval Rules&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Blobs / Files / Folders&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Branches&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Comments&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Commits&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Merge Commits / Conflicts&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Pull Requests&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Repositories&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cognito/">&lt;strong>Cognito Identity&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cognito-identity/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Developer Identities&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identities&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identity Pool Roles&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identity Pools&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>OpenID Tokens&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/cognito/">&lt;strong>Cognito Identity Provider (IdP)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_cognito-idp/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Admin APIs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>Triggers can involve Lambda&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Devices&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Auth Flows&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lambda Triggers&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>MFA Configs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resource Servers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Risk Configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identity Providers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Import Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Pool Clients&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Pool Domains&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Pools&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Users&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Config&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_config/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Config Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Conformance&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Remediation&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>DocumentDB&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_docdb/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB/Cluster Parameter Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB/Cluster Snapshots&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Clusters/Instances&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Subnet Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Subscriptions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>DynamoDB&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_dynamodb/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backups (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Batch Operations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Global Tables&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>version 2019.11.21 not supported yet&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Items&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Kinesis Streaming Destinations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PartiQL Queries&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Query / Scan Operations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tables&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Table Replica Autoscaling&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>DynamoDB Streams&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_dynamodbstreams/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Records&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Shard Iterators&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Streams&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ec2/">&lt;strong>Elastic Compute Cloud (EC2)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ec2/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Classic Links&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Customer Gateways&lt;/td>
&lt;td>⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DHCP Options&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Allocate/Deallocate Elastic IPs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fleets&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flow Logs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Images&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>(Pro) Include Docker images&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Internet Gateways&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Local Gateway Routes&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Key Pairs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Launch Templates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>NAT Gateways&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Network ACLs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Network Interfaces&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reserved Instances&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Route Tables / Routes&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scheduled Instances&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security Groups / Egress / Ingress&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Snapshots&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Spot Instances&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instances&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>(Pro) As Docker containers&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Subnets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Traffic Mirrors&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Transit Gateways&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Volumes&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPC Endpoint Connections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPC Peering Connections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPCs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>VPN Gateways / Connections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ecr/">&lt;strong>Elastic Container Registry (ECR)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ecr/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Images&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Image Scans&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lifecycle Policies&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Registries&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Registry Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Replication Configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Repositories&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Repository Policies&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ecs/">&lt;strong>Elastic Container Service (ECS)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ecs/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Account Settings&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Attributes&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Capacity Providers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Clusters&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Container Instances&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Services&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Task Definitions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Task Sets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tasks&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Elastic File System (EFS)&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_efs/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>File System&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Backup Policy&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/eks/">&lt;strong>Elastic Kubernetes Service (EKS)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_eks/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AddOns&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Clusters&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Fargate Profiles&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identity Provider Configs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Node Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Updates&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elasticache/">&lt;strong>ElastiCache&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_elasticache/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Clusters (Memcached)&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Clusters (Redis)&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Parameter Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Security Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cache Subnet Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Global Replication Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Replication Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Snapshots&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Users / User Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Elastic Beanstalk&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_elasticbeanstalk/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Application Deployment&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Environment&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Elastic Load Balancing (ELB)&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_elb/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Listeners&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Load balancers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>Application load balancers with IP address or Lambda targets only&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Target groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Listener certificates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/elb/">&lt;strong>Elastic Load Balancing v2 (ELBv2)&lt;/strong>&lt;/a> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_elbv2/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Listeners&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Load balancers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Target groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Listener certificates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/emr/">&lt;strong>Elastic Map Reduce (EMR)&lt;/strong>&lt;/a> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_emr/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Clusters&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instance Fleets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Job Flow Steps&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Managed Scaling Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Notebook Executions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Run Job Flows (Queries)&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security Configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Studios&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/es/">&lt;strong>Elasticsearch Service (ES)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_es/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cross-Cluster Search Connections&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Elasticsearch Domains&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Packages&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reserved Instances&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>EventBridge (Events)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_events/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>API Destinations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Archives&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Connections&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Buses&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Sources&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Partner Event Sources&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Replays&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Rules&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>EventBridge Pipes (Pipes)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_pipes/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Firehose&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_firehose/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Delivery Streams&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Destinations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Records&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stream Encryption&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Glacier&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_glacier/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Archive&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Vault&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Job&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/glue/">&lt;strong>Glue&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_glue/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Classifiers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Connections&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Crawlers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Databases&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dev Endpoints&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ML Transforms&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Partitions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Registries&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Schemas&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Scripts&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security Configurations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tables&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Triggers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Defined Functions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Workflows&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/iam/">&lt;strong>Identity and Access Management (IAM)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_iam/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access Keys&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Account Aliases&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Credential Reports&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Instance Profiles&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Login Profiles&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>OIDC Providers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Policies&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Roles&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SAML Providers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Server Certificates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Service Linked Roles&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Users&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Virtual MFA Devices&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/iot/">&lt;strong>Analytics, Data, Wireless (IoT)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_iot/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Authorizers&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Billing Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Certificates&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Channels&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Custom Metrics&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Datasets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Dimensions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domain Configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs Executions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs Templates&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Mitigation Actions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Provisioning Claims / Templates&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Role Aliases&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security Profiles&lt;/td>
&lt;td>-&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Shadows&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Streams&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Thing Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Thing Types&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Things&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Topic Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/msk/">&lt;strong>Managed Streaming for Kafka (MSK)&lt;/strong>&lt;/a> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_kafka/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Brokers&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cluster Operations&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Clusters&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>Single node clusters&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Configurations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/kinesis/">&lt;strong>Kinesis&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_kinesis/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Records&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Split / Merge Shards&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stream Consumers&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Stream Encryption&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Streams&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Subscribe to Shard&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Kinesis Analytics&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_kinesisanalytics/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Applications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Kinesis Analytics v2&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_kinesisanalyticsv2/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Applications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Key Management Service (KMS)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_kms/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Aliases&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Custom Key Stores&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Encrypt / Decrypt / Sign Data&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Grants&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Key Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Keys&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Lake Formation&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_lakeformation/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Transactions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Permissions&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resources&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/lambda/">&lt;strong>Lambda&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_lambda/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Aliases&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Code Signing Configs&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Custom Images (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Invoke Configs (Destinations)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Source Mappings&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Function Concurrencies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Function URLs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Functions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Invoke Functions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/lambda/#lambda-layers">Layers (Pro)&lt;/a>&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Permissions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/logs/">&lt;strong>Logs&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_logs/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Destinations&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Export Tasks&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Log Events&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Log Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Log Streams&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Filters&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Queries&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resource Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Retention Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Subscription Filters&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>MediaStore&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_mediastore/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access Logging&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Container Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Containers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CORS Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lifecycle Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Metric Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>MediaStore Data&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_mediastore-data/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Objects&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Managed Workflows for Apache Airflow (MWAA)&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_mwaa/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CLI Tokens&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Environments&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>S3 integration (DAG bucket/paths)&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Web Login&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/neptune/">&lt;strong>Neptune DB&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_neptune/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Clusters&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Cluster Endpoints&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Cluster Parameter Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Cluster Snapshots&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Subscriptions&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Events&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Global Clusters&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>PendingMaintenanceAction&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/opensearch/">&lt;strong>OpenSearch Service&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_opensearch/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cross-Cluster Search Connections&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>OpenSearch Domains&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Packages&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reserved Instances&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Organizations&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_organizations/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Accounts&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Handshakes&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Organization&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Organizational Units&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/qldb/">&lt;strong>Quantum Ledger Database (QLDB)&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_qldb/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Blocks&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Digests&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Journal Kinesis Streams&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Journal S3 Exports&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ledgers&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Send Commands / Run Queries&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Quantum Ledger Database Sessions&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_qldb-session/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Send Command&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/rds/">&lt;strong>Relational Database Service (RDS) / Aurora Serverless&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_rds/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB/Cluster Parameter Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB/Cluster Snapshots&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Clusters/Instances&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Proxies&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DB Security/Subnet Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Subscriptions&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Option Groups&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Postgres AWS Extension Functions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Relational Database Service (RDS) Data&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_rds-data/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Execute sql/statements&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Transactions&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Batch Execution&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Redshift&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_redshift/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Authorize/Revoke Access&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cluster Parameter Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cluster Snapshots&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Clusters/Instances&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Event Subscriptions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>HSM Configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Partners&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security/Subnet Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Usage Limits&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Redshift Data&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_redshift-data/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Statements&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Describe Table&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Batch Execution&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Resource Groups&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_resource-groups/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resources&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Groups&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Group Configurations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Resource Groups Tagging API&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_resourcegroupstaggingapi/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reports&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/route53/">&lt;strong>Route53&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_route53/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>DNS Server Integration (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Geo Locations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Health Checks&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hosted Zones&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Query Logging Configs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resource Record Sets&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Reusable Delegation Sets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Traffic Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Route53 Resolver&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_route53resolver/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/s3/">&lt;strong>Simple Storage Service (S3)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_s3/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket ACLs&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket CORS&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Encryptions&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Lifecycles&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Loggings&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Metrics Configurations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Notifications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>Supported notification targets: SQS, SNS, Lambda; Supported notification events: ObjectCreated, ObjectRemoved, ObjectTagging&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Ownership Controls&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Policies&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Replications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Request Payments&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Versionings&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Bucket Websites&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Buckets&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Object Retentions&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Object Versions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Objects&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Presigned URLs&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Upload/Download Files&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Simple Storage Service (S3) Control&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_s3control/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access Point Policies&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Access Points&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Lifecycle configurations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Multi-region Access Points&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Public Access Blocks&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Storage Lens&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/sagemaker/">&lt;strong>SageMaker&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_sagemaker/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Actions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Algorithms&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>App Image Configs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Apps&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Artifacts&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Associations&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Auto ML Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Code Repositories&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Compilation Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Contexts&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Data Quality Job Definitions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Device Fleets&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Devices&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domains&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Edge Packaging Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Endpoints / Endpoint Configs&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Experiments&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Feature Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Flow Definitions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Hyper Parameter Tuning Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Images / Image Versions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Labelling Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Model Bias/Explainability Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Model Packages&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Models&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Monitoring Executions/Schedules&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Notebook Instances&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Pipeline Executions&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Pipelines&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Projects&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Training Jobs&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Transform Jobs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Trials&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>User Profiles&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Workforces / Workteams&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>SecretsManager&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_secretsmanager/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resource Policies&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Secret Replications&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Secret Rotations&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Secrets&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Serverless Repo&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_serverlessrepo/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Applications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Application Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>CloudFormation templates&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Service Discovery (CloudMap)&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_servicediscovery/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Namespaces&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ses/">&lt;strong>Simple Email Service (SES)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ses/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Configuration Sets&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identities&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identity Policies&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Quotas / Statistics&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Receipt Filters&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Receipt Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sending Emails via SMTP (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Templates&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Simple Email Service (SES) v2&lt;/strong> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_sesv2/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Identities&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sending Emails via SMTP&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Templates&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Simple Notification Service (SNS)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_sns/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Platform Applications&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Publish/Subscribe to Topics&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SMS Attributes / Sandbox Accounts&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Subscriptions&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Topics&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/sqs/">&lt;strong>Simple Queue Service (SQS)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_sqs/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>FIFO Queues&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Message Deduplication&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Message Visibility&lt;/td>
&lt;td>⭐⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Messages&lt;/td>
&lt;td>⭐⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Permission&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Query API&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Standard Queues&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/ssm/">&lt;strong>Systems Manager (SSM)&lt;/strong>&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_ssm/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Associations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Calendar States&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Commands / Command Invocations&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Compliance Items&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Documents&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Inventory Entries&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Ops Metadata&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Parameters&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Resource Compliance Summaries&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>StepFunctions&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_stepfunctions/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Activities&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Executions / Execution History&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>State Machines&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Security Token Service (STS)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_sts/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Assume Role (Pro)&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Get Access Key Info&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Get Caller Identity&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Session Tokens&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Support&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_support/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Cases&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>TrustedAdvisorChecks&lt;/td>
&lt;td>⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Attachments&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;strong>Simple Workflow Service (SWF)&lt;/strong>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_swf/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domain&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Activity&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Workflows&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Domains&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/timestream/">&lt;strong>Timestream (query, write)&lt;/strong>&lt;/a> (Pro)&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_timestream-query/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Databases&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Run Query&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tables&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Write Records&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/transfer/">&lt;strong>Transfer&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_transfer/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Accesses&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Security Policies&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Servers&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>SSH Public Keys&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Users&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;a href="/user-guide/aws/xray/">&lt;strong>X-Ray&lt;/strong> (Pro)&lt;/a>&lt;/td>
&lt;td>&lt;a href="/references/coverage/coverage_xray/">Details 🔍&lt;/a>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Encryption Configs&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Groups&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Insights&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Sampling Rules&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Service Graph&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Tags&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Telemetry Records&lt;/td>
&lt;td>⭐⭐⭐⭐&lt;/td>
&lt;td>Emulated&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Trace Graph&lt;/td>
&lt;td>-&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>Trace Segments / Summaries&lt;/td>
&lt;td>⭐⭐⭐&lt;/td>
&lt;td>CRUD&lt;/td>
&lt;td>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>User-Guide: Account Management</title><link>/user-guide/aws/account/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/account/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>The Account service provides APIs to manage your AWS account. You can use the Account APIs to retrieve information about your account, manage your contact information and alternate contacts. Additionally, you can use the Account APIs to enable or disable a region for your account, and delete alternate contacts in your account.&lt;/p>
&lt;p>LocalStack supports Account via the Pro offering, allowing you to use the Account API to retrieve information about your account. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_account/">API coverage page&lt;/a>, which provides information on the extent of Account&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
LocalStack&amp;rsquo;s Account provider is mock-only and does not support any real AWS account. The Account APIs are only intended to demonstrate how you can use and mock the AWS Account APIs in your local environment. It&amp;rsquo;s important to note that LocalStack doesn&amp;rsquo;t offer a programmatic interface to manage your AWS or your LocalStack account.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users who are new to Account and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to put contact information, fetch account details, and attach an alternate contact to your account.&lt;/p>
&lt;h3 id="put-contact-information">Put contact information&lt;/h3>
&lt;p>You can use the &lt;a href="https://docs.aws.amazon.com/accounts/latest/reference/API_PutContactInformation.html">&lt;code>PutContactInformation&lt;/code>&lt;/a> API to add or update the contact information for your AWS account. Run the following command to add contact information to your account:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal account put-contact-information \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --contact-information &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;FullName&amp;#34;: &amp;#34;Jane Doe&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;PhoneNumber&amp;#34;: &amp;#34;+XXXXXXXXX&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AddressLine1&amp;#34;: &amp;#34;XXXX Main St&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;City&amp;#34;: &amp;#34;XXXX&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;PostalCode&amp;#34;: &amp;#34;XXXXX&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CountryCode&amp;#34;: &amp;#34;US&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;StateOrRegion&amp;#34;: &amp;#34;WA&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="fetch-account-details">Fetch account details&lt;/h3>
&lt;p>You can use the &lt;a href="https://docs.aws.amazon.com/accounts/latest/reference/API_GetContactInformation.html">&lt;code>GetContactInformation&lt;/code>&lt;/a> API to retrieve the contact information for your AWS account. Run the following command to fetch the contact information for your account:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal account get-contact-information&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The command will return the contact information for your account:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ContactInformation&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AddressLine1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;XXXX Main St&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;City&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;XXXX&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CountryCode&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;US&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;FullName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Jane Doe&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;PhoneNumber&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;+XXXXXXXXX&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;PostalCode&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;XXXXX&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;StateOrRegion&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;WA&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="attach-alternate-contact">Attach alternate contact&lt;/h3>
&lt;p>You can attach an alternate contact using &lt;a href="https://docs.aws.amazon.com/accounts/latest/reference/API_PutAlternateContact.html">&lt;code>PutAlternateContact&lt;/code>&lt;/a> API. Run the following command to attach an alternate contact to your account:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal account put-alternate-contact \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --alternate-contact-type &amp;#34;BILLING&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --email-address &amp;#34;bill@ing.com&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name &amp;#34;Bill Ing&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --phone-number &amp;#34;+1 555-555-5555&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --title &amp;#34;Billing&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing contact information &amp;amp; alternate accounts for the Account service. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the Resources section, and then clicking on &lt;strong>Account&lt;/strong> under the &lt;strong>Management &amp;amp; Governance&lt;/strong> section.&lt;/p>
&lt;img src="account-resource-browser.png" alt="Account Resource Browser" title="Account Resource Browser" width="900" />
&lt;br>&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Contact Information&lt;/strong>: Add the contact information for your mocked AWS account by clicking on the &lt;strong>Create&lt;/strong> button in the contact information section.&lt;/li>
&lt;li>&lt;strong>Create Alternate Contact&lt;/strong>: Add an alternate contact for your mocked AWS account by clicking on the &lt;strong>Create&lt;/strong> button in the alternate contacts section.&lt;/li>
&lt;li>&lt;strong>View Contact Information&lt;/strong>: View the contact information for your mocked AWS account by clicking on the contact information.&lt;/li>
&lt;li>&lt;strong>Update Contact Information&lt;/strong>: Update the contact information for your mocked AWS account by clicking on the contact information.&lt;/li>
&lt;li>&lt;strong>Filter&lt;/strong>: Filter the contact information and alternate contacts by types, such as &lt;code>BILLING&lt;/code>, &lt;code>OPERATIONS&lt;/code>, and &lt;code>SECURITY&lt;/code>.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Amplify</title><link>/user-guide/aws/amplify/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/amplify/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Amplify is a JavaScript-based development framework with libraries, UI components, and a standard CLI interface for building and deploying web and mobile applications. With Amplify, developers can build and host static websites, single-page applications, and full-stack serverless web applications using an abstraction layer over popular AWS services like DynamoDB, Cognito, AppSync, Lambda, S3, and more.&lt;/p>
&lt;p>LocalStack allows you to use the Amplify APIs to build and test their Amplify applications locally. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_amplify/">API coverage page&lt;/a>, which provides information on the extent of Amplify&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The &lt;code>amplifylocal&lt;/code> CLI and the Amplify JS library have been deprecated and are no longer supported. We recommend using the Amplify CLI with the Amplify LocalStack Plugin instead.
&lt;/div>
&lt;h2 id="amplify-localstack-plugin">Amplify LocalStack Plugin&lt;/h2>
&lt;p>&lt;a href="https://github.com/localstack/amplify-localstack">Amplify LocalStack Plugin&lt;/a> allows the &lt;code>amplify&lt;/code> CLI tool to create resources on your local machine instead of AWS. It achieves this by redirecting any requests to AWS to a LocalStack container running locally on your machine.&lt;/p>
&lt;h3 id="installation">Installation&lt;/h3>
&lt;p>To install the Amplify LocalStack Plugin, install the &lt;a href="https://www.npmjs.com/package/amplify-localstack">amplify-localstack&lt;/a> package from the npm registry and add the plugin to your Amplify setup:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>npm install -g amplify-localstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplify plugin add amplify-localstack&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="configuration">Configuration&lt;/h3>
&lt;p>You can configure the following environment variables to customize LocalStack&amp;rsquo;s behaviour:&lt;/p>
&lt;ul>
&lt;li>&lt;code>EDGE_PORT&lt;/code>: The port number under which the LocalStack edge service is accessible. The default value is &lt;code>4566&lt;/code>.&lt;/li>
&lt;li>&lt;code>LOCALSTACK_HOSTNAME&lt;/code>: It specifies the target host under which the LocalStack edge service is accessible. The default value is &lt;code>localhost.localstack.cloud&lt;/code>.&lt;/li>
&lt;li>&lt;code>LOCALSTACK_ENDPOINT&lt;/code>: It allows you to set a custom endpoint directly. If set, it overrides the values set for &lt;code>EDGE_PORT&lt;/code> and &lt;code>LOCALSTACK_HOSTNAME&lt;/code>. The default value is &lt;code>https://localhost.localstack.cloud:4566&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h3 id="usage">Usage&lt;/h3>
&lt;p>After installing the plugin, you can deploy your resources to LocalStack using the &lt;code>amplify init&lt;/code> or &lt;code>amplify push&lt;/code> commands. The console will prompt you to select whether to deploy to LocalStack or AWS.&lt;/p>
&lt;p>You can also add the parameter &lt;code>--use-localstack true&lt;/code> to your commands to avoid being prompted and automatically use LocalStack. Here is an example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplify init --use-localstack true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplify add api
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>amplify push --use-localstack true&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing Amplify applications. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resource Browser&lt;/strong> section, and then clicking on &lt;strong>Amplify&lt;/strong> under the &lt;strong>Front-end Web &amp;amp; Mobile&lt;/strong> section.&lt;/p>
&lt;img src="amplify-resource-browser.png" alt="Amplify Resource Browser" title="Amplify Resource Browser" width="900" />
&lt;br>&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create new Amplify applications&lt;/strong>: Create new Amplify applications by clicking &lt;strong>Create App&lt;/strong> and filling in the required details.&lt;/li>
&lt;li>&lt;strong>View Amplify applications&lt;/strong>: View the list of Amplify applications created in LocalStack by clicking on the application ID.&lt;/li>
&lt;li>&lt;strong>Edit Amplify applications&lt;/strong>: Edit the configuration of an existing Amplify application by clicking on the application ID and then clicking &lt;strong>Edit App&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Delete Amplify applications&lt;/strong>: Delete an existing Amplify application by selecting the application, followed by clicking &lt;strong>Actions&lt;/strong> and then &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: API Gateway</title><link>/user-guide/aws/apigateway/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/apigateway/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>API Gateway is a managed service that enables developers to create, deploy, and manage APIs (Application Programming Interfaces). It allows easy creation of REST, HTTP, and WebSocket APIs to securely access data, business logic, or functionality from backend services like AWS Lambda functions or EC2 instances. API Gateway supports standard HTTP methods such as &lt;code>GET&lt;/code>, &lt;code>POST&lt;/code>, &lt;code>PUT&lt;/code>, &lt;code>PATCH&lt;/code>, and &lt;code>DELETE&lt;/code> and integrates with various AWS services, including Lambda, Cognito, CloudWatch, and X-Ray.&lt;/p>
&lt;p>LocalStack supports API Gateway V1 in the Community image and API Gateway V2 in the Pro image. LocalStack allows you to use the API Gateway APIs to create, deploy, and manage APIs on your local machine to invoke those exposed API endpoints.&lt;/p>
&lt;p>The supported APIs are available on the API coverage page for &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_apigateway/">API Gateway V1&lt;/a> &amp;amp; &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_apigatewayv2/">API Gateway V2&lt;/a>, which provides information on the extent of API Gateway&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to API Gateway and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will use the Lambda proxy integration to integrate an API method with a Lambda function. The Lambda function will be invoked with a &lt;code>GET&lt;/code> request and return a response with a status code of &lt;code>200&lt;/code> and a body containing the string &lt;code>Hello from Lambda!&lt;/code>.&lt;/p>
&lt;h3 id="create-a-lambda-function">Create a Lambda function&lt;/h3>
&lt;p>Create a new file named &lt;code>lambda.js&lt;/code> with the following contents:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#39;use strict&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000">apiHandler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">payload&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">statusCode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#000">JSON&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">stringify&lt;/span>&lt;span style="color:#000;font-weight:bold">({&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">message&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;Hello from Lambda&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">module&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">exports&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">apiHandler&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The above code defines a function named &lt;code>apiHandler&lt;/code> that returns a response with a status code of &lt;code>200&lt;/code> and a body containing the string &lt;code>Hello from Lambda&lt;/code>. Zip the file and upload it to LocalStack using the &lt;code>awslocal&lt;/code> CLI. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>zip function.zip lambda.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name apigw-lambda \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime nodejs16.x \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler lambda.apiHandler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --memory-size 128 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb://function.zip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::111111111111:role/apigw&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This creates a new Lambda function named &lt;code>apigw-lambda&lt;/code> with the code you specified.&lt;/p>
&lt;h3 id="create-a-rest-api">Create a REST API&lt;/h3>
&lt;p>We will use the API Gateway&amp;rsquo;s &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_CreateRestApi.html">&lt;code>CreateRestApi&lt;/code>&lt;/a> API to create a new REST API. Here&amp;rsquo;s an example command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway create-rest-api --name &amp;#39;API Gateway Lambda integration&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This creates a new REST API named &lt;code>API Gateway Lambda integration&lt;/code>. The above command returns the following response:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;cor3o5oeci&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;API Gateway Lambda integration&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;createdDate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2023-04-27T16:08:46+05:30&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;apiKeySource&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;HEADER&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;endpointConfiguration&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;types&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;EDGE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;disableExecuteApiEndpoint&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note the REST API ID returned in the response. You&amp;rsquo;ll need this ID for the next step.&lt;/p>
&lt;h3 id="fetch-the-resources">Fetch the Resources&lt;/h3>
&lt;p>Use the REST API ID generated in the previous step to fetch the resources for the API, using the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_GetResources.html">&lt;code>GetResources&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway get-resources --rest-api-id &amp;lt;REST_API_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command returns the following response:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;items&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;u53af9hm83&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;path&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note the ID of the root resource returned in the response. You&amp;rsquo;ll need this ID for the next step.&lt;/p>
&lt;h3 id="create-a-resource">Create a resource&lt;/h3>
&lt;p>Create a new resource for the API using the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_CreateResource.html">&lt;code>CreateResource&lt;/code>&lt;/a> API. Use the ID of the resource returned in the previous step as the parent ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway create-resource \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --rest-api-id &amp;lt;REST_API_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --parent-id &amp;lt;PARENT_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --path-part &amp;#34;{somethingId}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command returns the following response:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;zzcvcf56ar&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;parentId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;u53af9hm83&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;pathPart&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;{somethingId}&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;path&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;/{somethingId}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note the ID of the root resource returned in the response. You&amp;rsquo;ll need this Resource ID for the next step.&lt;/p>
&lt;h3 id="add-a-method-and-integration">Add a method and integration&lt;/h3>
&lt;p>Add a &lt;code>GET&lt;/code> method to the resource using the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_PutMethod.html">&lt;code>PutMethod&lt;/code>&lt;/a> API. Use the ID of the resource returned in the previous step as the Resource ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal apigateway put-method \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --rest-api-id &amp;lt;REST_API_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resource-id &amp;lt;RESOURCE_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --http-method GET \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --request-parameters &amp;#34;method.request.path.somethingId=true&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --authorization-type &amp;#34;NONE&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command returns the following response:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;httpMethod&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;GET&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;authorizationType&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;NONE&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;apiKeyRequired&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;requestParameters&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;method.request.path.somethingId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, create a new integration for the method using the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_PutIntegration.html">&lt;code>PutIntegration&lt;/code>&lt;/a> API.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway put-integration \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --rest-api-id &amp;lt;REST_API_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resource-id &amp;lt;RESOURCE_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --http-method GET \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --type AWS_PROXY \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --integration-http-method POST \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --uri arn:aws:apigateway:us-east-1:lambda:path/2015-03-31/functions/arn:aws:lambda:us-east-1:000000000000:function:apigw-lambda/invocations \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --passthrough-behavior WHEN_NO_MATCH&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command integrates the &lt;code>GET&lt;/code> method with the Lambda function created in the first step. We can now proceed with the deployment before invoking the API.&lt;/p>
&lt;h3 id="create-a-deployment">Create a deployment&lt;/h3>
&lt;p>Create a new deployment for the API using the &lt;a href="https://docs.aws.amazon.com/apigateway/latest/api/API_CreateDeployment.html">&lt;code>CreateDeployment&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway create-deployment \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --rest-api-id &amp;lt;REST_API_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stage-name test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Your API is now ready to be invoked. You can use &lt;code>cURL&lt;/code> or any HTTP REST client to invoke the API endpoint:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -X GET http://localhost:4566/restapis/&amp;lt;REST_API_ID&amp;gt;/test/_user_request_/test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;message&amp;#34;:&amp;#34;Hello World&amp;#34;}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="localstack-features">LocalStack features&lt;/h2>
&lt;p>LocalStack provides additional features and functionality on top of the official AWS APIs, to help you develop, debug, and test your local API Gateway APIs.&lt;/p>
&lt;h3 id="accessing-http-apis-via-local-domain-name">Accessing HTTP APIs via Local Domain Name&lt;/h3>
&lt;p>To demonstrate how to access APIs through LocalStack&amp;rsquo;s local domain name, consider the following Serverless configuration that shows two Lambda functions (&lt;code>serviceV1&lt;/code> and &lt;code>serviceV2&lt;/code>) that are connected to an API Gateway v1 (&lt;code>http&lt;/code> event) and an API Gateway v2 endpoint (&lt;code>httpApi&lt;/code> event), respectively:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">plugins&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">serverless-localstack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">custom&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">stages&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">local]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">functions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">serviceV1&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">handler&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">handler.handler&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">events&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">http&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># for API GW v1 integration&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">method&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">POST&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/my/path1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">serviceV2&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">handler&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">handler.handler&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">events&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">httpApi&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#8f5902;font-style:italic"># for API GW v2 integration&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">method&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">POST&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/my/path2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After you deploy the Lambda functions and API Gateway endpoints, you can access them using the LocalStack edge port (&lt;code>4566&lt;/code> by default). There are two alternative URL formats to access these endpoints.&lt;/p>
&lt;h4 id="recommended-url-format">Recommended URL format&lt;/h4>
&lt;p>The recommended URL format for accessing APIs is to use the following URL syntax with an &lt;code>execute-api&lt;/code> hostname:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>http://&amp;lt;apiId&amp;gt;.execute-api.localhost.localstack.cloud:4566/&amp;lt;stageId&amp;gt;/&amp;lt;path&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Here&amp;rsquo;s an example of how you would access the HTTP/REST API with an ID of &lt;code>0v1p6q6&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>http://0v1p6q6.execute-api.localhost.localstack.cloud:4566/local/my/path2
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Note that the local stage ID is added in this example. Adding the stage ID is required for API Gateway V1 APIs, but optional for API Gateway V2 APIs (in case they include the wildcard &lt;code>$default&lt;/code> stage). For v2 APIs, the following URL should also work:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>http://0v1p6q6.execute-api.localhost.localstack.cloud:4566/my/path1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="alternative-url-format">Alternative URL format&lt;/h4>
&lt;p>The alternative URL format is an endpoint with the predefined path marker &lt;code>_user_request_&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>http://localhost:4566/restapis/&amp;lt;apiId&amp;gt;/&amp;lt;stageId&amp;gt;/_user_request_/&amp;lt;path&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For the example above, the URL would be:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>http://localhost:4566/restapis/0v1p6q6/local/_user_request_/my/path1
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This format is sometimes used in case of local DNS issues.&lt;/p>
&lt;h3 id="websocket-apis">WebSocket APIs&lt;/h3>
&lt;p>WebSocket APIs provide real-time communication channels between a client and a server. To use WebSockets in LocalStack, you can define a WebSocket route in your Serverless configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">plugins&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">serverless-localstack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">functions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">actionHandler&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">handler&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">handler.handler&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">events&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">websocket&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">route&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">test-action&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Upon deployment of the Serverless project, LocalStack creates a new API Gateway V2 endpoint. To retrieve the list of APIs and verify the WebSocket endpoint, you can use the &lt;code>awslocal&lt;/code> CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigatewayv2 get-apis
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Items&amp;#34;: [{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ApiEndpoint&amp;#34;: &amp;#34;ws://localhost:4510&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ApiId&amp;#34;: &amp;#34;129ca37e&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the above example, the WebSocket endpoint is &lt;code>ws://localhost:4510&lt;/code>. Assuming your Serverless project contains a simple Lambda &lt;code>handler.js&lt;/code> like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">module&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">exports&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">function&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can send a message to the WebSocket at &lt;code>ws://localhost:4510&lt;/code> and the same message will be returned as a response on the same WebSocket.&lt;/p>
&lt;p>To push data from a backend service to the WebSocket connection, you can use the &lt;a href="https://awscli.amazonaws.com/v2/documentation/api/latest/reference/apigatewaymanagementapi/index.html">Amazon API Gateway Management API&lt;/a>. In LocalStack, use the following CLI command (replace &lt;code>&amp;lt;connectionId&amp;gt;&lt;/code> with your WebSocket connection ID):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigatewaymanagementapi \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> post-to-connection \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --connection-id &amp;#39;&amp;lt;connectionId&amp;gt;&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data &amp;#39;{&amp;#34;msg&amp;#34;: &amp;#34;Hi&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="custom-ids-for-api-gateway-resources-via-tags">Custom IDs for API Gateway resources via tags&lt;/h2>
&lt;p>You can assign custom IDs to API Gateway REST and HTTP APIs using the &lt;code>_custom_id_&lt;/code> tag during resource creation. This can be useful to ensure a static endpoint URL for your API, simplifying testing and integration with other services.&lt;/p>
&lt;p>To assign a custom ID to an API Gateway REST API, use the &lt;code>create-rest-api&lt;/code> command with the &lt;code>tags={&amp;quot;_custom_id_&amp;quot;:&amp;quot;myid123&amp;quot;}&lt;/code> parameter. The following example assigns the custom ID &lt;code>&amp;quot;myid123&amp;quot;&lt;/code> to the API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigateway create-rest-api --name my-api --tags &amp;#39;{&amp;#34;_custom_id_&amp;#34;:&amp;#34;myid123&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;myid123&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can also configure the protocol type, the possible values being &lt;code>HTTP&lt;/code> and &lt;code>WEBSOCKET&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal apigatewayv2 create-api \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name=my-api \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --protocol-type=HTTP --tags=&amp;#34;_custom_id_=my-api&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ApiEndpoint&amp;#34;: &amp;#34;my-api.execute-api.localhost.localstack.cloud:4566&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ApiId&amp;#34;: &amp;#34;my-api&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;my-api&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ProtocolType&amp;#34;: &amp;#34;HTTP&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Tags&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_custom_id_&amp;#34;: &amp;#34;my-api&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Setting the API Gateway ID via &lt;code>_custom_id_&lt;/code> works only on the creation of the resource, but not on update in LocalStack. Ensure that you set the &lt;code>_custom_id_&lt;/code> tag on creation of the resource.
&lt;/div>
&lt;h2 id="custom-domain-names-with-api-gateway">Custom Domain Names with API Gateway&lt;/h2>
&lt;p>You can use custom domain names with API Gateway V1 and V2 APIs. To route requests to a custom domain name for an API Gateway V2 API, include the &lt;code>Host&lt;/code> header with the custom domain name in your request. For example, assuming that you have set up a custom domain name &lt;code>test.example.com&lt;/code> to point to your LocalStack instance, you can send a request like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -H &amp;#39;Host: test.example.com&amp;#39; http://localhost:4566/test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="api-gateway-resource-browser">API Gateway Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing API Gateway resources. You can access the Resource Browser by opening the LocalStack Web Application in your browser and navigating to the &lt;strong>Resources&lt;/strong> section, then clicking on &lt;strong>API Gateway&lt;/strong> under the &lt;strong>App Integration&lt;/strong> section.&lt;/p>
&lt;p>The Resource Browser displays &lt;a href="https://app.localstack.cloud/resources/gateway/v1">API Gateway V1&lt;/a> and &lt;a href="https://app.localstack.cloud/resources/gateway/v2">API Gateway V2&lt;/a> resources. You can click on individual resources to view their details.&lt;/p>
&lt;img src="api-gateway-resource-browser.png" alt="API Gateway Resource Browser" title="API Gateway Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create API&lt;/strong>: Create a new API (&lt;a href="https://app.localstack.cloud/resources/gateway/v1/new">&lt;code>V1&lt;/code>&lt;/a>/&lt;a href="https://app.localstack.cloud/resources/gateway/v2/new">&lt;code>V2&lt;/code>&lt;/a>) by clicking on &lt;strong>Create API&lt;/strong> button on top-right and creating a new configuration by clicking on &lt;strong>Submit&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>Edit API&lt;/strong>: Edit the API configuration (&lt;code>V1&lt;/code>/&lt;code>V2&lt;/code>) by clicking on &lt;strong>Edit API&lt;/strong> button on top-right and saving the new configuration by clicking on &lt;strong>Submit&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>Check the Resources&lt;/strong>: Click on &lt;strong>Resources&lt;/strong> tab to view the resources associated with the API, along with their details, such as &lt;code>Id&lt;/code>, &lt;code>ParentId&lt;/code>, &lt;code>Path Part&lt;/code>, and &lt;code>Path&lt;/code> and their &lt;code>HTTP&lt;/code> method.&lt;/li>
&lt;li>&lt;strong>Navigate the Stages&lt;/strong>: Click on &lt;strong>Stages&lt;/strong> tab to view the stages associated with the API, along with their details, such as &lt;code>Deployment Id&lt;/code>, &lt;code>Stage Name&lt;/code>, &lt;code>Client Certificate Id&lt;/code>, and more.&lt;/li>
&lt;li>&lt;strong>Delete API&lt;/strong>: Delete the API configuration (&lt;code>V1&lt;/code>/&lt;code>V2&lt;/code>) by selecting the resource, clicking on &lt;strong>Remove Selected&lt;/strong> button on top-right and confirming the deletion by clicking on &lt;strong>Continue&lt;/strong> button.&lt;/li>
&lt;/ul>
&lt;p>You can also use the Resource Browser to check out the &lt;strong>Authorizers&lt;/strong>, &lt;strong>Models&lt;/strong>, &lt;strong>Request Validators&lt;/strong>, &lt;strong>API Keys&lt;/strong>, and &lt;strong>Usage Plans&lt;/strong>.&lt;/p>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use API Gateway in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/apigw-custom-domain">API Gateway with Custom Domains over our LocalStack Pro samples&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/serverless-websockets">Websockets via API Gateway V2&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/serverless-api-ecs-apigateway-sample">Serverless Container-based APIs with Amazon ECS and Amazon API Gateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/step-up-auth-sample">Step-up Authentication using Amazon Cognito, DynamoDB, API Gateway Lambda Authorizer, and Lambda functions&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/microservices-apigateway-lambda-dynamodb-sqs-sample">Serverless Microservices with Amazon API Gateway, DynamoDB, SQS, and Lambda&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/aws-sdk-js-notes-app">Note-Taking application using AWS SDK for JavaScript, Amazon DynamoDB, Lambda, Cognito, API Gateway, and S3&lt;/a>&lt;/li>
&lt;li>For Terraform samples, check out the &lt;a href="https://github.com/localstack/localstack-terraform-samples">LocalStack Terraform examples&lt;/a> repository&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: AppConfig</title><link>/user-guide/aws/appconfig/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/appconfig/</guid><description>
&lt;p>AppConfig is a service provided by Amazon Web Services (AWS) that simplifies the process of managing and deploying application configurations. AppConfig offers centralized management of configuration data and the ability to create, manage, and deploy configuration changes separately. It allows you to avoid deploying the service repeatedly for smaller changes, enables controlled deployments to applications and includes built-in validation checks &amp;amp; monitoring.&lt;/p>
&lt;p>LocalStack allows you to use the AppConfig APIs in your local environment to define configurations for different environments and deploy them to your applications as needed. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_appconfig/">API coverage page&lt;/a>, which provides information on the extent of AppConfig&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to AppConfig and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create an AppConfig application, environment, configuration profiles &amp;amp; feature flags, and deploy the configuration with the AWS CLI.&lt;/p>
&lt;h3 id="create-an-appconfig-application-and-environment">Create an AppConfig application and environment&lt;/h3>
&lt;p>You can create an AppConfig application using the &lt;a href="https://docs.aws.amazon.com/appconfig/latest/APIReference/API_CreateApplication.html">&lt;code>CreateApplication&lt;/code>&lt;/a> API. The application is a folder/directory that contains the configuration data for your specific application. The following command creates an application named &lt;code>my-app&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig create-application \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name my-app \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --description &amp;#34;My application&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Id&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;400c285&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;my-app&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Description&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;My application&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now create an AppConfig environment for your application using the &lt;a href="https://docs.aws.amazon.com/appconfig/latest/APIReference/API_CreateEnvironment.html">&lt;code>CreateEnvironment&lt;/code>&lt;/a> API. An environment consists of the deployment group of your AppConfig applications. The following command creates an environment named &lt;code>my-app-env&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig create-environment \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-id 400c285 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name my-app-env \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --description &amp;#34;My application environment&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace the &lt;code>application-id&lt;/code> with the ID of the application you created in the previous step. The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ApplicationId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;400c285&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Id&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;3695ea3&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;my-app-env&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Description&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;My application environment&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;State&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ReadyForDeployment&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-configuration-profiles-and-feature-flags">Create configuration profiles and feature flags&lt;/h3>
&lt;p>You can create an AppConfig configuration profile using the &lt;a href="https://docs.aws.amazon.com/appconfig/latest/APIReference/API_CreateConfigurationProfile.html">&lt;code>CreateConfigurationProfile&lt;/code>&lt;/a> API. A configuration profile contains for the configurations of your AppConfig applications. The following command creates a configuration profile named &lt;code>my-app-config&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig create-configuration-profile \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-id 400c285 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name my-app-config \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --location-uri hosted \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --type AWS.AppConfig.FeatureFlags&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ApplicationId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;400c285&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Id&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;7d748f9&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;my-app-config&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;LocationUri&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;hosted&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Type&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;AWS.AppConfig.FeatureFlags&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now create a JSON file to add your feature flag configuration data. Create a file named &lt;code>feature-flag-config.json&lt;/code> with the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;allow_mobile_payments&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;enabled&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;default_payments_per_region&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;enabled&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now use the &lt;a href="https://docs.aws.amazon.com/appconfig/latest/APIReference/API_CreateHostedConfigurationVersion.html">&lt;code>CreateHostedConfigurationVersion&lt;/code>&lt;/a> API to save your feature flag configuration data to AppConfig. The following command creates a hosted configuration version for the configuration profile you created in the previous step:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig create-hosted-configuration-version \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-id 400c285 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --configuration-profile-id 7d748f9 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --content-type &amp;#34;application/json&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --content file://feature-flag-config.json \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> configuration-data.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ApplicationId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;400c285&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ConfigurationProfileId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;7d748f9&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;VersionNumber&amp;#34;&lt;/span>: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ContentType&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;application/json&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-an-appconfig-deployment">Create an AppConfig deployment&lt;/h3>
&lt;p>You can now create an AppConfig deployment strategy using the &lt;a href="https://docs.aws.amazon.com/appconfig/latest/APIReference/API_CreateDeploymentStrategy.html">&lt;code>CreateDeploymentStrategy&lt;/code>&lt;/a> API. A deployment strategy defines important criteria for rolling out your configuration to the target environment. The following command creates a deployment strategy named &lt;code>my-app-deployment-strategy&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig create-deployment-strategy \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name my-app-deployment-strategy \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --description &amp;#34;My application deployment strategy&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --deployment-duration-in-minutes 10 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --growth-factor 1.0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Id&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;f2f2225&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;my-app-deployment-strategy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Description&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;My application deployment strategy&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DeploymentDurationInMinutes&amp;#34;&lt;/span>: 10,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;GrowthFactor&amp;#34;&lt;/span>: 1.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now use the &lt;a href="https://docs.aws.amazon.com/appconfig/latest/APIReference/API_StartDeployment.html">&lt;code>StartDeployment&lt;/code>&lt;/a> API to deploy the configuration. The following command deploys the configuration to the environment you created in the previous step:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appconfig start-deployment \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-id 400c285 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --environment-id 3695ea3 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --deployment-strategy-id f2f2225 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --configuration-profile-id 7d748f9 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --configuration-version 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --description &amp;#34;My application deployment&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ApplicationId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;400c285&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;EnvironmentId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;3695ea3&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DeploymentStrategyId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;f2f2225&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ConfigurationProfileId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;7d748f9&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DeploymentNumber&amp;#34;&lt;/span>: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ConfigurationName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;my-app-config&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ConfigurationLocationUri&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;hosted&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ConfigurationVersion&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Description&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;My application deployment&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DeploymentDurationInMinutes&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;GrowthFactor&amp;#34;&lt;/span>: 1.0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;State&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;BAKING&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;EventLog&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;EventType&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;DEPLOYMENT_STARTED&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TriggeredBy&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;USER&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Description&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Deployment started&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;OccurredAt&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-08-28T11:18:43.273250Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;PercentageComplete&amp;#34;&lt;/span>: 0.0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;StartedAt&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-08-28T11:18:43.273250Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AppliedExtensions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing AppConfig applications. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resource Browser&lt;/strong> section, and then clicking on &lt;strong>AppConfig&lt;/strong> under the &lt;strong>Developer Tools&lt;/strong> section.&lt;/p>
&lt;img src="appconfig-resource-browser.png" alt="AppConfig Resource Browser" title="AppConfig Resource Browser" width="900" />
&lt;br>&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create new AppConfig applications&lt;/strong>: Create new AppConfig applications by clicking &lt;strong>Create Application&lt;/strong> and filling in the required details.&lt;/li>
&lt;li>&lt;strong>View AppConfig applications&lt;/strong>: View the list of AppConfig applications created in LocalStack by clicking on the application ID.&lt;/li>
&lt;li>&lt;strong>Edit AppConfig applications&lt;/strong>: Edit the configuration of an existing AppConfig application by clicking on the application ID and then clicking &lt;strong>Edit Application&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Delete AppConfig applications&lt;/strong>: Delete an existing AppConfig application by selecting the application, followed by clicking &lt;strong>Actions&lt;/strong> and then &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Application Auto Scaling</title><link>/user-guide/aws/applicationautoscaling/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/applicationautoscaling/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Application Auto Scaling is a centralized solution for managing automatic scaling by defining scaling policies based on specific metrics. Based on CPU utilization or request rates, it automatically adjusts capacity in response to changes in workload. With Application Auto Scaling, you can configure automatic scaling for services such as DynamoDB, ECS, Lambda, ElastiCache, and more. Auto scaling uses CloudWatch under the hood to configure scalable targets which a service namespace, resource ID, and scalable dimension can uniquely identify.&lt;/p>
&lt;p>LocalStack allows you to use the Application Auto Scaling APIs in your local environment to scale different resources based on scaling policies and scheduled scaling. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_application-autoscaling/">API coverage page&lt;/a>, which provides information on the extent of Application Auto Scaling&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>This guide is designed for users new to Application Auto Scaling and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how you can configure auto scaling to handle a heavy workload for your Lambda function.&lt;/p>
&lt;h3 id="create-a-lambda-function">Create a Lambda Function&lt;/h3>
&lt;p>To create a new Lambda function, create a new file called &lt;code>index.js&lt;/code> with the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">exports&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">async&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">console&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;Hello from Lambda!&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">statusCode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;Hello, World!&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the following command to create a new Lambda function using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/lambda/create-function.html">&lt;code>CreateFunction&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>zip function.zip index.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name autoscaling-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime nodejs18.x \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb://function.zip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler index.handler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::000000000000:role/cool-stacklifter&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-a-version-and-alias-for-your-lambda-function">Create a version and alias for your Lambda function&lt;/h3>
&lt;p>Next, you can create a version for your Lambda function and publish an alias. We will use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/lambda/publish-version.html">&lt;code>PublishVersion&lt;/code>&lt;/a> and &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/lambda/create-alias.html">&lt;code>CreateAlias&lt;/code>&lt;/a> APIs for this. Run the following commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda publish-version --function-name autoscaling-example
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-alias \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name autoscaling-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --description &amp;#34;alias for blue version of function&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-version 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name BLUE&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="register-the-lambda-function-as-a-scalable-target">Register the Lambda function as a scalable target&lt;/h3>
&lt;p>To register the Lambda function as a scalable target, you can use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/application-autoscaling/register-scalable-target.html">&lt;code>RegisterScalableTarget&lt;/code>&lt;/a> API. We will specify the &lt;code>--service-namespace&lt;/code> as &lt;code>lambda&lt;/code>, &lt;code>--scalable-dimension&lt;/code> as &lt;code>lambda:function:ProvisionedConcurrency&lt;/code>, and &lt;code>--resource-id&lt;/code> as &lt;code>function:autoscaling-example:BLUE&lt;/code>.&lt;/p>
&lt;p>Run the following command to register the scalable target:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal application-autoscaling register-scalable-target \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --service-namespace lambda \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --scalable-dimension lambda:function:ProvisionedConcurrency \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resource-id function:autoscaling-example:BLUE \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --min-capacity 0 --max-capacity 0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="setting-up-a-scheduled-action">Setting up a scheduled action&lt;/h3>
&lt;p>You can create a scheduled action that scales out by specifying the &lt;code>--schedule&lt;/code> parameter with a recurring schedule specified as a cron job. Run the following command to create a scheduled action using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/application-autoscaling/put-scheduled-action.html">&lt;code>PutScheduledAction&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal application-autoscaling put-scheduled-action \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --service-namespace lambda \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --scalable-dimension lambda:function:ProvisionedConcurrency \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resource-id function:autoscaling-example:BLUE \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --scheduled-action-name lambda-action \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --schedule &amp;#34;cron(*/2 * * * *)&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --scalable-target-action MinCapacity=1,MaxCapacity=5&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can confirm if the scheduled action exists using &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/application-autoscaling/describe-scheduled-actions.html">&lt;code>DescribeScheduledActions&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal application-autoscaling describe-scheduled-actions \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --service-namespace lambda&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="setting-up-a-target-tracking-scaling-policy">Setting up a target tracking scaling policy&lt;/h3>
&lt;p>You can now set up a target tracking scaling policy to scale based on current resource utilization. You can use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/application-autoscaling/put-scaling-policy.html">&lt;code>PutScalingPolicy&lt;/code>&lt;/a> API to create a target tracking scaling policy after ensuring that your predefined metric expects the target value. When metrics lack data due to minimal application load, Application Auto Scaling does not adjust capacity.&lt;/p>
&lt;p>Run the following command to create a target-tracking scaling policy:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal application-autoscaling put-scaling-policy \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --service-namespace lambda \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --scalable-dimension lambda:function:ProvisionedConcurrency \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resource-id function:events-example:BLUE \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --policy-name scaling-policy --policy-type TargetTrackingScaling \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --target-tracking-scaling-policy-configuration &amp;#39;{ &amp;#34;TargetValue&amp;#34;: 50.0, &amp;#34;PredefinedMetricSpecification&amp;#34;: { &amp;#34;PredefinedMetricType&amp;#34;: &amp;#34;predefinedmetric&amp;#34; }}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing AppConfig applications. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resource Browser&lt;/strong> section, and then clicking on &lt;strong>Application Auto Scaling&lt;/strong> under the &lt;strong>App Integration&lt;/strong> section.&lt;/p>
&lt;img src="application-auto-scaling-resource-browser.png" alt="Application Auto Scaling Resource Browser" title="Application Auto Scaling Resource Browser" width="900" />
&lt;br>&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create scalable target&lt;/strong>: Create a new scalable target by clicking &lt;strong>Create Scalable Target&lt;/strong> and providing the required details.&lt;/li>
&lt;li>&lt;strong>Filter services&lt;/strong>: Filter services by service namespace to view only the services you are interested in, by choosing from the dropdown list.&lt;/li>
&lt;li>&lt;strong>Delete&lt;/strong>: Delete a scalable target by selecting the target, followed by clicking &lt;strong>Actions&lt;/strong> and then &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;p>The following service namespaces are currently supported:&lt;/p>
&lt;ul>
&lt;li>Elastic Container Service (ECS)&lt;/li>
&lt;li>Elastic MapReduce (EMR)&lt;/li>
&lt;li>Elastic Compute Cloud (EC2)&lt;/li>
&lt;li>AppStream&lt;/li>
&lt;li>Lambda&lt;/li>
&lt;li>DynamoDB&lt;/li>
&lt;li>RDS&lt;/li>
&lt;li>Sagemaker&lt;/li>
&lt;li>Kafka&lt;/li>
&lt;li>Cassandra&lt;/li>
&lt;li>Comprenhend&lt;/li>
&lt;li>Custom Resource&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: AppSync</title><link>/user-guide/aws/appsync/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/appsync/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>AppSync is a managed service provided by Amazon Web Services (AWS) that enables you to create serverless GraphQL APIs to query databases, microservices, and other APIs. AppSync allows you to define your data models and business logic using a declarative approach, and connect to various data sources, including other AWS services, relational databases, and custom data sources.&lt;/p>
&lt;p>LocalStack allows you to use the AppSync APIs in your local environment to connect your applications and services to data and events. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_appsync/">API coverage page&lt;/a>, which provides information on the extent of AppSync&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to AppSync and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create an AppSync API with a DynamoDB data source using the AWS CLI.&lt;/p>
&lt;h3 id="create-a-dynamodb-table">Create a DynamoDB table&lt;/h3>
&lt;p>You can create a DynamoDB table using the &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_CreateTable.html">&lt;code>CreateTable&lt;/code>&lt;/a> API. Execute the following command to create a table named &lt;code>DynamoDBNotesTable&lt;/code> with a primary key named &lt;code>NoteId&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb create-table \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --table-name DynamoDBNotesTable \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --attribute-definitions AttributeName=NoteId,AttributeType=S \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --key-schema AttributeName=NoteId,KeyType=HASH \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --billing-mode PAY_PER_REQUEST&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After the table is created, you can use the &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ListTables.html">&lt;code>ListTables&lt;/code>&lt;/a> API. Run the following command to list all tables in your running LocalStack container:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb list-tables&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TableNames&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DynamoDBNotesTable&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-graphql-api">Create a GraphQL API&lt;/h3>
&lt;p>You can create a GraphQL API using the &lt;a href="https://docs.aws.amazon.com/appsync/latest/APIReference/API_CreateGraphqlApi.html">&lt;code>CreateGraphqlApi&lt;/code>&lt;/a> API. Execute the following command to create a GraphQL API named &lt;code>NotesApi&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appsync create-graphql-api \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name NotesApi \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --authentication-type API_KEY&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;graphqlApi&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;NotesApi&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;apiId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;014d18d0c2b149ee8b66f39173&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;authenticationType&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;API_KEY&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:appsync:us-east-1:000000000000:apis/014d18d0c2b149ee8b66f39173&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;uris&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;GRAPHQL&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;http://localhost:4566/graphql/014d18d0c2b149ee8b66f39173&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;REALTIME&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ws://localhost:4510/graphql/014d18d0c2b149ee8b66f39173&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;tags&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;xrayEnabled&amp;#34;&lt;/span>: &lt;span style="color:#204a87">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now create an API key for your GraphQL API using the &lt;a href="https://docs.aws.amazon.com/appsync/latest/APIReference/API_CreateApiKey.html">&lt;code>CreateApiKey&lt;/code>&lt;/a> API. Execute the following command to create an API key for your GraphQL API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appsync create-api-key \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --api-id 014d18d0c2b149ee8b66f39173&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;apiKey&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;id&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;31d94a05&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;expires&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">1693551600&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-graphql-schema">Create a GraphQL schema&lt;/h3>
&lt;p>Create a file named &lt;code>schema.graphql&lt;/code> with the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-graphql" data-lang="graphql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Note&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">NoteId&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ID&lt;/span>&lt;span style="color:#000;font-weight:bold">!&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">title&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">content&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">PaginatedNotes&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">notes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">Note&lt;/span>&lt;span style="color:#000;font-weight:bold">!]!&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">nextToken&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Query&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">allNotes&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">limit&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Int&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">nextToken&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">PaginatedNotes&lt;/span>&lt;span style="color:#000;font-weight:bold">!&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">getNote&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">NoteId&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ID&lt;/span>&lt;span style="color:#000;font-weight:bold">!):&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Note&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Mutation&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">saveNote&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">NoteId&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ID&lt;/span>&lt;span style="color:#000;font-weight:bold">!,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">title&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">!,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">content&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">String&lt;/span>&lt;span style="color:#000;font-weight:bold">!):&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Note&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">deleteNote&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">NoteId&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ID&lt;/span>&lt;span style="color:#000;font-weight:bold">!):&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Note&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">type&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Schema&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">query&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Query&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">mutation&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Mutation&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can start the schema creation process using the &lt;a href="https://docs.aws.amazon.com/appsync/latest/APIReference/API_StartSchemaCreation.html">&lt;code>StartSchemaCreation&lt;/code>&lt;/a> API. Execute the following command to start the schema creation process:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appsync start-schema-creation \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --api-id 014d18d0c2b149ee8b66f39173 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --definition file://schema.graphql&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ACTIVE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-data-source">Create a data source&lt;/h3>
&lt;p>You can create a data source using the &lt;a href="https://docs.aws.amazon.com/appsync/latest/APIReference/API_CreateDataSource.html">&lt;code>CreateDataSource&lt;/code>&lt;/a> API. Execute the following command to create a data source named &lt;code>DynamoDBNotesTable&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appsync create-data-source \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name AppSyncDB \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --api-id 014d18d0c2b149ee8b66f39173 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --type AMAZON_DYNAMODB \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --dynamodb-config tableName=DynamoDBNotesTable,awsRegion=us-east-1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;dataSource&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;dataSourceArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:appsync:us-east-1:000000000000:apis/014d18d0c2b149ee8b66f39173/datasources/AppSyncDB&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;AppSyncDB&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;AMAZON_DYNAMODB&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;dynamodbConfig&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;tableName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;DynamoDBNotesTable&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;awsRegion&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;us-east-1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-resolver">Create a resolver&lt;/h3>
&lt;p>You can create a resolver using the &lt;a href="https://github.com/localstack/docs/pull/782">&lt;code>CreateResolver&lt;/code>&lt;/a> API. You can create a custom &lt;code>request-mapping-template.vtl&lt;/code> and &lt;code>response-mapping-template.vtl&lt;/code> file to use as a mapping template to use for requests and responses respectively. Execute the following command to create a VTL resolver attached to the &lt;code>PaginatedNotes.notes&lt;/code> field:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appsync create-resolver \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --api-id 014d18d0c2b149ee8b66f39173 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --type Query \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --field PaginatedNotes.notes \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data-source-name AppSyncDB \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --request-mapping-template file://request-mapping-template.vtl \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --response-mapping-template file://response-mapping-template.vtl&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="custom-graphql-api-ids">Custom GraphQL API IDs&lt;/h2>
&lt;p>You can employ a pre-defined ID during the creation of GraphQL APIs by utilizing the special tag &lt;code>_custom_id_&lt;/code>. For example, the following command will create a GraphQL API with the ID &lt;code>faceb00c&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal appsync create-graphql-api \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name my-api \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --authentication-type API_KEY \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --tags _custom_id_=faceb00c&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;graphqlApi&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;my-api&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;apiId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;faceb00c&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;authenticationType&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;API_KEY&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:appsync:us-east-1:000000000000:apis/my-api&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;uris&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;GRAPHQL&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;http://localhost:4566/graphql/faceb00c&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;REALTIME&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ws://localhost:4510/graphql/faceb00c&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;tags&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;_custom_id_&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;faceb00c&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="graphql-data-sources">GraphQL Data sources&lt;/h2>
&lt;p>LocalStack supports the following data source types types and services:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Resolver Type&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>AMAZON_DYNAMODB&lt;/code>&lt;/td>
&lt;td>Provides access to DynamoDB tables.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>RELATIONAL_DATABASE&lt;/code>&lt;/td>
&lt;td>Provides access to RDS database tables.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>AWS_LAMBDA&lt;/code>&lt;/td>
&lt;td>Allows retrieval of data from Lambda function invocations.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>HTTP&lt;/code>&lt;/td>
&lt;td>Enables calling HTTP endpoints to fetch data.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>NONE&lt;/code>&lt;/td>
&lt;td>Used for pass-through resolver mapping templates returning input data.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="graphql-resolvers">GraphQL resolvers&lt;/h2>
&lt;p>LocalStack&amp;rsquo;s AppSync offers support for both unit and pipeline resolvers, as detailed in the &lt;a href="https://docs.aws.amazon.com/appsync/latest/devguide/resolver-components.html">AWS resolvers documentation&lt;/a>. Unit resolvers consist of request and response mapping templates, facilitating the transformation of requests to and from data sources.&lt;/p>
&lt;p>Pipeline resolvers, on the other hand, invoke AppSync functions that wraps the AppSync data sources. Unit resolvers are written in the Velocity templating language (VTL), while pipeline resolvers can be written in either VTL or JavaScript.&lt;/p>
&lt;h2 id="configuring-graphql-endpoints">Configuring GraphQL Endpoints&lt;/h2>
&lt;p>There are three configurable strategies that govern how GraphQL API endpoints are created. The strategy can be configured via the &lt;code>GRAPHQL_ENDPOINT_STRATEGY&lt;/code> environment variable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Value&lt;/th>
&lt;th>Format&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>domain&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;api-id&amp;gt;.appsync-api.localhost.localstack.cloud:4566&lt;/code>&lt;/td>
&lt;td>This strategy, slated to be the future default, uses the &lt;code>localhost.localstack.cloud&lt;/code> domain to route to your localhost.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>path&lt;/code>&lt;/td>
&lt;td>&lt;code>localhost:4566/appsync-api/&amp;lt;api-id&amp;gt;/graphql&lt;/code>&lt;/td>
&lt;td>An alternative strategy that can be beneficial if you&amp;rsquo;re unable to resolve LocalStack&amp;rsquo;s &lt;code>localhost&lt;/code> domain.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>legacy&lt;/code>&lt;/td>
&lt;td>&lt;code>localhost:4566/graphql/&amp;lt;api-id&amp;gt;&lt;/code>&lt;/td>
&lt;td>This strategy represents the old endpoint format, which is currently the default but will eventually be phased out.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="resolver-evaluation-endpoints">Resolver evaluation endpoints&lt;/h2>
&lt;p>LocalStack supports the resolver evaluation endpoints: &lt;a href="https://docs.aws.amazon.com/appsync/latest/APIReference/API_EvaluateCode.html">&lt;code>EvaluateCode&lt;/code>&lt;/a> and &lt;a href="https://docs.aws.amazon.com/appsync/latest/APIReference/API_EvaluateMappingTemplate.html">&lt;code>EvaluateMappingTemplate&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Resolver code can be either passed in as a string, or from a file with the &lt;code>file://&lt;/code> prefix for the &lt;code>--template/--code&lt;/code> arguments.
See the AWS documentation for &lt;a href="https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/evaluate-mapping-template.html">&lt;code>evaluate-mapping-template&lt;/code>&lt;/a> and &lt;a href="https://awscli.amazonaws.com/v2/documentation/api/latest/reference/appsync/evaluate-code.html">&lt;code>evaluate-code&lt;/code>&lt;/a> for more details.&lt;/p>
&lt;h3 id="vtl-resolver-templates">VTL resolver templates&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal appsync evaluate-mapping-template \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --template &amp;#39;$ctx.result&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --context &amp;#39;{&amp;#34;result&amp;#34;:&amp;#34;ok&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;evaluationResult&amp;#34;: &amp;#34;ok&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;logs&amp;#34;: []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="javascript-resolvers">JavaScript resolvers&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal appsync evaluate-code \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime name=APPSYNC_JS,runtimeVersion=1.0.0 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function request \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --code &amp;#39;export function request(ctx) { return ctx.result; }; export function response(ctx) {};&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --context &amp;#39;{&amp;#34;result&amp;#34;: &amp;#34;ok&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;evaluationResult&amp;#34;: &amp;#34;ok&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;logs&amp;#34;: []
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing AppSync APIs, Data Sources, Schema, Query, Types, Resolvers, Functions and API keys. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>AppSync&lt;/strong> under the &lt;strong>App Integration&lt;/strong> section.&lt;/p>
&lt;img src="appsync-resource-browser.png" alt="AppSync Resource Browser" title="AppSync Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create API&lt;/strong>: Create a new GraphQL API by clicking &lt;strong>Create API&lt;/strong> and providing a name for the API, Authentication Type, and optional tags among other parameters.&lt;/li>
&lt;li>&lt;strong>Edit API&lt;/strong>: Click on the GraphQL API name and click &lt;strong>Edit API&lt;/strong> to edit the GraphQL API, by updating the parameters before clicking &lt;strong>Submit&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Create Data Source&lt;/strong>: Click on the GraphQL API name and click &lt;strong>Data Source&lt;/strong>. Click on &lt;strong>Create Data Source&lt;/strong> to create a new data source for the GraphQL API, by providing a name for the data source, data source type, and Service Role ARN before clicking &lt;strong>Submit&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Edit Data Source&lt;/strong>: Click on the GraphQL API name and click &lt;strong>Data Source&lt;/strong>. Click on the data source name and click &lt;strong>Edit Data Source&lt;/strong> to edit the data source, by updating the parameters before clicking &lt;strong>Submit&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Create Types&lt;/strong>: Click on the GraphQL API name and click &lt;strong>Types&lt;/strong>. Click on &lt;strong>Create Type&lt;/strong> to create a type definition, in GraphQL Schema Definition Language (SDL) format, before clicking &lt;strong>Submit&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Create API Key&lt;/strong>: Click on the GraphQL API name and click &lt;strong>API Keys&lt;/strong>. Click on &lt;strong>Create API Key&lt;/strong> to create an API key for the GraphQL API, by providing a description for the API key and its expiration time before clicking &lt;strong>Submit&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>View and edit Schema&lt;/strong>: Click on the GraphQL API name and click &lt;strong>Schema&lt;/strong>. You can view the GraphQL schema, and edit the GraphQL schema, in GraphQL Schema Definition Language (SDL) format, before clicking &lt;strong>Update&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Query&lt;/strong>: Click on the GraphQL API name and click &lt;strong>Query&lt;/strong>. You can query the GraphQL API by providing the GraphQL query and variables, including the operation and API key, before clicking &lt;strong>Execute&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Attach Resolver&lt;/strong>: Click on the GraphQL API name and click &lt;strong>Resolvers&lt;/strong>. Click on &lt;strong>Attach Resolver&lt;/strong> to attach a resolver to a field, by providing the field name, data source name, Request Mapping Template, Response Mapping Template, among other parameters, before clicking &lt;strong>Submit&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Create Function&lt;/strong>: Click on the GraphQL API name and click &lt;strong>Functions&lt;/strong>. Click on &lt;strong>Create Function&lt;/strong> to create a function, by providing a name for the function, data source name, and Function Version, Request Mapping Template, Response Mapping Template, among other parameters, before clicking &lt;strong>Submit&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use AppSync in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/appsync-graphql-api-sample">AppSync GraphQL APIs for DynamoDB and RDS Aurora PostgreSQL&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Athena</title><link>/user-guide/aws/athena/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/athena/</guid><description>
&lt;p>Athena is an interactive query service provided by Amazon Web Services (AWS) that enables you to analyze data stored in S3 using standard SQL queries.
Athena allows users to create ad-hoc queries to perform data analysis, filter, aggregate, and join datasets stored in S3.
It supports various file formats, such as JSON, Parquet, and CSV, making it compatible with a wide range of data sources.&lt;/p>
&lt;p>LocalStack allows you to configure the Athena APIs with a Hive metastore that can connect to the S3 API and query your data directly in your local environment.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_athena/">API coverage page&lt;/a>, which provides information on the extent of Athena&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Athena and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.
We will demonstrate how to create an Athena table and run a query against it in addition to reading the results with the AWS CLI.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
To utilize the Athena API, LocalStack will download additional dependencies.
This involves getting a Docker image of around 1.5GB, containing Presto, Hive, and other tools.
These components are retrieved automatically when you initiate the service.
To ensure a smooth initial setup, ensure you&amp;rsquo;re connected to a stable internet connection while fetching these components for the first time.
&lt;/div>
&lt;h3 id="create-an-s3-bucket">Create an S3 bucket&lt;/h3>
&lt;p>You can create an S3 bucket using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3/mb.html">&lt;code>mb&lt;/code>&lt;/a> command.
Run the following command to create a bucket named &lt;code>athena-bucket&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://athena-bucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can create some sample data using the following commands:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#34;Name,Service&amp;#34; &amp;gt; data.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#34;LocalStack,Athena&amp;#34; &amp;gt;&amp;gt; data.csv&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can upload the data to your bucket using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3/cp.html">&lt;code>cp&lt;/code>&lt;/a> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp data.csv s3://athena-bucket/data/&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-an-athena-table">Create an Athena table&lt;/h3>
&lt;p>You can create an Athena table using the &lt;a href="https://docs.aws.amazon.com/athena/latest/APIReference/API_CreateTable.html">&lt;code>CreateTable&lt;/code>&lt;/a> API
Run the following command to create a table named &lt;code>athena_table&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal athena start-query-execution \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --query-string &amp;#34;create external table tbl01 (name STRING, surname STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY &amp;#39;,&amp;#39; LOCATION &amp;#39;s3://athena-bucket/data/&amp;#39;;&amp;#34; --result-configuration &amp;#34;OutputLocation=s3://athena-bucket/output/&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;QueryExecutionId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;593acab7&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can retrieve information about the query execution using the &lt;a href="https://docs.aws.amazon.com/athena/latest/APIReference/API_GetQueryExecution.html">&lt;code>GetQueryExecution&lt;/code>&lt;/a> API.
Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal athena get-query-execution --query-execution-id 593acab7&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace &lt;code>593acab7&lt;/code> with the &lt;code>QueryExecutionId&lt;/code> returned by the &lt;a href="https://docs.aws.amazon.com/athena/latest/APIReference/API_StartQueryExecution.html">&lt;code>StartQueryExecution&lt;/code>&lt;/a> API.&lt;/p>
&lt;h3 id="get-output-of-the-query">Get output of the query&lt;/h3>
&lt;p>You can get the output of the query using the &lt;a href="https://docs.aws.amazon.com/athena/latest/APIReference/API_GetQueryResults.html">&lt;code>GetQueryResults&lt;/code>&lt;/a> API.
Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal athena get-query-results --query-execution-id 593acab7&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now read the data from the &lt;code>tbl01&lt;/code> table and retrieve the data from S3 that was mentioned in your table creation statement.
Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal athena start-query-execution \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --query-string &amp;#34;select * from tbl01;&amp;#34; --result-configuration &amp;#34;OutputLocation=s3://athena-bucket/output/&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can retrieve the execution details similarly using the &lt;a href="https://docs.aws.amazon.com/athena/latest/APIReference/API_GetQueryExecution.html">&lt;code>GetQueryExecution&lt;/code>&lt;/a> API using the &lt;code>QueryExecutionId&lt;/code> returned by the previous step.&lt;/p>
&lt;p>You can copy the &lt;code>ResultConfiguration&lt;/code> from the output and use it to retrieve the results of the query.
Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cp s3://athena-bucket/output/593acab7.csv .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat 593acab7.csv&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace &lt;code>593acab7.csv&lt;/code> with the path to the file that was present in the &lt;code>ResultConfiguration&lt;/code> of the previous step.
You can also use the &lt;a href="https://docs.aws.amazon.com/athena/latest/APIReference/API_GetQueryResults.html">&lt;code>GetQueryResults&lt;/code>&lt;/a> API to retrieve the results of the query.&lt;/p>
&lt;h2 id="delta-lake-tables">Delta Lake Tables&lt;/h2>
&lt;p>LocalStack Athena supports &lt;a href="https://delta.io">Delta Lake&lt;/a>, an open-source storage framework that extends Parquet data files with a file-based transaction log for ACID transactions and scalable metadata handling.&lt;/p>
&lt;p>To illustrate this feature, we take a sample published in the &lt;a href="https://aws.amazon.com/blogs/big-data/crawl-delta-lake-tables-using-aws-glue-crawlers">AWS blog&lt;/a>.&lt;/p>
&lt;p>The Delta Lake files used in this sample are available in a public S3 bucket under &lt;code>s3://aws-bigdata-blog/artifacts/delta-lake-crawler/sample_delta_table&lt;/code>.
For your convenience, we have prepared the test files in a downloadable ZIP file &lt;a href="https://localstack-assets.s3.amazonaws.com/aws-sample-athena-delta-lake.zip">here&lt;/a>.
We start by downloading and extracting this ZIP file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mkdir /tmp/delta-lake-sample; cd /tmp/delta-lake-sample
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>wget https://localstack-assets.s3.amazonaws.com/aws-sample-athena-delta-lake.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>unzip aws-sample-athena-delta-lake.zip; rm aws-sample-athena-delta-lake.zip&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>We can then create an S3 bucket in LocalStack using the &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> command line, and upload the files to the bucket:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 sync /tmp/delta-lake-sample s3://test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Next, we create the table definitions in Athena:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal athena start-query-execution \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --query-string &amp;#34;CREATE EXTERNAL TABLE test (product_id string, product_name string, \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> price bigint, currency string, category string, updated_at double) \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LOCATION &amp;#39;s3://test/&amp;#39; TBLPROPERTIES (&amp;#39;table_type&amp;#39;=&amp;#39;DELTA&amp;#39;)&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Please note that this query may take some time to finish executing.
You can observe the output in the LocalStack container (ideally with &lt;code>DEBUG=1&lt;/code> enabled) to follow the steps of the query execution.&lt;/p>
&lt;p>Finally, we can now run a &lt;code>SELECT&lt;/code> query to extract data from the Delta Lake table we&amp;rsquo;ve just created:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>queryId=$(awslocal athena start-query-execution --query-string &amp;#34;SELECT * from deltalake.default.test&amp;#34; | jq -r .QueryExecutionId)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal athena get-query-results --query-execution-id $queryId&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>The query should yield a result similar to the output below:&lt;/p>
&lt;pre tabindex="0">&lt;code>...
&amp;#34;Rows&amp;#34;: [
{
&amp;#34;Data&amp;#34;: [
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;product_id&amp;#34; },
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;product_name&amp;#34; },
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;price&amp;#34; },
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;currency&amp;#34; },
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;category&amp;#34; },
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;updated_at&amp;#34; }
]
},
{
&amp;#34;Data&amp;#34;: [
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;00005&amp;#34; },
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;USB charger&amp;#34; },
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;50&amp;#34; },
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;INR&amp;#34; },
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;Electronics&amp;#34; },
{ &amp;#34;VarCharValue&amp;#34;: &amp;#34;1653462374.9975588&amp;#34; }
]
},
...
...
&lt;/code>&lt;/pre>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The &lt;code>SELECT&lt;/code> statement above currently requires us to prefix the database/table name with &lt;code>deltalake.&lt;/code> - this will be further improved in a future iteration, for better parity with AWS.
&lt;/div>
&lt;h2 id="iceberg-tables">Iceberg Tables&lt;/h2>
&lt;p>The LocalStack Athena implementation also supports &lt;a href="https://docs.aws.amazon.com/athena/latest/ug/querying-iceberg-creating-tables.html">Iceberg tables&lt;/a>.
You can define an Iceberg table in Athena using the &lt;code>CREATE TABLE&lt;/code> statement, as shown in the example below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">CREATE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">TABLE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">mytable&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">c1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">integer&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">c2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">string&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">c3&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">double&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">LOCATION&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;s3://mybucket/prefix/&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">TBLPROPERTIES&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;table_type&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;ICEBERG&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once the table has been created and data inserted into it, you can see the Iceberg metadata and data files being created in S3:&lt;/p>
&lt;pre tabindex="0">&lt;code>s3://mybucket/_tmp.prefix/
s3://mybucket/prefix/data/00000-0-user1_20230212221600_cd8f8cbd-4dcc-4c3f-96a2-f08d4104d6fb-job_local1695603329_0001-00001.parquet
s3://mybucket/prefix/data/00000-0-user1_20230212221606_eef1fd88-8ff1-467a-a15b-7a24be7bc52b-job_local1976884152_0002-00001.parquet
s3://mybucket/prefix/metadata/00000-06706bea-e09d-4ff1-b366-353705634f3a.metadata.json
s3://mybucket/prefix/metadata/00001-3df6a04e-070d-447c-a213-644fe6633759.metadata.json
s3://mybucket/prefix/metadata/00002-5dcd5d07-a9ed-4757-a6bc-9e87fcd671d5.metadata.json
s3://mybucket/prefix/metadata/2f8d3628-bb13-4081-b5a9-30f2e81b7226-m0.avro
s3://mybucket/prefix/metadata/70de28f7-6507-44ae-b505-618d734174b9-m0.avro
s3://mybucket/prefix/metadata/snap-8425363304532374388-1-70de28f7-6507-44ae-b505-618d734174b9.avro
s3://mybucket/prefix/metadata/snap-9068645333036463050-1-2f8d3628-bb13-4081-b5a9-30f2e81b7226.avro
s3://mybucket/prefix/temp/
&lt;/code>&lt;/pre>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for Athena query execution, writing SQL queries, and visualizing query results.
You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>Athena&lt;/strong> under the &lt;strong>Analytics&lt;/strong> section.&lt;/p>
&lt;img src="athena-resource-browser.png" alt="Athena Resource Browser" title="Athena Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>View Databases&lt;/strong>: View the databases available in your Athena instance by clicking on the &lt;strong>Databases&lt;/strong> tab.&lt;/li>
&lt;li>&lt;strong>View Catalogs&lt;/strong>: View the catalogs available in your Athena instance by clicking on the &lt;strong>Catalogs&lt;/strong> tab.&lt;/li>
&lt;li>&lt;strong>Edit Catalogs&lt;/strong>: Edit the catalogs available in your Athena instance by clicking on the &lt;strong>Catalog name&lt;/strong>, editing the catalog, and then clicking on the &lt;strong>Submit&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>Create Catalogs&lt;/strong>: Create a new catalog by clicking on the &lt;strong>Create Catalog&lt;/strong> button, entering the catalog details, and then clicking on the &lt;strong>Submit&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>Run SQL Queries&lt;/strong>: Run SQL queries by clicking on the &lt;strong>SQL&lt;/strong> button, entering the query, and then clicking on the &lt;strong>Execute&lt;/strong> button.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use Athena in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/query-data-s3-athena-glue-sample">Query data in S3 Bucket with Amazon Athena, Glue Catalog &amp;amp; CloudFormation&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Backup</title><link>/user-guide/aws/backup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/backup/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Backup is a centralized backup service provided by Amazon Web Services. It simplifies the process of backing up and restoring your data across various AWS services and resources. Backup supports a wide range of AWS resources, including Elastic Block Store (EBS) volumes, Relational Database Service (RDS) databases, DynamoDB tables, Elastic File System (EFS) file systems, and more. Backup enables you to set backup retention policies, allowing you to specify how long you want to retain your backup copies.&lt;/p>
&lt;p>LocalStack allows you to use the Backup APIs in your local environment to manage backup plans, create scheduled or on-demand backups of certain resource types. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_backup/">API coverage page&lt;/a>, which provides information on the extent of Backup&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Backup and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create a backup job and specify a set of resources to the backup plan name and backup rules with the AWS CLI.&lt;/p>
&lt;h3 id="create-a-backup-vault">Create a backup vault&lt;/h3>
&lt;p>You can create a backup vault which acts as a logical container where backups are stored using the &lt;a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_CreateBackupVault.html">&lt;code>CreateBackupVault&lt;/code>&lt;/a> API. Run the following command to create a backup vault named &lt;code>my-vault&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal backup create-backup-vault \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --backup-vault-name primary&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;BackupVaultName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;primary&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;BackupVaultArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:backup:us-east-1:000000000000:backup-vault:primary&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationDate&amp;#34;&lt;/span>: 1693286432.432258
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-backup-plan">Create a backup plan&lt;/h3>
&lt;p>You can create a backup plan which specifies the backup vault to store the backups in and the schedule for creating backups. You can specify the backup plan in a &lt;code>backup-plan.json&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;BackupPlanName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;testplan&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Rules&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RuleName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;HalfDayBackups&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;TargetBackupVaultName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;primary&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ScheduleExpression&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;cron(0 5/12 ? * * *)&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;StartWindowMinutes&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">480&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CompletionWindowMinutes&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10080&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Lifecycle&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DeleteAfterDays&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CopyActions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DestinationBackupVaultArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:backup:us-east-1:000000000000:backup-vault:secondary&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Lifecycle&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DeleteAfterDays&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">30&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use the &lt;a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_CreateBackupPlan.html">&lt;code>CreateBackupPlan&lt;/code>&lt;/a> API to create a backup plan. Run the following command to create a backup plan:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal backup create-backup-plan \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --backup-plan file://backup-plan.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;BackupPlanId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;9337aba3&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;BackupPlanArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:backup:us-east-1:000000000000:backup-plan:testplan&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationDate&amp;#34;&lt;/span>: 1693286644.0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;VersionId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;9dc2cb60&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-backup-selection">Create a backup selection&lt;/h3>
&lt;p>You can create a backup selection which specifies the resources to backup and the backup plan to associate with. You can specify the backup selection in a &lt;code>backup-selection.json&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;SelectionName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Myselection&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;IamRoleArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:role/service-role/AWSBackupDefaultServiceRole&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Resources&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;arn:aws:ec2:us-east-1:000000000000:volume/vol-0abcdef1234&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ListOfTags&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ConditionType&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;STRINGEQUALS&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ConditionKey&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;backup&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ConditionValue&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;yes&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use the &lt;a href="https://docs.aws.amazon.com/aws-backup/latest/devguide/API_CreateBackupSelection.html">&lt;code>CreateBackupSelection&lt;/code>&lt;/a> API to create a backup selection. Run the following command to create a backup selection:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal backup create-backup-selection \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --backup-plan-id 9337aba3 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --backup-selection file://backup-plan-resources.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace the &lt;code>--backup-plan-id&lt;/code> value with the &lt;code>BackupPlanId&lt;/code> value from the output of the previous command. The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;SelectionId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;91ce25f8&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;BackupPlanId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;9337aba3&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationDate&amp;#34;&lt;/span>: 1693287607.209043
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing backup plans and vaults. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>Backup&lt;/strong> under the &lt;strong>Storage&lt;/strong> section.&lt;/p>
&lt;img src="backup-resource-browser.png" alt="Backup Resource Browser" title="Backup Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Backup Plan&lt;/strong>: Create a backup plan by clicking the &lt;strong>Create&lt;/strong> button in the &lt;strong>Backup Plans&lt;/strong> tab and specifying the backup plan details, including the plan name, rules, backup setting, and more in the modal dialog.&lt;/li>
&lt;li>&lt;strong>Create Backup Vault&lt;/strong>: Create a backup vault by clicking the &lt;strong>Create&lt;/strong> button in the &lt;strong>Backup Vault&lt;/strong> tab and specifying the vault name, tags, and other parameters in the modal dialog.&lt;/li>
&lt;li>&lt;strong>Create Backup&lt;/strong>: Create a backup by clicking the &lt;strong>Backup Vault&lt;/strong> and then clicking the &lt;strong>Actions&lt;/strong> button followed by clicking the &lt;strong>Create Backup&lt;/strong> button in the modal dialog. Specify the backup name, backup vault, and other parameters in the modal dialog.&lt;/li>
&lt;li>&lt;strong>Assign Resources&lt;/strong>: Click the backup plan and then click the &lt;strong>Actions&lt;/strong> button followed by clicking the &lt;strong>Assign Resources&lt;/strong> button in the modal dialog. Specify the backup plan ID and resources to assign in the modal dialog, and click &lt;strong>Submit&lt;/strong> to assign the resources to the backup plan.&lt;/li>
&lt;li>&lt;strong>Delete Vault&lt;/strong>: Delete a backup vault by clicking the &lt;strong>Backup Vault&lt;/strong> or selecting multiple vaults. Click the &lt;strong>Actions&lt;/strong> button followed by clicking the &lt;strong>Delete Vault&lt;/strong> button or &lt;strong>Remove Selected&lt;/strong> to delete an individual vault or multiple vaults respectively in the modal dialog.&lt;/li>
&lt;li>&lt;strong>Delete Backup Plan&lt;/strong>: Delete a backup plan by clicking the &lt;strong>Backup Plan&lt;/strong> or selecting multiple plans. Click the &lt;strong>Actions&lt;/strong> button followed by clicking the &lt;strong>Delete Backup Plan&lt;/strong> button or &lt;strong>Remove Selected&lt;/strong> to delete an individual plan or multiple plans respectively in the modal dialog.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Batch</title><link>/user-guide/aws/batch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/batch/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Batch is a cloud-based service provided by Amazon Web Services (AWS) that simplifies the process of running batch computing workloads on the AWS cloud infrastructure. Batch allows you to efficiently process large volumes of data and run batch jobs without the need to manage and provision underlying compute resources.&lt;/p>
&lt;p>LocalStack allows you to use the Batch APIs to automate and scale computational tasks in your local environment while handling batch workloads. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_batch/">API Coverage Page&lt;/a>, which provides information on the extent of Batch integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to AWS Batch and assumes basic knowledge of the AWS CLI and our &lt;code>awslocal&lt;/code> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.
We will demonstrate how you create and run a Batch job by following these steps:&lt;/p>
&lt;ol>
&lt;li>Creating a service role for the compute environment.&lt;/li>
&lt;li>Creating the compute environment.&lt;/li>
&lt;li>Creating a job queue using the compute environment.&lt;/li>
&lt;li>Creating a job definition.&lt;/li>
&lt;li>Submitting a job to the job queue.&lt;/li>
&lt;/ol>
&lt;h3 id="create-a-service-role">Create a service role&lt;/h3>
&lt;p>You can create a role using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/iam/create-role.html">&lt;code>CreateRole&lt;/code>&lt;/a> API. For LocalStack, the service role simply needs to exist. However, when &lt;a href="/user-guide/aws/iam/#enforcing-iam-policies">enforcing IAM policies&lt;/a>, it is necessary that the policy is valid.&lt;/p>
&lt;p>Run the following command to create a role with an empty policy document:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role-name myrole \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --assume-role-policy-document &amp;#34;{}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Role&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Path&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;RoleName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;myrole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;RoleId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;AROAQAAAAAAAMKIDGTHVC&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:role/myrole&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreateDate&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-08-10T20:52:06.196000Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AssumeRolePolicyDocument&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-the-compute-environment">Create the compute environment&lt;/h3>
&lt;p>You can use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/batch/create-compute-environment.html">&lt;code>CreateComputeEnvironment&lt;/code>&lt;/a> API to create a compute environment. Run the following command using the role ARN above (&lt;code>arn:aws:iam::000000000000:role/myrole&lt;/code>), to create the compute environment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal batch create-compute-environment \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --compute-environment-name myenv \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --type UNMANAGED \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --service-role &amp;lt;role-arn&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;computeEnvironmentName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;myenv&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;computeEnvironmentArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:batch:us-east-1:000000000000:compute-environment/myenv&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
While an unmanaged compute environment has been specified, there is no need to provision any compute resources for this setup to function. Your tasks will run independently in new Docker containers, alongside the LocalStack container.
&lt;/div>
&lt;h3 id="create-a-job-queue">Create a job queue&lt;/h3>
&lt;p>You can fetch the ARN using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/batch/describe-compute-environments.html">&lt;code>DescribeComputeEnvironments&lt;/code>&lt;/a> API. Run the following command to fetch the ARN of the compute environment:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal batch describe-compute-environments --compute-environments myenv&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;computeEnvironments&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;computeEnvironmentName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;myenv&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;computeEnvironmentArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:batch:us-east-1:000000000000:compute-environment/myenv&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ecsClusterArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:ecs:us-east-1:000000000000:cluster/OnDemand_Batch_f2faa82c-8c31-466d-ab22-579925d810ac&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;type&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;UNMANAGED&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;VALID&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;statusReason&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Compute environment is available&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;serviceRole&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:role/myrole&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use the ARN to create the job queue using &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/batch/create-job-queue.html">&lt;code>CreateJobQueue&lt;/code>&lt;/a> API. Run the following command to create the job queue:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal batch create-job-queue \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --job-queue-name myqueue \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --priority 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --compute-environment-order order=0,computeEnvironment=arn:aws:batch:us-east-1:000000000000:compute-environment/myenv \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --state ENABLED&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;jobQueueName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;myqueue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;jobQueueArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:batch:us-east-1:000000000000:job-queue/myqueue&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-job-definition">Create a job definition&lt;/h3>
&lt;p>Now, you can define what occurs during a job run, or at least what transpires by default. In this example, you can execute the &lt;code>busybox&lt;/code> container from DockerHub and initiate the command: &lt;code>sleep 30&lt;/code> within it. It&amp;rsquo;s important to note that you can override this command when submitting the job.&lt;/p>
&lt;p>Run the following command to create the job definition using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/batch/register-job-definition.html">&lt;code>RegisterJobDefinition&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal batch register-job-definition \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --job-definition-name myjobdefn \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --type container \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --container-properties &amp;#39;{&amp;#34;image&amp;#34;:&amp;#34;busybox&amp;#34;,&amp;#34;vcpus&amp;#34;:1,&amp;#34;memory&amp;#34;:128,&amp;#34;command&amp;#34;:[&amp;#34;sleep&amp;#34;,&amp;#34;30&amp;#34;]}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;jobDefinitionName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;myjobdefn&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;jobDefinitionArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:batch:us-east-1:000000000000:job-definition/myjobdefn:1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;revision&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="submit-a-job-to-the-job-queue">Submit a job to the job queue&lt;/h3>
&lt;p>You can now run a compute job. This command runs a job on the queue that you have set up previously, overriding the container command to run: &lt;code>sh -c &amp;quot;sleep 5; pwd&amp;quot;&lt;/code>. This command simulates work being done in the container.&lt;/p>
&lt;p>Run the following command to submit a job to the job queue using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/batch/submit-job.html">&lt;code>SubmitJob&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal batch submit-job \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --job-name myjob \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --job-queue myqueue \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --job-definition myjobdefn \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --container-overrides &amp;#39;{&amp;#34;command&amp;#34;:[&amp;#34;sh&amp;#34;, &amp;#34;-c&amp;#34;, &amp;#34;sleep 5; pwd&amp;#34;]}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;jobName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;myjob&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;jobId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;23027eb6-cce0-4365-a412-36917a2dfd03&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;p>As mentioned in the example above, the creation of a compute environment does not entail the provisioning of EC2 or Fargate instances. Rather, it executes Batch jobs on the local Docker daemon, operating alongside LocalStack.&lt;/p></description></item><item><title>User-Guide: Certificate Manager (ACM)</title><link>/user-guide/aws/acm/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/acm/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>&lt;a href="https://aws.amazon.com/certificate-manager/">AWS Certificate Manager (ACM)&lt;/a> is a service that enables you to create and manage SSL/TLS certificates that can be used to secure your applications and resources in AWS. You can use ACM to provision and deploy public or private certificates trusted by browsers and other clients.&lt;/p>
&lt;p>ACM supports securing multiple domain names and subdomains and can create wildcard SSL certificates to protect an entire domain and its subdomains. You can also use ACM to import certificates from third-party certificate authorities or to generate private certificates for internal use.&lt;/p>
&lt;p>LocalStack allows you to use the ACM APIs to create, list, and delete certificates. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_acm/">API coverage page&lt;/a>, which provides information on the extent of ACM&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users who are new to ACM and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;h3 id="request-a-public-certificate">Request a public certificate&lt;/h3>
&lt;p>Start your LocalStack container using your preferred method, then use the &lt;a href="https://docs.aws.amazon.com/acm/latest/APIReference/API_RequestCertificate.html">RequestCertificate API&lt;/a> to request a new public ACM certificate. Specify the domain name you want to request the certificate for, and any additional options you need. Here&amp;rsquo;s an example command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal acm request-certificate \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --domain-name www.example.com \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --validation-method DNS \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --idempotency-token 1234 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --options CertificateTransparencyLoggingPreference=DISABLED&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This command will return the Amazon Resource Name (ARN) of the new certificate, which you can use in other ACM commands.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CertificateArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:acm:&amp;lt;region&amp;gt;:000000000000:certificate/&amp;lt;certificate_ID&amp;gt;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="list-the-certificates">List the certificates&lt;/h3>
&lt;p>Use the &lt;a href="https://docs.aws.amazon.com/acm/latest/APIReference/API_ListCertificates.html">&lt;code>ListCertificates&lt;/code> API&lt;/a> to list all the certificates. This command returns a list of the ARNs of all the certificates that have been requested or imported into ACM. Here&amp;rsquo;s an example command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal acm list-certificates --max-items 10&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="describe-the-certificate">Describe the certificate&lt;/h3>
&lt;p>Use the &lt;a href="https://docs.aws.amazon.com/acm/latest/APIReference/API_DescribeCertificate.html">&lt;code>DescribeCertificate&lt;/code> API&lt;/a> to view the details of a specific certificate. Provide the ARN of the certificate you want to view, and this command will return information about the certificate&amp;rsquo;s status, domain name, and other attributes. Here&amp;rsquo;s an example command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal acm describe-certificate --certificate-arn arn:aws:acm:&amp;lt;region&amp;gt;:account:certificate/&amp;lt;certificate_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="delete-the-certificate">Delete the certificate&lt;/h3>
&lt;p>Finally you can use the &lt;a href="https://docs.aws.amazon.com/acm/latest/APIReference/API_DeleteCertificate.html">&lt;code>DeleteCertificate&lt;/code> API&lt;/a> to delete a certificate from ACM, by passing the ARN of the certificate you want to delete. Here&amp;rsquo;s an example command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal acm delete-certificate --certificate-arn arn:aws:acm:&amp;lt;region&amp;gt;:account:certificate/&amp;lt;certificate_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing ACM Certificates.
You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resource Browser&lt;/strong> section, and then clicking on &lt;strong>Certificate Manager&lt;/strong> under the &lt;strong>Security Identity Compliance&lt;/strong> section.&lt;/p>
&lt;img src="acm-resource-browser.png" alt="ACM Resource Browser" title="ACM Resource Browser" width="900" />
&lt;br>&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Certificate&lt;/strong>: Create a new ACM certificate by clicking &lt;strong>Create Certificate&lt;/strong> and providing the required information.&lt;/li>
&lt;li>&lt;strong>View Certificate&lt;/strong>: View the details of a specific certificate by clicking on the domain name.&lt;/li>
&lt;li>&lt;strong>Delete Certificate&lt;/strong>: Delete a certificate by selecting the certificate, followed by clicking &lt;strong>Actions&lt;/strong> and then &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use ACM in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/apigw-custom-domain">API Gateway with Custom Domains&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-terraform-samples/tree/master/acm-route53">Generating an ACM certificate via Terraform&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: CloudFormation</title><link>/user-guide/aws/cloudformation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cloudformation/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>CloudFormation is a service provided by Amazon Web Services (AWS) that allows you to define and provision infrastructure as code. It enables you to create, update, and manage resources in a repeatable and automated manner using declarative templates. With CloudFormation, you can use JSON or YAML templates to define your desired infrastructure state. You can specify resources, their configurations, dependencies, and relationships in these templates.&lt;/p>
&lt;p>LocalStack supports CloudFormation, allowing you to use the CloudFormation APIs in your local environment to declaratively define your architecture on the AWS, including resources such as S3 Buckets, Lambda Functions, and much more. The &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_cloudformation/">API coverage page&lt;/a> and &lt;a href="#feature-coverage">feature coverage&lt;/a> provides information on the extent of CloudFormation&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to CloudFormation and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to deploy a simple CloudFormation stack consisting of a single S3 Bucket with the AWS CLI.&lt;/p>
&lt;h3 id="create-a-cloudformation-stack">Create a CloudFormation Stack&lt;/h3>
&lt;p>CloudFormation stack is a collection of AWS resources that you can create, update, or delete as a single unit. Stacks are defined using JSON or YAML templates. Use the following code snippet and save the content in either &lt;code>cfn-quickstart-stack.yaml&lt;/code> or &lt;code>cfn-quickstart-stack.json&lt;/code>, depending on your preferred format.&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-0" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-yaml"
id="tabs-00-00-tab" data-toggle="tab" href="#tabs-00-00" role="tab"
onclick="persistLang(&amp;#34;yaml&amp;#34;);"aria-controls="tabs-00-00" aria-selected="false">
YAML
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link persistLang-json"
id="tabs-00-01-tab" data-toggle="tab" href="#tabs-00-01" role="tab"
onclick="persistLang(&amp;#34;json&amp;#34;);"aria-controls="tabs-00-01" aria-selected="false">
JSON
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-0-content">
&lt;div class="tab-pane fade show active"
id="tabs-00-00" role="tabpanel" aria-labelled-by="tabs-00-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">Resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">LocalBucket&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AWS::S3::Bucket&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Properties&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">BucketName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">cfn-quickstart-bucket&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-00-01" role="tabpanel" aria-labelled-by="tabs-00-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Resources&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;LocalBucket&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;AWS::S3::Bucket&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Properties&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;BucketName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;cfn-quickstart-bucket&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="deploy-the-cloudformation-stack">Deploy the CloudFormation Stack&lt;/h3>
&lt;p>You can deploy the CloudFormation stack using the AWS CLI with the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/cloudformation/deploy/index.html">&lt;code>deploy&lt;/code>&lt;/a> command. The &lt;code>deploy&lt;/code> command creates and updates CloudFormation stacks. Run the following command to deploy the stack:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudformation deploy \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stack-name cfn-quickstart-stack \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --template-file &amp;#34;./cfn-quickstart-stack.yaml&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can verify that the stack was created successfully by listing the S3 buckets in your LocalStack container using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3api/list-buckets.html">&lt;code>ListBucket&lt;/code> API&lt;/a>. Run the following command to list the buckets:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3api list-buckets&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="delete-the-cloudformation-stack">Delete the CloudFormation Stack&lt;/h3>
&lt;p>You can delete the CloudFormation stack using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/cloudformation/delete-stack.html">&lt;code>delete-stack&lt;/code>&lt;/a> command. Run the following command to delete the stack along with all the resources created by the stack:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudformation delete-stack \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stack-name cfn-quickstart-stack&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="local-user-interface">Local User-Interface&lt;/h2>
&lt;p>You can also utilize LocalStack&amp;rsquo;s local CloudFormation user-interface to deploy and manage your CloudFormation stacks using public templates. You can access the user-interface at &lt;a href="http://localhost:4566/_localstack/cloudformation/deploy">&lt;code>localhost:4566/_localstack/cloudformation/deploy&lt;/code>&lt;/a>.&lt;/p>
&lt;img src="localstack-cloudformation-local-user-interface.png" alt="Local CloudFormation UI in LocalStack" title="Local CloudFormation UI in LocalStack" width="900" />
&lt;br>&lt;br>
&lt;p>You can utilize the CloudFormation user interface to provide an existing CloudFormation template URL, input the necessary parameters, and initiate the deployment directly from your browser. Let&amp;rsquo;s proceed with an example template to deploy a CloudFormation stack.&lt;/p>
&lt;p>To begin, employ the public CloudFormation template URL: &lt;a href="https://s3.eu-central-1.amazonaws.com/cloudformation-templates-eu-central-1/DynamoDB_Secondary_Indexes.template">&lt;code>s3.eu-central-1.amazonaws.com/cloudformation-templates-eu-central-1/DynamoDB_Secondary_Indexes.template&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Following this, download the template URL and extract the stack parameters (default values will be automatically applied). Upon submission, the stack deployment will be triggered, and a result message will be displayed.&lt;/p>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing CloudFormation stacks to manage your AWS resources locally. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>CloudFormation&lt;/strong> under the &lt;strong>Management/Governance&lt;/strong> section.&lt;/p>
&lt;img src="cloudformation-resource-browser.png" alt="CloudFormation Resource Browser" title="CloudFormation Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Stack&lt;/strong>: Create a new CloudFormation stack by clicking on &lt;strong>Create Stack&lt;/strong> and provide a template file or URL, including the stack name and parameters.&lt;/li>
&lt;li>&lt;strong>Edit Stack&lt;/strong>: Edit an existing CloudFormation stack by clicking on &lt;strong>Edit Stack&lt;/strong> and editing the stack name and parameters and clicking on &lt;strong>Submit&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>View Stack&lt;/strong>: View an existing CloudFormation stack by clicking on the Stack Name and viewing the stack details, including the stack name, status, and resources.&lt;/li>
&lt;li>&lt;strong>Delete Stack&lt;/strong>: Delete an existing CloudFormation stack by clicking on the Stack Name and clicking on &lt;strong>Actions&lt;/strong> and then &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use CloudFormation in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/serverless-api-ecs-apigateway-sample">Serverless Container-based APIs with Amazon ECS &amp;amp; API Gateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/tutorials/ecs-ecr-container-app/">Deploying containers on ECS clusters using ECR and Fargate&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/sqs-fargate-ddb-cdk-go">Messaging Processing application with SQS, DynamoDB, and Fargate&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="feature-coverage">Feature coverage&lt;/h2>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
We are continually enhancing our CloudFormation feature coverage by consistently introducing new resource types. Your feature requests assist us in determining the priority of resource additions. Feel free to contribute by &lt;a href="https://github.com/localstack/localstack/issues/new?assignees=&amp;amp;labels=feature-request&amp;amp;template=feature-request.yml&amp;amp;title=feature+request%3A+%3Ctitle%3E">creating a new GitHub issue&lt;/a>.
&lt;/div>
&lt;h3 id="features">Features&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Feature&lt;/th>
&lt;th style="text-align:left">Support&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">Parameters&lt;/td>
&lt;td style="text-align:left">Partial&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Dynamic References&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Rules&lt;/td>
&lt;td style="text-align:left">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Mappings&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Conditions&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Transform&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Outputs&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Custom resources&lt;/td>
&lt;td style="text-align:left">Partial&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Drift detection&lt;/td>
&lt;td style="text-align:left">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Importing Resources&lt;/td>
&lt;td style="text-align:left">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Change sets&lt;/td>
&lt;td style="text-align:left">&lt;strong>Full&lt;/strong>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Nested stacks&lt;/td>
&lt;td style="text-align:left">Partial&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">StackSets&lt;/td>
&lt;td style="text-align:left">Partial&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">Intrinsic Functions&lt;/td>
&lt;td style="text-align:left">Partial&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Currently, support for &lt;code>UPDATE&lt;/code> operations on resources is limited. Prefer stack re-creation over stack update at this time.
&lt;/div>
&lt;h3 id="intrinsic-functions">Intrinsic Functions&lt;/h3>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Intrinsic Function&lt;/th>
&lt;th>Supported&lt;/th>
&lt;th>Explanation&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>Fn::And&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Performs a logical AND operation on two or more expressions.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::Or&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Performs a logical OR operation on two or more expressions.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::Base64&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Converts a binary string to a Base64-encoded string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::Sub&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Performs a string substitution operation.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::Split&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Splits a string into an array of strings.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::Length&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Returns the length of a string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::Join&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Joins an array of strings into a single string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::FindInMap&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Finds a value in a map.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::Ref&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>References a resource in the template.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::GetAtt&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Gets an attribute from a resource.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::If&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Performs a conditional evaluation.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::Import&lt;/code>&lt;/td>
&lt;td>Yes&lt;/td>
&lt;td>Imports a value from another template.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::ToJsonString&lt;/code>&lt;/td>
&lt;td>No&lt;/td>
&lt;td>Converts an object or map into a json string.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::Cidr&lt;/code>&lt;/td>
&lt;td>No&lt;/td>
&lt;td>Generates a CIDR block from the inputs.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>Fn::GetAZs&lt;/code>&lt;/td>
&lt;td>No&lt;/td>
&lt;td>Returns a list of the Availability Zones of a region.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h3 id="resources">Resources&lt;/h3>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
When utilizing the Community image, any resources within the stack that are not supported will be disregarded and won&amp;rsquo;t be deployed.
&lt;/div>
&lt;h4 id="community-image">Community image&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Resource&lt;/th>
&lt;th style="text-align:right">Create&lt;/th>
&lt;th style="text-align:right">Delete&lt;/th>
&lt;th style="text-align:right">Update&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AWS::Amplify::Branch&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Account&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::ApiKey&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::BasePathMapping&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Deployment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::DomainName&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::GatewayResponse&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Method&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Model&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::RequestValidator&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Resource&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::RestApi&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Stage&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::UsagePlan&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::UsagePlanKey&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AutoScaling::AutoScalingGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AutoScaling::LaunchConfiguration&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CDK::Metadata&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CertificateManager::Certificate&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFormation::Macro&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFormation::Stack&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFormation::WaitCondition&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFormation::WaitConditionHandle&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudWatch::Alarm&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudWatch::CompositeAlarm&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::DynamoDB::GlobalTable&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::DynamoDB::Table&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::DHCPOptions&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::Instance&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::InternetGateway&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::KeyPair&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::NatGateway&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::NetworkAcl&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::Route&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::RouteTable&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::SecurityGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::Subnet&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::SubnetRouteTableAssociation&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::TransitGateway&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::TransitGatewayAttachment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::VPC&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::VPCGatewayAttachment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ECR::Repository&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Elasticsearch::Domain&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Events::ApiDestination&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Events::Connection&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Events::EventBus&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Events::EventBusPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Events::Rule&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::AccessKey&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::Group&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::InstanceProfile&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::ManagedPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::Policy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::Role&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::ServiceLinkedRole&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IAM::User&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::KMS::Alias&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::KMS::Key&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Kinesis::Stream&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Kinesis::StreamConsumer&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::KinesisFirehose::DeliveryStream&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::Alias&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::CodeSigningConfig&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::EventInvokeConfig&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::EventSourceMapping&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::Function&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::LayerVersion&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::LayerVersionPermission&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::Permission&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::Url&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Lambda::Version&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Logs::LogGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Logs::LogStream&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Logs::SubscriptionFilter&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::OpenSearchService::Domain&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Redshift::Cluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ResourceGroups::Group&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Route53::HealthCheck&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Route53::RecordSet&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::S3::Bucket&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::S3::BucketPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SNS::Subscription&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SNS::Topic&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SNS::TopicPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SQS::Queue&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SQS::QueuePolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SSM::MaintenanceWindow&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SSM::MaintenanceWindowTarget&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SSM::MaintenanceWindowTask&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SSM::Parameter&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SSM::PatchBaseline&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Scheduler::Schedule&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Scheduler::ScheduleGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SecretsManager::ResourcePolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SecretsManager::RotationSchedule&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SecretsManager::Secret&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SecretsManager::SecretTargetAttachment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ServiceDiscovery::HttpNamespace&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ServiceDiscovery::PrivateDnsNamespace&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ServiceDiscovery::PublicDnsNamespace&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ServiceDiscovery::Service&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::StepFunctions::Activity&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::StepFunctions::StateMachine&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Timestream::Database&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Timestream::Table&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h4 id="pro-image">Pro image&lt;/h4>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Resource&lt;/th>
&lt;th style="text-align:right">Create&lt;/th>
&lt;th style="text-align:right">Delete&lt;/th>
&lt;th style="text-align:right">Update&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>AWS::Amplify::App&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::Authorizer&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGateway::VpcLink&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Api&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::ApiMapping&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Authorizer&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Deployment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::DomainName&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Integration&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::IntegrationResponse&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Route&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::RouteResponse&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::Stage&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApiGatewayV2::VpcLink&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppConfig::Application&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppConfig::ConfigurationProfile&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppConfig::Deployment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppConfig::DeploymentStrategy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppConfig::Environment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppConfig::HostedConfigurationVersion&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::ApiKey&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::DataSource&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::FunctionConfiguration&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::GraphQLApi&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::GraphQLSchema&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::AppSync::Resolver&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApplicationAutoScaling::ScalableTarget&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ApplicationAutoScaling::ScalingPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Athena::DataCatalog&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Athena::NamedQuery&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Athena::WorkGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Backup::BackupPlan&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFormation::CustomResource&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFront::CachePolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFront::CloudFrontOriginAccessIdentity&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFront::Distribution&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFront::Function&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFront::OriginAccessControl&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudFront::OriginRequestPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cloudfront::ResponseHeadersPolicy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::CloudTrail::Trail&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::IdentityPool&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::IdentityPoolRoleAttachment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::UserPool&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::UserPoolClient&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::UserPoolDomain&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::UserPoolGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::UserPoolIdentityProvider&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Cognito::UserPoolResourceServer&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::DocDB::DBCluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::DocDB::DBClusterParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::DocDB::DBInstance&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::DocDB::DBSubnetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::EIP&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::LaunchTemplate&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::PrefixList&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::SecurityGroupEgress&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::SecurityGroupIngress&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::SubnetRouteTableAssociation&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::VpcEndpoint&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::VPCCidrBlock&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::VPCEndpoint&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EC2::VPCEndpointService&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ECS::CapacityProvider&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ECS::Cluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ECS::ClusterCapacityProviderAssociations&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ECS::Service&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ECS::TaskDefinition&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EFS::AccessPoint&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EFS::FileSystem&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EFS:MountTarget&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EKS::Cluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EKS::FargateProfile&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::EKS::Nodegroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElastiCache::CacheCluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElastiCache::ParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElastiCache::ReplicationGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElastiCache::SecurityGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElastiCache::SubnetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticBeanstalk::Application&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticBeanstalk::ApplicationVersion&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticBeanstalk::ConfigurationTemplate&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticBeanstalk::Environment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticLoadBalancingV2::Listener&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticLoadBalancingV2::ListenerRule&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticLoadBalancingV2::LoadBalancer&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::ElasticLoadBalancingV2::TargetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Classifier&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Crawler&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Database&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Job&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Registry&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Table&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Trigger&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Glue::Workflow&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoT::Certificate&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoT::Policy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoT::RoleAlias&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoT::Thing&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoT::TopicRule&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoTAnalytics::Channel&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoTAnalytics::Dataset&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoTAnalytics::Datastore&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::IoTAnalytics::Pipeline&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::KinesisAnalytics::Application&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::KinesisAnalytics::ApplicationOutput&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::MSK::Cluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Neptune::DBCluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Neptune::DBClusterParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Neptune::DBInstance&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Neptune::DBParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Neptune::DBSubnetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Pipes::Pipe&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::QLDB::Ledger&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBCluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBClusterParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBInstance&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBProxy&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBProxyTargetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::DBSubnetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::RDS::GlobalCluster&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Redshift::ClusterParameterGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Redshift::ClusterSecurityGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Redshift::ClusterSubnetGroup&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::Route53::HostedZone&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SES::ReceiptRule&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SES::ReceiptRuleSet&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SES::Template&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>AWS::SecretsManager::SecretTargetAttachment&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">✅&lt;/td>
&lt;td style="text-align:right">-&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table></description></item><item><title>User-Guide: CloudFront</title><link>/user-guide/aws/cloudfront/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cloudfront/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>CloudFront is a content delivery network (CDN) service provided by Amazon Web Services (AWS). CloudFront distributes its web content, videos, applications, and APIs with low latency and high data transfer speeds. CloudFront APIs allow you to configure distributions, customize cache behavior, secure content with access controls, and monitor the CDN&amp;rsquo;s performance through real-time metrics.&lt;/p>
&lt;p>LocalStack allows you to use the CloudFront APIs in your local environment to create local CloudFront distributions to transparently access your applications and file artifacts. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_cloudfront/">API coverage page&lt;/a>, which provides information on the extent of CloudFront&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is intended for users who wish to get more acquainted with CloudFront over LocalStack. It assumes you have basic knowledge of the AWS CLI (and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script).&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how you can create an S3 bucket, put a text file named &lt;code>hello.txt&lt;/code> to the bucket, and then create a CloudFront distribution which makes the file accessible via a &lt;code>https://abc123.cloudfront.net/hello.txt&lt;/code> proxy URL (where &lt;code>abc123&lt;/code> is a placeholder for the real distribution ID).&lt;/p>
&lt;p>To get started, create an S3 bucket using the &lt;code>mb&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://abc123&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now go ahead, create a new text file named &lt;code>hello.txt&lt;/code> and upload it to the bucket:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39;Hello World&amp;#39; &amp;gt; /tmp/hello.txt
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/hello.txt s3://abc123/hello.txt --acl public-read&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After uploading the file to S3, you can create a CloudFront distribution using the &lt;a href="https://docs.aws.amazon.com/cloudfront/latest/APIReference/API_CreateDistribution.html">&lt;code>CreateDistribution&lt;/code>&lt;/a> API call. Run the following command to create a distribution with the default settings:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>domain=$(awslocal cloudfront create-distribution \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --origin-domain-name abc123.s3.amazonaws.com | jq -r &amp;#39;.Distribution.DomainName&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -k https://$domain/hello.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If you wish to use CloudFront on system host, ensure your local DNS setup is correctly configured.
Refer to the section on &lt;a href="/user-guide/tools/dns-server/#system-dns-configuration">System DNS configuration&lt;/a> for details.
&lt;/div>
&lt;p>In the example provided above, be aware that the final command (&lt;code>curl https://$domain/hello.txt&lt;/code>) might encounter a temporary failure accompanied by a warning message &lt;code>Could not resolve host&lt;/code>. This can occur because different operating systems adopt diverse DNS caching strategies, causing a delay in the availability of the CloudFront distribution&amp;rsquo;s DNS name (e.g., &lt;code>abc123.cloudfront.net&lt;/code>) within the system. Typically, after a few retries, the command should succeed. It&amp;rsquo;s worth noting that similar behavior can be observed in the actual AWS environment, where CloudFront DNS names may take up to 10-15 minutes to propagate across the network.&lt;/p>
&lt;h2 id="using-custom-urls">Using custom URLs&lt;/h2>
&lt;p>LocalStack Pro supports using an alternate domain name, also referred to as a &lt;code>CNAME&lt;/code> or custom domain name, to access your applications and file artifacts instead of relying on the domain name generated by CloudFront for your distribution.&lt;/p>
&lt;p>To set up the custom domain name, you must configure it in your local DNS server. Once that is done, you can designate the desired domain name as an alias for the target distribution. To achieve this, you&amp;rsquo;ll need to provide the &lt;code>Aliases&lt;/code> field in the &lt;code>--distribution-config&lt;/code> option when creating or updating a distribution. The format of this structure is similar to the one used in &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/cloudfront/create-distribution.html#options">AWS CloudFront options&lt;/a>.&lt;/p>
&lt;p>In the given example, two domains are specified as &lt;code>Aliases&lt;/code> for a distribution. Please note that a complete configuration would entail additional values relevant to the distribution, which have been omitted here for brevity.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>--distribution-config {...&amp;#39;Aliases&amp;#39;:&amp;#39;{&amp;#39;Quantity&amp;#39;:2, &amp;#39;Items&amp;#39;: [&amp;#39;custom.domain.one&amp;#39;, &amp;#39;customDomain.two&amp;#39;]}&amp;#39;...}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for CloudFront, which allows you to view and manage your CloudFront distributions. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resource Browser&lt;/strong> section, and then clicking on &lt;strong>CloudFront&lt;/strong> under the &lt;strong>Analytics&lt;/strong> section.&lt;/p>
&lt;img src="cloudfront-resource-browser.png" alt="CloudFront Resource Browser" title="CloudFront Resource Browser" width="900" />
&lt;br>
&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Distribution&lt;/strong>: Create a new CloudFront distribution by specifying the &lt;strong>Origins&lt;/strong> and other settings.&lt;/li>
&lt;li>&lt;strong>List Distributions&lt;/strong>: View a list of all CloudFront distributions.&lt;/li>
&lt;li>&lt;strong>Edit Distribution&lt;/strong>: Modify the settings of an existing CloudFront distribution by opening the distribution&amp;rsquo;s details page and clicking on the &lt;strong>Edit Distribution&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>Delete Distribution&lt;/strong>: Delete an existing CloudFront distribution by selecting the distribution, click on &lt;strong>Actions&lt;/strong>, and then click on &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use CloudFront in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/step-up-auth-sample">Step-up Authentication using Amazon Cognito&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: CloudTrail</title><link>/user-guide/aws/cloudtrail/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cloudtrail/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>CloudTrail is a service provided by Amazon Web Services (AWS) that enables you to track and monitor all activities and events within your AWS environment. It records API calls and actions made on your AWS resources, offering an audit trail that helps you understand changes, diagnose issues, and maintain compliance.&lt;/p>
&lt;p>LocalStack allows you to use the CloudTrail APIs in your local environment to create and manage Event history and trails. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_cloudtrail/">API coverage page&lt;/a>, which provides information on the extent of CloudTrail&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to CloudTrail and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to enable S3 object logging to CloudTrail using AWS CLI.&lt;/p>
&lt;h3 id="create-a-bucket">Create a bucket&lt;/h3>
&lt;p>Before you create a trail, you need to create an S3 bucket where CloudTrail can deliver the log data. You can use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3/mb.html">&lt;code>mb&lt;/code>&lt;/a> command to create a bucket:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://my-bucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-a-trail">Create a trail&lt;/h3>
&lt;p>You can create a trail which would allow the delivery of events to the S3 bucket we created earlier. You can use the &lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_CreateTrail.html">&lt;code>CreateTrail&lt;/code>&lt;/a> API to create a trail. Run the following command to create a trail:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudtrail create-trail \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name MyTrail \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --s3-bucket-name my-bucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="enable-logging-and-configure-event-selectors">Enable logging and configure event selectors&lt;/h3>
&lt;p>You can now enable logging for your trail. You can use the &lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_StartLogging.html">&lt;code>StartLogging&lt;/code>&lt;/a> API to enable logging for your trail. Run the following command to enable logging:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudtrail start-logging --name MyTrail&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can further configure event selectors for the trail. In this example, we will configure the trail to log all S3 object level events. You can use the &lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_PutEventSelectors.html">&lt;code>PutEventSelectors&lt;/code>&lt;/a> API to configure event selectors for your trail. Run the following command to configure event selectors:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudtrail put-event-selectors \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --trail-name MyTrail \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --event-selectors &amp;#39;[{&amp;#34;ReadWriteType&amp;#34;: &amp;#34;All&amp;#34;, &amp;#34;IncludeManagementEvents&amp;#34;:true, &amp;#34;DataResources&amp;#34;: [{&amp;#34;Type&amp;#34;: &amp;#34;AWS::S3::Object&amp;#34;, &amp;#34;Values&amp;#34;: [&amp;#34;arn:aws:s3:::my-bucket/&amp;#34;]}]}]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can verify if your configuration is correct by using the &lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_GetEventSelectors.html">&lt;code>GetEventSelectors&lt;/code>&lt;/a> API. Run the following command to verify your configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudtrail get-event-selectors \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --trail-name MyTrail&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;TrailARN&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:cloudtrail:us-east-1:000000000000:trail/MyTrail&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EventSelectors&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ReadWriteType&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;All&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;IncludeManagementEvents&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DataResources&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;AWS::S3::Object&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Values&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:s3:::my-bucket/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="test-the-configuration">Test the configuration&lt;/h3>
&lt;p>You can now test the configuration by creating an object in the S3 bucket. You can use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3/cp.html">&lt;code>cp&lt;/code>&lt;/a> command to copy an object in the S3 bucket:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#34;hello world&amp;#34; &amp;gt; /tmp/hello-world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/hello-world s3://my-bucket/hello-world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 ls s3://my-bucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can verify that the object was created in the S3 bucket. You can also verify that the object level event was logged by CloudTrail using the &lt;a href="https://docs.aws.amazon.com/awscloudtrail/latest/APIReference/API_LookupEvents.html">&lt;code>LookupEvents&lt;/code>&lt;/a> API. Run the following command to verify the event:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudtrail lookup-events \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --lookup-attributes AttributeKey=EventName,AttributeValue=PutObject \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --max-results 1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Events&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EventId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;218785bf-3ec4-4bdd-a055-57eca773294f&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EventName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;PutObject&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ReadOnly&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;false&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a40000">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CloudTrailEvent&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;{\&amp;#34;eventVersion\&amp;#34;: \&amp;#34;1.08\&amp;#34;, ... {\&amp;#34;bucketName\&amp;#34;: \&amp;#34;my-bucket\&amp;#34;, \&amp;#34;key\&amp;#34;: \&amp;#34;hello-world\&amp;#34;} ...}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing CloudTrail&amp;rsquo;s Event History &amp;amp; Trails. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>CloudTrail&lt;/strong> under the &lt;strong>Management/Governance&lt;/strong> section.&lt;/p>
&lt;img src="cloudtrail-resource-browser.png" alt="CloudTrail Resource Browser" title="CloudTrail Resource Browser" width="900" />
&lt;br>
&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Trail&lt;/strong>: Create a new CloudTrail trail, by specifying the name of the trail, the S3 bucket where the logs should be stored, and other optional parameters.&lt;/li>
&lt;li>&lt;strong>View Trail&lt;/strong>: View the details of a CloudTrail trail, including the name, ARN, S3 bucket, and other parameters.&lt;/li>
&lt;li>&lt;strong>View Event History&lt;/strong>: View the event history of a CloudTrail trail, including the Event Id, Event time, Event source, and other parameters.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: CloudWatch</title><link>/user-guide/aws/cloudwatch/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cloudwatch/</guid><description>
&lt;p>CloudWatch is a comprehensive monitoring and observability service that Amazon Web Services (AWS) provides. It allows you to collect and track metrics, collect and monitor log files, and set alarms. CloudWatch provides valuable insights into your AWS resources, applications, and services, enabling you to troubleshoot issues, optimize performance, and make informed decisions.&lt;/p>
&lt;p>LocalStack allows you to use CloudWatch APIs on your local machine to create and manage CloudWatch resources, such as custom metrics, alarms, and log groups, for local development and testing purposes. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_cloudwatch/">API coverage page&lt;/a>, which provides information on the extent of CloudWatch&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>We have introduced an all-new LocalStack-native &lt;a href="https://docs.localstack.cloud/user-guide/aws/cloudwatch/">CloudWatch provider&lt;/a> is available behind a feature flag. You can activate it by configuring &lt;code>PROVIDER_OVERRIDE_CLOUDWATCH=v2&lt;/code> in your LocalStack configuration.&lt;/p>
&lt;p>We have migrated from storing data in Python objects within the Moto backend to a more robust system. Now, metrics are efficiently stored in SQLite, and alarm resources are managed using LocalStack stores.&lt;/p>
&lt;ul>
&lt;li>Various enhancements have been made to attain greater feature parity with AWS.&lt;/li>
&lt;li>The provider is engineered to ensure thread safety, facilitating smooth concurrent operations.&lt;/li>
&lt;li>There’s a significant improvement in the integrity and durability of data.&lt;/li>
&lt;li>The new provider allows for more efficient data retrieval.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to CloudWatch and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method and deploy your Lambda functions that will generate some logs. You can get the name for your Lambda Functions using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_ListFunctions.html">&lt;code>ListFunctions&lt;/code>&lt;/a> API.&lt;/p>
&lt;p>Fetch the Log Groups using the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeLogGroups.html">&lt;code>DescribeLogGroups&lt;/code>&lt;/a> API. Run the following command to get the Log Group name:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs describe-log-groups&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output should look similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;logGroups&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;logGroupName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/aws/lambda/serverless-local-hello&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;creationTime&amp;#34;&lt;/span>: 1683009865348,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;metricFilterCount&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/serverless-local-hello:*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;storedBytes&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">262&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;logGroupName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/aws/lambda/serverless-local-hello2&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;creationTime&amp;#34;&lt;/span>: 1683009865420,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;metricFilterCount&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/serverless-local-hello2:*&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;storedBytes&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">262&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Get the log streams for the Log Group using the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_DescribeLogStreams.html">&lt;code>DescribeLogStreams&lt;/code>&lt;/a> API. Run the following command to get the Log Stream name:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs describe-log-streams \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name /aws/lambda/serverless-local-hello&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output should look similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;logStreams&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;logStreamName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023/05/02/[&lt;/span>&lt;span style="color:#000">$LATEST&lt;/span>&lt;span style="color:#4e9a06">]853a59d0767cfaf10d6b29a6790d8b03&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;creationTime&amp;#34;&lt;/span>: 1683009968958,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;firstEventTimestamp&amp;#34;&lt;/span>: 1683009968920,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;lastEventTimestamp&amp;#34;&lt;/span>: 1683009968945,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;lastIngestionTime&amp;#34;&lt;/span>: 1683009968979,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;uploadSequenceToken&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:logs:us-east-1:000000000000:log-group:/aws/lambda/serverless-local-hello:log-stream:2023/05/02/[&lt;/span>&lt;span style="color:#000">$LATEST&lt;/span>&lt;span style="color:#4e9a06">]853a59d0767cfaf10d6b29a6790d8b03&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;storedBytes&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">262&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now fetch the log events using the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatchLogs/latest/APIReference/API_GetLogEvents.html">&lt;code>GetLogEvents&lt;/code>&lt;/a> API. Run the following command to get the logs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs get-log-events \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name &amp;#39;/aws/lambda/serverless-local-hello&amp;#39; --log-stream-name &amp;#39;2023/05/02/[$LATEST]853a59d0767cfaf10d6b29a6790d8b03&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output should look similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;events&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;timestamp&amp;#34;&lt;/span>: 1683009968920,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;START RequestId: 71712856-9f41-4d22-827c-e3883f799f25 Version: &lt;/span>&lt;span style="color:#000">$LATEST&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ingestionTime&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">1683009968979&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;timestamp&amp;#34;&lt;/span>: 1683009968932,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;END RequestId: 71712856-9f41-4d22-827c-e3883f799f25&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ingestionTime&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">1683009968979&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;timestamp&amp;#34;&lt;/span>: 1683009968945,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;message&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;REPORT RequestId: 71712856-9f41-4d22-827c-e3883f799f25\tDuration: 1.27 ms\tBilled Duration: 2 ms\tMemory Size: 1024 MB\tMax Memory Used: 1024 MB\t&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ingestionTime&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">1683009968979&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;nextForwardToken&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;f/00000000000000000000000000000000000000000000000000000002&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;nextBackwardToken&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;b/00000000000000000000000000000000000000000000000000000000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
You can use &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/logs/filter-log-events.html">filters&lt;/a> or &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/logs/get-query-results.html">queries&lt;/a> with the LocalStack Pro image to refine your results.
&lt;/div>
&lt;h2 id="metric-alarms">Metric Alarms&lt;/h2>
&lt;p>Alarms in CloudWatch are crucial in monitoring specific data thresholds and automating actions based on those thresholds. To learn more about how alarms are evaluated in general, please refer to the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/AlarmThatSendsEmail.html#alarm-evaluation">AWS documentation&lt;/a>.&lt;/p>
&lt;p>In LocalStack, you can use metric-alarm evaluation, explicitly utilizing the statistic and comparison-operator functionalities. These features enable you to define and evaluate alarms based on various statistical calculations and comparison operators.&lt;/p>
&lt;h3 id="metric-alarm-examples">Metric Alarm Examples&lt;/h3>
&lt;p>Metric alarms in CloudWatch allow you to evaluate the state of a metric by analyzing its data points over a specified period. With metric alarms, you can create customized thresholds and define actions based on the metric&amp;rsquo;s behavior.&lt;/p>
&lt;p>To get started with creating an alarm in LocalStack using the &lt;code>awslocal&lt;/code> integration, use the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudwatch put-metric-alarm \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --alarm-name my-alarm \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --metric-name Orders \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --namespace test \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --threshold 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --comparison-operator LessThanThreshold \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --evaluation-periods 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --period 30 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --statistic Minimum \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --treat-missing notBreaching&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To monitor the status of the alarm, open a separate terminal and execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>watch &amp;#34;awslocal cloudwatch describe-alarms --alarm-names my-alarm | jq &amp;#39;.MetricAlarms[0].StateValue&amp;#39;&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Afterward, you can add some data that will cause a breach and set the &lt;code>metric-alarm&lt;/code> state to &lt;strong>ALARM&lt;/strong> using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudwatch put-metric-data \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --namespace test \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --metric-data &amp;#39;[{&amp;#34;MetricName&amp;#34;: &amp;#34;Orders&amp;#34;, &amp;#34;Value&amp;#34;: -1}]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Within a few seconds, the alarm state should change to &lt;strong>ALARM&lt;/strong>, and eventually, it will go back to &lt;strong>OK&lt;/strong> as we configured it to treat missing data points as &lt;code>not breaching&lt;/code>. This allows you to observe how the alarm behaves in response to the provided data.&lt;/p>
&lt;h4 id="metric-alarm-with-action">Metric Alarm with Action&lt;/h4>
&lt;p>When the state of an alarm changes, actions can be triggered accordingly. In LocalStack, you can configure &lt;code>alarm-actions&lt;/code>, &lt;code>ok-actions&lt;/code>, and &lt;code>insufficient-data-actions&lt;/code> to specify the actions to be taken. Currently, only SNS Topics are supported as the target for these actions, and it&amp;rsquo;s important to note that the topic must be created beforehand.&lt;/p>
&lt;p>Here&amp;rsquo;s an example demonstrating how to set up an alarm that sends a message to the specified topic when entering the &lt;strong>ALARM&lt;/strong> state. Make sure to replace &lt;code>&amp;lt;topic-arn&amp;gt;&lt;/code> with the valid ARN of an existing SNS topic.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cloudwatch put-metric-alarm \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --alarm-name my-alarm \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --metric-name Orders \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --namespace test \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --threshold 50 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --comparison-operator GreaterThanThreshold \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --evaluation-periods 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --period 300 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --statistic Maximum \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --treat-missing notBreaching \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --alarm-actions &amp;lt;topic-arn&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>By executing this command, you&amp;rsquo;ll create an alarm named &lt;code>my-alarm&lt;/code> that monitors the &lt;code>Orders&lt;/code> metric in the &lt;code>test&lt;/code> namespace. If the metric value exceeds the threshold of 50 (using the &lt;code>GreaterThanThreshold&lt;/code> operator) during a single evaluation period of 300 seconds, the alarm will trigger the specified action on the provided SNS topic.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;p>Please be aware of the following known limitations in LocalStack:&lt;/p>
&lt;ul>
&lt;li>Anomaly detection and extended statistics are not supported.&lt;/li>
&lt;li>The &lt;code>unit&lt;/code> values specified in the alarm are ignored.&lt;/li>
&lt;li>Composite alarms are not evaluated.&lt;/li>
&lt;li>Metric streams are not supported.&lt;/li>
&lt;/ul>
&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing CloudWatch logs. You can access the Resource Browser by opening the LocalStack Web Application in your browser and navigating to the Resources section, then clicking on &lt;a href="https://app.localstack.cloud/resources/cloudwatch/groups">&lt;strong>CloudWatch Logs&lt;/strong>&lt;/a> and &lt;a href="https://app.localstack.cloud/resources/monitoring">&lt;strong>CloudWatch Metrics&lt;/strong>&lt;/a> under the &lt;strong>Management/Governance&lt;/strong> section.&lt;/p>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;img src="cloudwatch-log-groups-resource-browser.png" alt="CloudWatch Logs Resource Browser" title="CloudWatch Logs Resource Browser" width="900" />
&lt;img src="cloudwatch-metrics-resource-browser.png" alt="CloudWatch Metrics Resource Browser" title="CloudWatch Metrics Resource Browser" width="900" />
&lt;ul>
&lt;li>&lt;strong>Create Log Group&lt;/strong>: Create a new log group by specifying the &lt;code>Log Group Name&lt;/code>, &lt;code>KMS Key ID&lt;/code>, and &lt;code>Tags&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Put metric&lt;/strong>: Create a new metric by specifying the &lt;code>Namespace&lt;/code> and &lt;code>Metric Data&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Put Alarm&lt;/strong>: Create a new alarm by specifying the &lt;code>Alarm Name&lt;/code>, &lt;code>Alarm Description&lt;/code>, &lt;code>Actions Enabled&lt;/code>, &lt;code>Metric Name&lt;/code>, &lt;code>Namespace&lt;/code>, &lt;code>Statistic&lt;/code>, &lt;code>Comparison Operator&lt;/code>, &lt;code>Threshold&lt;/code>, &lt;code>Evaluation Periods&lt;/code>, &lt;code>Period&lt;/code>, &lt;code>Unit&lt;/code>, &lt;code>Treat Missing Data&lt;/code>, &lt;code>Tags&lt;/code>, and &lt;code>Alarm Actions&lt;/code>.&lt;/li>
&lt;li>&lt;strong>Check the Resources&lt;/strong>: View and manage existing log groups, metrics, and alarms and perform actions such as &lt;code>Delete&lt;/code>, &lt;code>View&lt;/code>, and &lt;code>Edit&lt;/code>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use CloudWatch in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/cloudwatch-metrics-aws">Creating Cloudwatch metric alarms&lt;/a> to demonstrate a simple example for creating CloudWatch metric alarm based on the metrics of a failing Lambda function.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/event-driven-architecture-with-amazon-sns-fifo">Event-driven architecture with Amazon SNS FIFO, DynamoDB, Lambda, and S3&lt;/a> to deploy a recruiting agency application with a job listings website and view the CloudWatch logs.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: CloudWatch Logs</title><link>/user-guide/aws/logs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/logs/</guid><description>
&lt;p>&lt;a href="https://docs.aws.amazon.com/cloudwatch/index.html">CloudWatch Logs&lt;/a> allows to store and retrieve logs. While some services automatically create and write logs (e.g. Lambda), logs can also be added manually.
CloudWatch Logs is available in the Community version. However, some specific features are only available in Pro.&lt;/p>
&lt;h2 id="subscription-filters">Subscription Filters&lt;/h2>
&lt;p>Subscription filters can be used to forward logs to certain services, e.g. Kinesis, Lambda, and Kinesis Data Firehose. You can read upon details in the &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/SubscriptionFilters.html">official AWS docs&lt;/a>.&lt;/p>
&lt;h3 id="subscription-filters-with-kinesis-example">Subscription Filters with Kinesis Example&lt;/h3>
&lt;p>In the following we setup a little example on how to use subscription filters with kinesis.&lt;/p>
&lt;p>First, we setup the required resources. Therefore, we create a kinesis stream, a log group and log stream. Then we can configure the subscription filter.
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis create-stream --stream-name &amp;#34;logtest&amp;#34; --shard-count 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>kinesis_arn=$(awslocal kinesis describe-stream --stream-name &amp;#34;logtest&amp;#34; | jq -r .StreamDescription.StreamARN)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs create-log-group --log-group-name test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs create-log-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name test \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-stream-name test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs put-subscription-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name &amp;#34;test&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --filter-name &amp;#34;kinesis_test&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --filter-pattern &amp;#34;&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --destination-arn $kinesis_arn \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role-arn &amp;#34;arn:aws:iam::000000000000:role/kinesis_role&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Next, we can add a log event, that will be forwarded to kinesis.
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>timestamp=$(($(date +&amp;#39;%s * 1000 + %-N / 1000000&amp;#39;)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs put-log-events --log-group-name test --log-stream-name test --log-events &amp;#34;[{\&amp;#34;timestamp\&amp;#34;: ${timestamp} , \&amp;#34;message\&amp;#34;: \&amp;#34;hello from cloudwatch\&amp;#34;}]&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Now we can retrieve the data. In our example, there will only be one record. The data record is base64 encoded and compressed in gzip format:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>shard_iterator=$(awslocal kinesis get-shard-iterator --stream-name logtest --shard-id shardId-000000000000 --shard-iterator-type TRIM_HORIZON | jq -r .ShardIterator)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>record=$(awslocal kinesis get-records --limit 10 --shard-iterator $shard_iterator | jq -r &amp;#39;.Records[0].Data&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo $record | base64 -d | zcat&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;h2 id="filter-pattern-pro-only">Filter Pattern (Pro only)&lt;/h2>
&lt;p>&lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html">Filter patterns&lt;/a> can be used to select certain logs only.&lt;/p>
&lt;p>LocalStack currently supports simple json-property filter.&lt;/p>
&lt;h3 id="metric-filter-example">Metric Filter Example&lt;/h3>
&lt;p>Metric filters can be used to automatically create CloudWatch metrics.&lt;/p>
&lt;p>In the following example we are interested in logs that include a key-value pair &lt;code>&amp;quot;foo&amp;quot;: &amp;quot;bar&amp;quot;&lt;/code> and create a metric filter.
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs create-log-group --log-group-name test-filter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs create-log-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name test-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-stream-name test-filter-stream
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs put-metric-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name test-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --filter-name my-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --filter-pattern &amp;#34;{$.foo = \&amp;#34;bar\&amp;#34;}&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --metric-transformations \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metricName=MyMetric,metricNamespace=MyNamespace,metricValue=1,defaultValue=0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Next, we can insert some values:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>timestamp=$(($(date +&amp;#39;%s * 1000 + %-N / 1000000&amp;#39;)))
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs put-log-events --log-group-name test-filter \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-stream-name test-filter-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-events \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> timestamp=$timestamp,message=&amp;#39;&amp;#34;{\&amp;#34;foo\&amp;#34;:\&amp;#34;bar\&amp;#34;, \&amp;#34;hello\&amp;#34;: \&amp;#34;world\&amp;#34;}&amp;#34;&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> timestamp=$timestamp,message=&amp;#34;my test event&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> timestamp=$timestamp,message=&amp;#39;&amp;#34;{\&amp;#34;foo\&amp;#34;:\&amp;#34;nomatch\&amp;#34;}&amp;#34;&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Now we can check that the metric was indeed created:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>end=$(date +%s)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awslocal cloudwatch get-metric-statistics --namespace MyNamespace \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --metric-name MyMetric --statistics Sum --period 3600 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --start-time 1659621274 --end-time $end&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;h3 id="filter-log-events">Filter Log Events&lt;/h3>
&lt;p>Similarly, you can use filter-pattern to filter logs with different kinds of patterns as described by &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html">AWS&lt;/a>.&lt;/p>
&lt;h4 id="json-filter-pattern">JSON Filter Pattern&lt;/h4>
&lt;p>For purely JSON structured log messages, you can use JSON filter patterns to traverse the JSON object.
Enclose your pattern in curly braces, like this:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs filter-log-events --log-group-name test-filter --filter-pattern &amp;#34;{$.foo = \&amp;#34;bar\&amp;#34;}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>This returns all events whose top level &amp;ldquo;foo&amp;rdquo; key has the &amp;ldquo;bar&amp;rdquo; value.&lt;/p>
&lt;h4 id="regular-expression-filter-pattern">Regular Expression Filter Pattern&lt;/h4>
&lt;p>You can use a simplified regex syntax for regular expression matching.
Enclose your pattern in percentage signs like this:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs filter-log-events --log-group-name test-filter --filter-pattern &amp;#34;\%[fF]oo\%&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
This returns all events containing &amp;ldquo;Foo&amp;rdquo; or &amp;ldquo;foo&amp;rdquo;.
For a complete set of the supported syntax, check &lt;a href="https://docs.aws.amazon.com/AmazonCloudWatch/latest/logs/FilterAndPatternSyntax.html#regex-expressions">the official AWS documentation&lt;/a>&lt;/p>
&lt;h4 id="unstructured-filter-pattern">Unstructured Filter Pattern&lt;/h4>
&lt;p>If not specified otherwise in the pattern, we look for a match in the whole event message:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs filter-log-events --log-group-name test-filter --filter-pattern &amp;#34;foo&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for exploring CloudWatch Logs. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>CloudWatch Logs&lt;/strong> under the &lt;strong>Management/Governance&lt;/strong> section.&lt;/p>
&lt;img src="logs-resource-browser.png" alt="CloudWatch Logs Resource Browser" title="CloudWatch Logs Resource Browser" width="900" />
&lt;br>
&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Log Group&lt;/strong>: Create a new log group by clicking on the &lt;strong>Create Log Group&lt;/strong> button followed by entering the details in the dialog box.&lt;/li>
&lt;li>&lt;strong>Create Log Stream&lt;/strong>: Create a new log stream by clicking on the &lt;strong>Create Log Stream&lt;/strong> button in the log group detail followed by entering the details in the dialog box.&lt;/li>
&lt;li>&lt;strong>Filter Log Events&lt;/strong>: Filter log events by clicking the log stream name followed by entering the filter pattern and clicking &lt;strong>Apply&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Delete Log Group&lt;/strong>: Delete a log group by selecting the log group name and clicking on the &lt;strong>Actions&lt;/strong> dropdown menu, then selecting &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Delete Log Stream&lt;/strong>: Delete a log stream by selecting the log stream name and clicking on the &lt;strong>Actions&lt;/strong> dropdown menu, then selecting &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: CodeCommit</title><link>/user-guide/aws/codecommit/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/codecommit/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>CodeCommit is a managed source control service by AWS that enables developers to store and collaborate on their code repositories.
With CodeCommit, you can host private Git repositories with integrations to other AWS services.
You can also use standard Git commands or CodeCommit APIs (using AWS CLI or SDKs) to manage your repositories.
CodeCommit also uses identity-based policies, which can be attached to IAM users, groups, and roles, ensuring secure and granular access control.&lt;/p>
&lt;p>LocalStack allows you to use the CodeCommit APIs in your local environment to create new repositories, push your commits, and manage the repositories.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_codecommit/">API coverage page&lt;/a>, which provides information on the extent of CodeCommit&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to CodeCommit and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.
We will demonstrate how you can create a CodeCommit repository, clone a repository, and push a commit to the repository.&lt;/p>
&lt;h3 id="create-a-repository">Create a repository&lt;/h3>
&lt;p>You can use the &lt;a href="https://docs.aws.amazon.com/codecommit/latest/APIReference/API_CreateRepository.html">&lt;code>CreateRepository&lt;/code>&lt;/a> API to create a repository.
You need to specify the repository name, repository description, and tags.&lt;/p>
&lt;p>Run the following command to create a new repository named &lt;code>localstack-repo&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal codecommit create-repository \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --repository-name localstack-repo \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --repository-description &amp;#34;A demo repository to showcase LocalStack&amp;#39;s CodeCommit&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --tags Team=LocalStack&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If successful, the command will return the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;repositoryMetadata&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;repositoryId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;lt;REPOSITORY_ID&amp;gt;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;repositoryName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;localstack-repo&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;repositoryDescription&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;A demo repository to showcase LocalStack&amp;#39;s CodeCommit&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;lastModifiedDate&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;lt;TIMESTAMP&amp;gt;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;creationDate&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;lt;TIMESTAMP&amp;gt;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;cloneUrlHttp&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;git://localhost:4510/localstack-repo&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;cloneUrlSsh&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;git://localhost:4510/localstack-repo&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:codecommit:us-east-1:000000000000:localstack-repo&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="clone-a-repository">Clone a repository&lt;/h3>
&lt;p>Next, you can clone the CodeCommit repository to a local directory.
To do so, you can use the &lt;a href="https://git-scm.com/docs/git-clone">&lt;code>git clone&lt;/code>&lt;/a> command.
The repository URL is the &lt;code>cloneUrlHttp&lt;/code> value returned by the &lt;code>CreateRepository&lt;/code> API.&lt;/p>
&lt;p>Run the following command to clone the repository to a local directory named &lt;code>localstack-repo&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>git clone git://localhost:4510/localstack-repo&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You will notice that the repository is empty.
This is because we have not pushed any commits to the repository yet.&lt;/p>
&lt;h3 id="push-a-commit">Push a commit&lt;/h3>
&lt;p>Create a new file named &lt;code>README.md&lt;/code> in the &lt;code>localstack-repo&lt;/code> directory.
Add some content to the file and save it.
You can use &lt;a href="https://git-scm.com/docs/git-add">&lt;code>git add&lt;/code>&lt;/a> to add the file to the staging area, followed by &lt;a href="https://git-scm.com/docs/git-commit">&lt;code>git commit&lt;/code>&lt;/a> with a commit message, to commit the file to the repository.
Then, you can use &lt;a href="https://git-scm.com/docs/git-commit">&lt;code>git commit&lt;/code>&lt;/a> to commit the file to the repository.&lt;/p>
&lt;p>Run the following command to push the file to the repository:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>git add README.md
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>git commit -m &amp;#34;Add README.md&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>git push&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If successful, this command returns output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>To git://localhost:4510/localstack-repo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> * &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>new branch&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> main -&amp;gt; main
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing CodeCommit repositories. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resource Browser&lt;/strong> section, and then clicking on &lt;strong>CodeCommit&lt;/strong> under the &lt;strong>Developer Tools&lt;/strong> section.&lt;/p>
&lt;img src="codecommit-resource-browser.png" alt="CodeCommit Resource Browser" title="CodeCommit Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Repository&lt;/strong>: Create a new CodeCommit repository by specifying the repository name and description, along with optional tags and KMS key ID.&lt;/li>
&lt;li>&lt;strong>View Repository&lt;/strong>: View the details of a CodeCommit repository, including the repository name, description, ARN, and clone URLs.&lt;/li>
&lt;li>&lt;strong>Delete Repository&lt;/strong>: Delete a CodeCommit repository by selecting the repository from the list and clicking the &lt;strong>Actions&lt;/strong> dropdown menu followed by &lt;strong>Delete&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>You can find a sample application illustrating the usage of the CodeCommit APIs locally in the &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/codecommit-git-repo">LocalStack Pro Samples&lt;/a>.&lt;/p></description></item><item><title>User-Guide: Cognito</title><link>/user-guide/aws/cognito/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/cognito/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Cognito is a managed identity service provided by AWS that is used for securing user authentication, authorization, and managing user identities in web and mobile applications. Cognito enables developers to add user sign-up, sign-in, and access control functionalities to their applications. Cognito supports various authentication methods, including social identity providers, SAML-based identity providers, and custom authentication flows.&lt;/p>
&lt;p>LocalStack allows you to use the Cognito APIs in your local environment to manage authentication and access control for your local application and resources. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_cognito-identity/">Cognito Identity coverage page&lt;/a> and &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_cognito-idp/">Cognito User Pools coverage page&lt;/a>, which provides information on the extent of Cognito&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
By default, LocalStack&amp;rsquo;s Cognito does not send actual email messages. However, if you wish to enable this feature, you will need to provide an email address and configure the corresponding SMTP settings. The instructions on configuring the connection parameters of your SMTP server can be found in the &lt;a href="/references/configuration/#emails">Configuration&lt;/a> guide to allow your local Cognito environment to send email notifications.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Cognito and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how you can create a Cognito user pool and client, and then sign up and authenticate a new user in the pool.&lt;/p>
&lt;h3 id="creating-a-user-pool">Creating a User Pool&lt;/h3>
&lt;p>To create a user pool, you can use the &lt;a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPool.html">&lt;code>CreateUserPool&lt;/code>&lt;/a> API call. The following command creates a user pool named &lt;code>test&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp create-user-pool --pool-name test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can see an output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#34;UserPool&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;us-east-1_fd924693e9b04f549f989283123a29c2&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Policies&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;PasswordPolicy&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;MinimumLength&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">8&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RequireUppercase&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RequireLowercase&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RequireNumbers&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RequireSymbols&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;TemporaryPasswordValidityDays&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">7&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;LastModifiedDate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2021-10-06T11:57:21.883Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CreationDate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2021-10-06T11:57:21.883Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;SchemaAttributes&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;VerificationMessageTemplate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DefaultEmailOption&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;CONFIRM_WITH_CODE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EmailConfiguration&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EmailSendingAccount&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;COGNITO_DEFAULT&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AdminCreateUserConfig&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AllowAdminCreateUserOnly&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Arn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:cognito-idp:us-east-1:000000000000:userpool/us-east-1_fd924693e9b04f549f989283123a29c2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will need the user pool&amp;rsquo;s &lt;code>id&lt;/code> for further operations. Save it in a &lt;code>pool_id&lt;/code> variable:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>pool_id=&amp;lt;your-pool-id&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Alternatively, you can use JSON processor like &lt;a href="https://stedolan.github.io/jq/">&lt;code>jq&lt;/code>&lt;/a> to extract the essential information right from the outset when creating a pool.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>pool_id=$(awslocal cognito-idp create-user-pool --pool-name test | jq -rc &amp;#34;.UserPool.Id&amp;#34;)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="adding-a-client">Adding a Client&lt;/h3>
&lt;p>You can proceed with adding a client to the pool we just created. You will require the ID of the newly created client for the subsequent steps. You can use the &lt;a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_CreateUserPoolClient.html">&lt;code>CreateUserPoolClient&lt;/code>&lt;/a> for both client creation and extraction of the corresponding ID. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>client_id=$(awslocal cognito-idp create-user-pool-client --user-pool-id $pool_id --client-name test-client | jq -rc &amp;#34;.UserPoolClient.ClientId&amp;#34;)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="using-predefined-ids-for-pool-creation">Using Predefined IDs for Pool Creation&lt;/h3>
&lt;p>When creating Cognito user or identity pools, you have the flexibility to utilize a predefined ID by setting the tag &lt;code>_custom_id_&lt;/code>. This feature proves particularly useful during the testing of authentication flows, especially when dealing with scenarios involving frequent restarts of LocalStack and the recreation of resources.
Please note that a valid custom id must be in the format &lt;code>&amp;lt;region&amp;gt;_&amp;lt;custom_pool_id&amp;gt;&lt;/code>.&lt;/p>
&lt;p>Run the following command to create a user pool with a predefined ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp create-user-pool --pool-name p1 --user-pool-tags &amp;#34;_custom_id_=us-east-1_myid123&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserPool&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Id&amp;#34;: &amp;#34;myid123&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;p1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You also have the possibility to create a Cognito user pool client with a predefined ID by specifying a &lt;code>ClientName&lt;/code> with the specific format: &lt;code>_custom_id_:&amp;lt;custom_client_id&amp;gt;&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp create-user-pool-client --user-pool-id us-east-1_myid123 --client-name _custom_id_:myclient123
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserPoolClient&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserPoolId&amp;#34;: &amp;#34;us-east-1_myid123&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ClientName&amp;#34;: &amp;#34;_custom_id_:myclient123&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ClientId&amp;#34;: &amp;#34;myclient123&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="signing-up-and-confirming-a-user">Signing up and confirming a user&lt;/h3>
&lt;p>You can now use the &lt;a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_SignUp.html">&lt;code>SignUp&lt;/code>&lt;/a> API to sign up a user. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp sign-up \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --client-id $client_id \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --username example_user \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --password 12345678Aa! \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --user-attributes Name=email,Value=&amp;lt;your.email@address.com&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can see an output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;UserConfirmed&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;UserSub&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;5fdbe1d5-7901-4fee-9d1d-518103789c94&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once the user is successfully created, a confirmation code will be generated. This code can be found in the LocalStack container logs (as shown below). Additionally, if you have &lt;a href="#smtp-integration">SMTP configured&lt;/a>, the confirmation code can be optionally sent via email for enhanced convenience and user experience.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>INFO:localstack_ext.services.cognito.cognito_idp_api: Confirmation code &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> Cognito user example_user: &lt;span style="color:#0000cf;font-weight:bold">125796&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>DEBUG:localstack_ext.bootstrap.email_utils: Sending confirmation code via email to &lt;span style="color:#4e9a06">&amp;#34;your.email@address.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can confirm the user with the activation code, using the &lt;a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ConfirmSignUp.html">&lt;code>ConfirmSignUp&lt;/code>&lt;/a> API. Execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp confirm-sign-up \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --client-id $client_id \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --username example_user \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --confirmation-code &amp;lt;received-confirmation-code&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Since the above command does not provide a direct response, we need to verify the success of the request by checking the pool. Run the following command to use the &lt;a href="https://docs.aws.amazon.com/cognito-user-identity-pools/latest/APIReference/API_ListUsers.html">&lt;code>ListUsers&lt;/code>&lt;/a> API to list the users in the pool:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp list-users --user-pool-id $pool_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Users&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Username&amp;#34;: &amp;#34;example_user&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Attributes&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;email&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Value&amp;#34;: &amp;#34;your.email@address.com&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;sub&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Value&amp;#34;: &amp;#34;5fdbe1d5-7901-4fee-9d1d-518103789c94&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;cognito:username&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Value&amp;#34;: &amp;#34;example_user&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#dfdfdf">&lt;span> &amp;#34;UserStatus&amp;#34;: &amp;#34;CONFIRMED&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="jwt-token-issuer-and-json-web-key-sets-jwks-endpoints">JWT Token Issuer and JSON Web Key Sets (JWKS) endpoints&lt;/h2>
&lt;p>When Cognito creates JWT tokens, they include an issuer (&lt;code>iss&lt;/code>) attribute that specifies the endpoint of the corresponding user pool. Generally, the issuer endpoint follows this format, with &lt;code>&amp;lt;pool_id&amp;gt;&lt;/code> being the ID of the Cognito user pool:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>http://localhost:4566/&amp;lt;pool_id&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>However, depending on your specific configurations, there might be slight variations in the issuer URL, such as:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>https://cognito-idp.localhost.localstack.cloud/&amp;lt;pool_id&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To access the JSON Web Key Sets (JWKS) configuration for each user pool, you can use the standardized well-known URL below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl &amp;#39;http://localhost:4566/&amp;lt;pool_id&amp;gt;/.well-known/jwks.json&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;keys&amp;#34;: [{&amp;#34;kty&amp;#34;: &amp;#34;RSA&amp;#34;, &amp;#34;alg&amp;#34;: &amp;#34;RS256&amp;#34;, &amp;#34;use&amp;#34;: &amp;#34;sig&amp;#34;, &amp;#34;kid&amp;#34;: &amp;#34;test-key&amp;#34;, &amp;#34;n&amp;#34;: &amp;#34;k6lrbEH...&amp;#34;]}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Moreover, you can retrieve the global region-specific public keys for Cognito Identity Pools using the following endpoint:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://localhost:4566/.well-known/jwks_uri
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;keys&amp;#34;: [{&amp;#34;kty&amp;#34;: &amp;#34;RSA&amp;#34;, &amp;#34;alg&amp;#34;: &amp;#34;RS512&amp;#34;, &amp;#34;use&amp;#34;: &amp;#34;sig&amp;#34;, &amp;#34;kid&amp;#34;: &amp;#34;ap-northeast-11&amp;#34;, &amp;#34;n&amp;#34;: &amp;#34;AI7mc1assO5...&amp;#34;]}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="cognito-lambda-triggers">Cognito Lambda Triggers&lt;/h2>
&lt;p>Cognito offers a variety of lifecycle hooks called Cognito Lambda triggers, which allow you to react to different lifecycle events and customize the behavior of user signup, confirmation, migration, and more.&lt;/p>
&lt;p>To illustrate, suppose you wish to define a &lt;em>user migration&lt;/em> Lambda trigger. In this case, you can start by creating a Lambda function, let&amp;rsquo;s say named &lt;code>&amp;quot;f1&amp;quot;&lt;/code>, responsible for performing the migration. Subsequently, you can define the corresponding &lt;code>--lambda-config&lt;/code> when creating the user pool to link it with the Lambda function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal cognito-idp create-user-pool \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --pool-name test2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --lambda-config &amp;#39;{&amp;#34;UserMigration&amp;#34;:&amp;#34;arn:aws:lambda:us-east-1:000000000000:function:f1&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Upon successful authentication of a non-registered user, Cognito will automatically trigger the migration Lambda function, allowing the user to be added to the pool after migration.&lt;/p>
&lt;h2 id="oauth-flows-via-cognito-login-form">OAuth Flows via Cognito Login Form&lt;/h2>
&lt;p>You can access the local &lt;a href="https://docs.aws.amazon.com/cognito/latest/developerguide/login-endpoint.html">Cognito login form&lt;/a> by entering the following URL in your web browser:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>https://localhost.localstack.cloud/_aws/cognito-idp/login?response_type&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>code&lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">client_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;client_id&amp;gt;&lt;span style="color:#000;font-weight:bold">&amp;amp;&lt;/span>&lt;span style="color:#000">redirect_uri&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;lt;redirect_uri&amp;gt;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Replace &lt;code>&amp;lt;client_id&amp;gt;&lt;/code> with the ID of your existing user pool client (for example, &lt;code>example_user&lt;/code>), and &lt;code>&amp;lt;redirect_uri&amp;gt;&lt;/code> with the redirect URI specific to your application (e.g., &lt;code>http://example.com&lt;/code>).&lt;/p>
&lt;p>The login form should look similar to the screenshot below:&lt;/p>
&lt;figure>
&lt;img src="/user-guide/aws/cognito/cognitoLogin.png" width="320"/>
&lt;/figure>
&lt;p>Upon successful login, the page will automatically redirect to the designated &lt;code>&amp;lt;redirect_uri&amp;gt;&lt;/code>, with an appended path parameter &lt;code>?code=&amp;lt;code&amp;gt;&lt;/code>. For instance, the redirect URL might look like &lt;code>http://example.com?code=test123&lt;/code>.&lt;/p>
&lt;p>To obtain a token, you need to submit the received code using &lt;code>grant_type=authorization_code&lt;/code> to LocalStack&amp;rsquo;s implementation of the Cognito OAuth2 TOKEN Endpoint, which is documented &lt;a href="https://docs.aws.amazon.com/cognito/latest/developerguide/token-endpoint.html">on the AWS Cognito Token endpoint page&lt;/a>.&lt;/p>
&lt;p>Note that the value of the &lt;code>redirect_uri&lt;/code> parameter in your token request must match the value provided during the login process. Ensuring this match is crucial for the proper functioning of the authentication flow.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>% curl &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --data-urlencode &lt;span style="color:#4e9a06">&amp;#39;grant_type=authorization_code&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --data-urlencode &lt;span style="color:#4e9a06">&amp;#39;redirect_uri=http://example.com&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --data-urlencode &lt;span style="color:#4e9a06">&amp;#34;client_id=&lt;/span>&lt;span style="color:#4e9a06">${&lt;/span>&lt;span style="color:#000">client_id&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --data-urlencode &lt;span style="color:#4e9a06">&amp;#39;code=test123&amp;#39;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;http://localhost:4566/_aws/cognito-idp/oauth2/token&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;access_token&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;eyJ0eXAi…lKaHx44Q&amp;#34;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;expires_in&amp;#34;&lt;/span>: 86400, &lt;span style="color:#4e9a06">&amp;#34;token_type&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Bearer&amp;#34;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;refresh_token&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;e3f08304&amp;#34;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;id_token&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;eyJ0eXAi…ADTXv5mA&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="serverless-and-cognito">Serverless and Cognito&lt;/h2>
&lt;p>Furthermore, you have the option to combine Cognito and LocalStack seamlessly with the &lt;a href="https://www.serverless.com/">Serverless framework&lt;/a>.&lt;/p>
&lt;p>For instance, consider this snippet from a &lt;code>serverless.yml&lt;/code> configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">service&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">test&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">plugins&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">serverless-deployment-bucket&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">serverless-pseudo-parameters&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">serverless-localstack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">custom&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">stages&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">local]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">functions&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">http_request&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">handler&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">http.request&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">events&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">http&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1/request&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">authorizer&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">arn&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">arn:aws:cognito-idp:us-east-1:#{AWS::AccountId}:userpool/ExampleUserPool&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Resources&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">UserPool&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Type&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">AWS::Cognito::UserPool&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">Properties&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>After configuring the Serverless setup, you can deploy it using &lt;code>serverless deploy --stage local&lt;/code>. The provided example includes a Lambda function called &lt;code>http_request&lt;/code> that&amp;rsquo;s linked to an API Gateway endpoint.&lt;/p>
&lt;p>Once deployed, the &lt;code>v1/request&lt;/code> API Gateway endpoint will be protected by the Cognito user pool named &amp;ldquo;&lt;code>ExampleUserPool&lt;/code>&amp;rdquo;. As a result, you can register users against the local pool using the same API calls as you would with AWS.&lt;/p>
&lt;p>To send requests to the secured API Gateway endpoint, you need to fetch identity credentials from the local Cognito API. These credentials can then be included as &lt;code>Authentication&lt;/code> HTTP headers (where &lt;code>test-1234567&lt;/code> represents the name of the access key ID generated by Cognito):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Authentication: AWS4-HMAC-SHA256 &lt;span style="color:#000">Credential&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>test-1234567/20190821/us-east-1/cognito-idp/aws4_request ...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing Cognito User Pools, and more. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>Cognito&lt;/strong> under the &lt;strong>Security Identity Compliance&lt;/strong> section.&lt;/p>
&lt;img src="cognito-resource-browser.png" alt="Cognito Resource Browser" title="Cognito Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create User Pool&lt;/strong>: Create a new Cognito User Pool, by specifying the pool name, policies, and other settings.&lt;/li>
&lt;li>&lt;strong>View User Pools&lt;/strong>: View a list of all existing Cognito User Pools, including their &lt;strong>Details&lt;/strong>, &lt;strong>Groups&lt;/strong>, and &lt;strong>Users&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Edit User Pool&lt;/strong>: Edit an existing Cognito User Pool, by adding additional configurations, policies, and more.&lt;/li>
&lt;li>&lt;strong>Create Group&lt;/strong>: Add a new Group to an existing Cognito User Pool, by specifying the group name, description, Role Arn, and Precedence.&lt;/li>
&lt;li>&lt;strong>Create User&lt;/strong>: Add a new User to an existing Cognito User Pool, by specifying the user name, user attributes, and more.&lt;/li>
&lt;li>&lt;strong>Remove Selected&lt;/strong>: Remove the selected User Pool, Group, or User from the list of existing Cognito resources.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use Cognito in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/cognito-jwt">Running Cognito authentication and user pools locally&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/serverless-api-ecs-apigateway-sample">Serverless Container-based APIs with ECS &amp;amp; API Gateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/step-up-auth-sample">Step-up Authentication using Cognito&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Config</title><link>/user-guide/aws/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/config/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>AWS Config is a service provided by Amazon Web Services (AWS) that enables you to assess, audit, and manage the configuration state of your AWS resources.
Config provides a comprehensive view of the resource configuration across your AWS environment, helping you ensure compliance with security policies, track changes, and troubleshoot operational issues.
Config continuously records configuration changes and allows you to retain a historical record of these changes.&lt;/p>
&lt;p>LocalStack allows you to use the Config APIs in your local environment to assesses resource configurations and notifies you of any non-compliant items to mitigate potential security risks.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_config/">API coverage page&lt;/a>, which provides information on the extent of Config&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Config and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.
We will demonstrate how to specify the resource types you want Config to record and grant it the needful permissions to access an S3 bucket and SNS topic with the AWS CLI.&lt;/p>
&lt;h3 id="create-an-s3-bucket-and-sns-topic">Create an S3 bucket and SNS topic&lt;/h3>
&lt;p>The S3 bucket will be used to receive a configuration snapshot on request and configuration history.
The SNS topic will be used to notify you when a configuration snapshot is available.
You can create a new S3 bucket and SNS topic using the AWS CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://config-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sns create-topic --name config-test-topic&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-a-new-configuration-recorder">Create a new configuration recorder&lt;/h3>
&lt;p>You can now create a new configuration recorder to record configuration changes for specified resource types, using the &lt;a href="https://docs.aws.amazon.com/config/latest/APIReference/API_PutConfigurationRecorder.html">&lt;code>PutConfigurationRecorder&lt;/code>&lt;/a> API.
Run the following command to create a new configuration recorder:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal configservice put-configuration-recorder \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --configuration-recorder name=default,roleARN=arn:aws:iam::000000000000:role/config-role&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>We have specified the &lt;code>roleARN&lt;/code> parameter to grant the configuration recorder the needful permissions to access the S3 bucket and SNS topic.
In LocalStack, IAM roles are not enforced, so you can specify any role ARN you like.
The &lt;code>name&lt;/code> parameter has been set to &lt;code>default&lt;/code>, and you can optionally specify a &lt;code>recordingGroup&lt;/code> parameter to specify the resource types you want to record.&lt;/p>
&lt;h3 id="create-a-delivery-channel">Create a delivery channel&lt;/h3>
&lt;p>You can now create a delivery channel object to deliver configuration information to an S3 bucket and an SNS topic.
You have already created the S3 bucket and SNS topic, so you can now create the delivery channel object using the &lt;a href="https://docs.aws.amazon.com/config/latest/APIReference/API_PutDeliveryChannel.html">&lt;code>PutDeliveryChannel&lt;/code>&lt;/a> API.&lt;/p>
&lt;p>We&amp;rsquo;re going to create a delivery channel with the following configuration.
You can inline the JSON into the &lt;code>awslocal&lt;/code> command.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;default&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;s3BucketName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;config-test&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;snsTopicARN&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:sns:us-east-1:000000000000&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;configSnapshotDeliveryProperties&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;deliveryFrequency&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Twelve_Hours&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the following command to create the delivery channel:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal configservice put-delivery-channel \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --delivery-channel &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;default&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;s3BucketName&amp;#34;: &amp;#34;config-test&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;snsTopicARN&amp;#34;: &amp;#34;arn:aws:sns:us-east-1:000000000000&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;configSnapshotDeliveryProperties&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;deliveryFrequency&amp;#34;: &amp;#34;Twelve_Hours&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="start-the-configuration-recorder">Start the configuration recorder&lt;/h3>
&lt;p>You can now start recording configurations of the local AWS resources you have selected to record in your running LocalStack container.
You can use the &lt;a href="https://docs.aws.amazon.com/config/latest/APIReference/API_StartConfigurationRecorder.html">&lt;code>StartConfigurationRecorder&lt;/code>&lt;/a> API to start the configuration recorder.
Run the following command to start the configuration recorder:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal configservice start-configuration-recorder \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --configuration-recorder-name default&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can list the delivery channels and configuration recorders using the &lt;a href="https://docs.aws.amazon.com/config/latest/APIReference/API_DescribeDeliveryChannels.html">&lt;code>DescribeDeliveryChannels&lt;/code>&lt;/a> and &lt;a href="https://docs.aws.amazon.com/config/latest/APIReference/API_DescribeConfigurationRecorderStatus.html">&lt;code>DescribeConfigurationRecorderStatus&lt;/code>&lt;/a> APIs respectively.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal configservice describe-delivery-channels
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal configservice describe-configuration-recorder-status&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;p>AWS Config is currently mocked in LocalStack.
You can create, read, update, and delete AWS Config resources (like delivery channels or configuration recorders),
but LocalStack will currently not record any configuration changes to service resources.
If you need this feature, please consider opening a &lt;a href="https://github.com/localstack/localstack/issues/new">feature request on GitHub&lt;/a>.&lt;/p></description></item><item><title>User-Guide: Cost Explorer</title><link>/user-guide/aws/ce/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ce/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Cost Explorer is a service provided by Amazon Web Services (AWS) that enables you to visualize, analyze, and manage your AWS spending and usage. Cost Explorer offers options to filter and group data by dimensions such as service, region, instance type, and more. With Cost Explorer, you can forecast costs, track budget progress, and set up alerts to receive notifications when spending exceeds predefined thresholds.&lt;/p>
&lt;p>LocalStack allows you to use the Cost Explorer APIs in your local environment to create and manage cost category definition, cost anomaly monitors &amp;amp; subscriptions. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_ce/">API coverage page&lt;/a>, which provides information on the extent of Cost Explorer&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
LocalStack&amp;rsquo;s Cost Explorer implementation cannot programmatically query your cost and usage data, or provide aggregated data such as total monthly costs or total daily usage. However, you can use the integrations to mock the Cost Explorer APIs and test your workflow locally.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Cost Explorer and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to mock the Cost Explorer APIs with the AWS CLI.&lt;/p>
&lt;h3 id="create-a-cost-category-definition">Create a Cost Category definition&lt;/h3>
&lt;p>You can create a Cost Category definition using the &lt;a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CreateCostCategoryDefinition.html">&lt;code>CreateCostCategoryDefinition&lt;/code>&lt;/a>) API. The following example creates a Cost Category definition using an empty rule condition of type &amp;ldquo;REGULAR&amp;rdquo;:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ce create-cost-category-definition --name test \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --rule-version &amp;#34;CostCategoryExpression.v1&amp;#34; --rules &amp;#39;[{&amp;#34;Value&amp;#34;: &amp;#34;test&amp;#34;, &amp;#34;Rule&amp;#34;: {}, &amp;#34;Type&amp;#34;: &amp;#34;REGULAR&amp;#34;}]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CostCategoryArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:ce::000000000000:costcategory/test&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can describe the Cost Category definition using the &lt;a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_DescribeCostCategoryDefinition.html">&lt;code>DescribeCostCategoryDefinition&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ce describe-cost-category-definition \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cost-category-arn arn:aws:ce::000000000000:costcategory/test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CostCategory&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CostCategoryArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:ce::000000000000:costcategory/test&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;RuleVersion&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;CostCategoryExpression.v1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Rules&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Value&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Rule&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Type&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;REGULAR&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-cost-anomaly-subscription">Create a cost anomaly subscription&lt;/h3>
&lt;p>You can add an alert subscription to a cost anomaly detection monitor to define subscribers using the &lt;a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CreateAnomalySubscription.html">&lt;code>CreateAnomalySubscription&lt;/code>&lt;/a> API. The following example creates a cost anomaly subscription:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ce create-anomaly-subscription --anomaly-subscription &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AccountId&amp;#34;: &amp;#34;12345&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SubscriptionName&amp;#34;: &amp;#34;sub1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Frequency&amp;#34;: &amp;#34;DAILY&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;MonitorArnList&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Subscribers&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Threshold&amp;#34;: 111
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;SubscriptionArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:ce::000000000000:anomalysubscription/70644961&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can retrieve the cost anomaly subscriptions using the &lt;a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetAnomalySubscriptions.html">&lt;code>GetAnomalySubscriptions&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ce get-anomaly-subscriptions&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AnomalySubscriptions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;SubscriptionArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:ce::000000000000:anomalysubscription/70644961&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AccountId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;12345&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;MonitorArnList&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Subscribers&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Threshold&amp;#34;&lt;/span>: 111.0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Frequency&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;DAILY&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;SubscriptionName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;sub1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-cost-anomaly-monitor">Create a cost anomaly monitor&lt;/h3>
&lt;p>You can create a new cost anomaly detection subscription with the requested type and monitor specification using the &lt;a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_CreateAnomalyMonitor.html">&lt;code>CreateAnomalyMonitor&lt;/code>&lt;/a> API. The following example creates a cost anomaly monitor:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ce create-anomaly-monitor --anomaly-monitor &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;MonitorName&amp;#34;: &amp;#34;mon5463&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;MonitorType&amp;#34;: &amp;#34;DIMENSIONAL&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;MonitorArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:ce::000000000000:anomalymonitor/22570ff3&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can retrieve the cost anomaly monitors using the &lt;a href="https://docs.aws.amazon.com/aws-cost-management/latest/APIReference/API_GetAnomalyMonitors.html">&lt;code>GetAnomalyMonitors&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ce get-anomaly-monitors&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AnomalyMonitors&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;MonitorArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:ce::000000000000:anomalymonitor/22570ff3&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;MonitorName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;mon5463&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;MonitorType&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;DIMENSIONAL&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing cost category definitions for the Cost Explorer service. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the Resources section, and then clicking on &lt;strong>Cost Explorer&lt;/strong> under the &lt;strong>Storage&lt;/strong> section.&lt;/p>
&lt;img src="cost-explorer-resource-browser.png" alt="Cost Explorer Resource Browser" title="Cost Explorer Resource Browser" width="900" />
&lt;br>&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Cost Category definition&lt;/strong>: Create a new Cost Category definition by clicking on the &lt;strong>Create&lt;/strong> button and providing the required details.&lt;/li>
&lt;li>&lt;strong>View Cost Category definition&lt;/strong>: View the details of a Cost Category definition by clicking on the Cost Category definition.&lt;/li>
&lt;li>&lt;strong>Delete Cost Category definition&lt;/strong>: Delete a Cost Category definition by selecting on the Cost Categorty definition, and then clicking on the &lt;strong>Actions&lt;/strong> button followed by &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: DocumentDB (DocDB)</title><link>/user-guide/aws/docdb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/docdb/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>DocumentDB is a fully managed, non-relational database service that supports MongoDB workloads. DocumentDB is compatible with MongoDB, meaning you can use the same MongoDB drivers, applications, and tools to run, manage, and scale workloads on DocumentDB without having to worry about managing the underlying infrastructure.&lt;/p>
&lt;p>LocalStack allows you to use the DocumentDB APIs to create and manage DocumentDB clusters and instances. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_docdb/">API coverage page&lt;/a>, which provides information on the extent of DocumentDB&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">Information&lt;/h4>
&lt;p>Under the hood, LocalStack starts a MongoDB server, to handle DocumentDB storage, in a separate Docker container and adds port-mapping so that it can be accessed from &lt;code>localhost&lt;/code>. When defining a port to access the container, an available port on the host machine will be selected, that means there is no pre-defined port range by default.&lt;/p>
&lt;p>Because LocalStack utilizes a MongoDB container to provide DocumentDB storage, LocalStack may not
have exact feature parity with Amazon DocumentDB. The database engine may support additional
features that DocumentDB does not and vice versa.&lt;/p>
&lt;p>DocumentDB currently uses the default configuration of the latest &lt;a href="https://hub.docker.com/_/mongo">MongoDB Docker image&lt;/a>. When the &lt;code>MasterUsername&lt;/code> and &lt;code>MasterUserPassword&lt;/code> are set for the creation for the DocumentDB cluster or instance, the container will be started with the corresponding ENVs &lt;code>MONGO_INITDB_ROOT_USERNAME&lt;/code> respectively &lt;code>MONGO_INITDB_ROOT_PASSWORD&lt;/code>.&lt;/p>
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>To create a new DocumentDB cluster we use the &lt;code>create-db-cluster&lt;/code> command as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal docdb create-db-cluster --db-cluster-identifier test-docdb-cluster --engine docdb&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBCluster&amp;#34;: &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterIdentifier&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-docdb-cluster&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterParameterGroup&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;default.docdb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Status&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;available&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Endpoint&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;localhost.localstack.cloud&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;MultiAZ&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Engine&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;docdb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Port&amp;#34;: &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">39045&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;MasterUsername&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterMembers&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[],&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;VpcSecurityGroups&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;VpcSecurityGroupId&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sg-a30edea1f7da6ff90&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Status&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;active&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;StorageEncrypted&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterArn&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;arn:aws:rds:us-east-1:000000000000:cluster:test-docdb-cluster&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If we break down the previous command, we can identify:&lt;/p>
&lt;ul>
&lt;li>&lt;code>docdb&lt;/code>: The command related to Amazon DocumentDB for the &lt;code>AWS CLI&lt;/code>.&lt;/li>
&lt;li>&lt;code>create-db-cluster&lt;/code>: The command to create an Amazon DocumentDB cluster.&lt;/li>
&lt;li>&lt;code>--db-cluster-identifier test-docdb-cluster&lt;/code>: Specifies the unique identifier for the DocumentDB
cluster. In this case, it is set to &lt;code>test-docdb-cluster&lt;/code>. You can customize this identifier to a
name of your choice.&lt;/li>
&lt;li>&lt;code>--engine docdb&lt;/code>: Specifies the database engine. Here, it is set to &lt;code>docdb&lt;/code>, indicating the use of
Amazon DocumentDB.&lt;/li>
&lt;/ul>
&lt;p>Notice in the &lt;code>DBClusterMembers&lt;/code> field of the cluster description that there are no other databases
created.
As we did not specify a &lt;code>MasterUsername&lt;/code> or &lt;code>MasterUserPassword&lt;/code> for the creation of the database, the mongo-db will not set any credentials when starting the docker container.
To create a new database, we can use the &lt;code>create-db-instance&lt;/code> command, like in this example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal docdb create-db-instance --db-instance-identifier test-company \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--db-instance-class db.r5.large --engine docdb --db-cluster-identifier test-docdb-cluster&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstance&amp;#34;: &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstanceIdentifier&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-docdb-instance&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstanceClass&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;db.r5.large&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Engine&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;docdb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstanceStatus&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;creating&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Endpoint&amp;#34;: &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Address&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;localhost.localstack.cloud&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Port&amp;#34;: &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">50761&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;InstanceCreateTime&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2022-10-28T04:27:35.917000+00:00&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;PreferredBackupWindow&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;03:50-04:20&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;BackupRetentionPeriod&amp;#34;: &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;VpcSecurityGroups&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;AvailabilityZone&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;us-east-1a&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;PreferredMaintenanceWindow&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;wed:06:38-wed:07:08&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;EngineVersion&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;12.34&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;AutoMinorVersionUpgrade&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;PubliclyAccessible&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;StatusInfos&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[],&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterIdentifier&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-docdb-cluster&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;StorageEncrypted&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DbiResourceId&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;db-M5ENSHXFPU6XHZ4G4ZEI5QIO2U&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;CopyTagsToSnapshot&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstanceArn&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;arn:aws:rds:us-east-1:000000000000:db:test-docdb-instance&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;EnabledCloudwatchLogsExports&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Some noticeable fields:&lt;/p>
&lt;ul>
&lt;li>
&lt;p>&lt;code>--db-instance-identifier test-company&lt;/code>: Represents the unique identifier of the newly created
database.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>--db-instance-class db.r5.large&lt;/code>: Is the type or class of the Amazon DocumentDB
instance. It determines the compute and memory capacity allocated to the instance. &lt;code>db.r5.large&lt;/code> refers to a specific instance type in
the R5 family. Although the flag is required for database creation, LocalStack will only mock the &lt;code>DBInstanceClass&lt;/code> attribute.&lt;/p>
&lt;p>You can find out more about instance classes in
the &lt;a href="https://docs.aws.amazon.com/AmazonRDS/latest/UserGuide/Concepts.DBInstanceClass.html">AWS documentation&lt;/a>
.&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>To obtain detailed information about the cluster, we use the &lt;code>describe-db-cluster&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal docdb describe-db-clusters --db-cluster-identifier test-docdb-cluster&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusters&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterIdentifier&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-docdb-cluster&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterParameterGroup&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;default.docdb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Status&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;available&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Endpoint&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;localhost.localstack.cloud&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;MultiAZ&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Engine&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;docdb&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Port&amp;#34;: &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">39045&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;MasterUsername&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterMembers&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBInstanceIdentifier&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-company&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;IsClusterWriter&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterParameterGroupStatus&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;in-sync&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;PromotionTier&amp;#34;: &lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;VpcSecurityGroups&amp;#34;: &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>{&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;VpcSecurityGroupId&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sg-a30edea1f7da6ff90&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;Status&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;active&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;StorageEncrypted&amp;#34;: &lt;/span>&lt;span style="color:#204a87;font-weight:bold">false&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">&amp;#34;DBClusterArn&amp;#34;: &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;arn:aws:rds:us-east-1:000000000000:cluster:test-docdb-cluster&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="connect-to-documentdb-using-mongosh">Connect to DocumentDB using mongosh&lt;/h3>
&lt;p>Interacting with the databases is done using &lt;code>mongosh&lt;/code>, which is an official command-line shell and
&lt;a href="https://www.mongodb.com/docs/mongodb-shell/">interactive MongoDB shell provided by MongoDB&lt;/a>.
It is designed to provide a modern and enhanced user experience for interacting with MongoDB
databases.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mongosh mongodb://localhost:39045
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Current Mongosh Log ID: 64a70b795697bcd4865e1b9a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connecting to: mongodb://localhost:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>39045/?directConnection=true&amp;amp;serverSelectionTimeoutMS=2000&amp;amp;appName=mongosh+1.10.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using MongoDB: 6.0.7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using Mongosh: 1.10.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>For mongosh info see: https://docs.mongodb.com/mongodb-shell/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This command will default to accessing the &lt;code>test&lt;/code> database that was created with the cluster. Notice the port, &lt;code>39045&lt;/code>,
which is the cluster port that appears in the aforementioned description.&lt;/p>
&lt;p>To work with a specific database, the command is:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mongosh mongodb://localhost:39045/test-company
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Current Mongosh Log ID: 64a71916fae7fdeeb8b43a73
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Connecting to: mongodb://localhost:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>39045/test-company?directConnection=true&amp;amp;serverSelectionTimeoutMS=2000&amp;amp;appName=mongosh+1.10.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using MongoDB: 6.0.7
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Using Mongosh: 1.10.1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>For mongosh info see: https://docs.mongodb.com/mongodb-shell/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-company&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>From here on we can manipulate collections
using &lt;a href="https://www.mongodb.com/docs/manual/reference/method/">the JavaScript methods provided&lt;/a>
by &lt;code>mongosh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>test-company&amp;gt; db.createCollection(&amp;#34;employees&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{ ok: 1 }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-company&amp;gt; db.createCollection(&amp;#34;customers&amp;#34;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{ ok: 1 }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-company&amp;gt; show collections
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>customers
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>employees
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test-company&amp;gt; exit&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>For more information on how to use MongoDB with &lt;code>mongosh&lt;/code> please refer to
the &lt;a href="https://www.mongodb.com/docs/">MongoDB documentation&lt;/a>.&lt;/p>
&lt;h3 id="connect-to-documentdb-using-nodejs-lambda">Connect to DocumentDB using Node.js Lambda&lt;/h3>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">Important&lt;/h4>
&lt;p>You need to set &lt;code>DOCDB_PROXY_CONTAINER=1&lt;/code> when starting LocalStack to be able to use the returned &lt;code>Endpoint&lt;/code>, which will be correctly resolved automatically.&lt;/p>
&lt;p>The flag &lt;code>DOCDB_PROXY_CONTAINER=1&lt;/code> changes the default behavior and the container will be started as proxied container. Meaning a port from the &lt;a href="/references/external-ports/">pre-defined port&lt;/a> range will be chosen, and when using lambda, you can use &lt;code>localhost.localstack.cloud&lt;/code> to connect to the instance.&lt;/p>
&lt;/div>
&lt;p>In this sample we will use a Node.js lambda function to connect to a DocumentDB.
For the mongo-db connection we will use the &lt;code>mongodb&lt;/code> lib.
Please note, that this sample is only for demo purpose, e.g., we will set the credentials as environment variables to the lambda function.&lt;/p>
&lt;p>In a best-practise sample you would use a secret instead.
We included a snippet at the very end.&lt;/p>
&lt;h4 id="create-the-docdb-cluster-with-a-username-and-password">Create the DocDB Cluster with a username and password&lt;/h4>
&lt;p>We assume you have a &lt;code>MasterUsername&lt;/code> and &lt;code>MasterUserPassword&lt;/code> set for DocDB e.g:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal docdb create-db-cluster --db-cluster-identifier test-docdb \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --engine docdb \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --master-user-password S3cretPwd! \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --master-username someuser&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;h4 id="prepare-the-lambda-function">Prepare the lambda function&lt;/h4>
&lt;p>First, we create the zip required for the lambda function with the mongodb dependency.
You will need &lt;a href="https://docs.npmjs.com/">&lt;code>npm&lt;/code>&lt;/a> in order to install the dependencies.
In your terminal run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mkdir resources
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cd resources
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mkdir node_modules
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>npm install mongodb@6.3.0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Next, copy the following code into a new file named &lt;code>index.js&lt;/code> in the &lt;code>resources&lt;/code> folder:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>const AWS = require(&amp;#39;aws-sdk&amp;#39;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>const RDS = AWS.RDS;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>const { MongoClient } = require(&amp;#39;mongodb&amp;#39;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>const docdb_client = new RDS();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>const docdb_id = process.env.DOCDB_CLUSTER_ID;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>const pwd = process.env.DOCDB_SECRET;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exports.handler = async (event) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> try {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // Get endpoint details using rds/docdb client:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const cluster_result = await docdb_client.describeDBClusters({DBClusterIdentifier: docdb_id}).promise();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const cluster = cluster_result.DBClusters[0];
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const host = cluster.Endpoint;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const port = cluster.Port;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const user = cluster.MasterUsername;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // Connection URI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const dbname = &amp;#34;mydb&amp;#34;;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // retryWrites is by default true, but not supported by AWS DocumentDB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const uri = `mongodb://${user}:${pwd}@${host}:${port}/?retryWrites=false`;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // Connect to DocumentDB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const client = await MongoClient.connect(uri);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const db = client.db(dbname);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // Insert data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const collection = db.collection(&amp;#39;your_collection&amp;#39;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> await collection.insertOne({ key: &amp;#39;value&amp;#39; });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // Query data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const result = await collection.findOne({ key: &amp;#39;value&amp;#39; });
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> await client.close();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // Return result
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statusCode: 200,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> body: JSON.stringify(result),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } catch (error) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statusCode: 500,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> body: JSON.stringify({ error: error.message }),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Now, you can zip the entire.
Make sure you are inside &lt;code>resources&lt;/code> directory and run:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>zip -r function.zip .&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Finally, we can create the &lt;code>lambda&lt;/code> function using &lt;code>awslocal&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name MyNodeLambda \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime nodejs16.x \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::000000000000:role/lambda-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler index.handler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb://function.zip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --environment Variables=&amp;#34;{DOCDB_CLUSTER_ID=test-docdb,DOCDB_SECRET=S3cretPwd!}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>You can invoke the lambda by calling:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda invoke --function-name MyNodeLambda outfile&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>The &lt;code>outfile&lt;/code> contains the returned value, e.g.:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>{&lt;span style="color:#4e9a06">&amp;#34;statusCode&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;body&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;{\&amp;#34;_id\&amp;#34;:\&amp;#34;6560a21ca7771a02ef128c72\&amp;#34;,\&amp;#34;key\&amp;#34;:\&amp;#34;value\&amp;#34;}&amp;#34;&lt;/span>}&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="use-secret-to-connect-to-docdb">Use Secret To Connect to DocDB&lt;/h4>
&lt;p>The best-practise for accessing databases is by using secrets.
Secrets follow a &lt;a href="https://docs.aws.amazon.com/secretsmanager/latest/userguide/create_database_secret.html">well-defined pattern&lt;/a>.&lt;/p>
&lt;p>For the lambda function, you can pass the secret arn as &lt;code>SECRET_NAME&lt;/code>.
In the lambda, you can then retrieve the secret details like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>const AWS = require(&amp;#39;aws-sdk&amp;#39;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>const { MongoClient } = require(&amp;#39;mongodb&amp;#39;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>const secretsManager = new AWS.SecretsManager();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>const secretName = process.env.SECRET_NAME;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>function customURIEncode(str) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // encode also characters that encodeURIComponent does not encode
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return encodeURIComponent(str)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .replace(/!/g, &amp;#39;%21&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .replace(/~/g, &amp;#39;%7E&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .replace(/\*/g, &amp;#39;%2A&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .replace(/&amp;#39;/g, &amp;#39;%27&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .replace(/\(/g, &amp;#39;%28&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> .replace(/\)/g, &amp;#39;%29&amp;#39;);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>exports.handler = async (event) =&amp;gt; {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> try {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // Retrieve secret
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const secretValue = await secretsManager.getSecretValue({ SecretId: secretName }).promise();
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const { username, password, host, port } = JSON.parse(secretValue.SecretString);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // make sure username and password are correctly encoded for the URI
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const user = customURIEncode(username);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const pwd = customURIEncode(password);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // retryWrites is by default true, but not supported by AWS DocumentDB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const uri = `mongodb://${user}:${pwd}@${host_name}:${port}/?retryWrites=false`;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // Connect to DocumentDB
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> const client = await MongoClient.connect(uri);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> // ... interact with the mongo-db ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statusCode: 200
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> } catch (error) {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> console.error(&amp;#39;Error: &amp;#39;, error);
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> return {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> statusCode: 500,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> body: JSON.stringify({ error: error.message }),
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> };
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>};&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing DocumentDB instances and clusters. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>DocumentDB&lt;/strong> under the &lt;strong>Database&lt;/strong> section.&lt;/p>
&lt;img src="docdb-resource-browser.png" alt="DocumentDB Resource Browser" title="DocumentDB Resource Browser" width="900" />
&lt;br>
&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Cluster&lt;/strong>: Create a new DocumentDB cluster by specifying the DBCluster Identifier, Availability Zone, and other parameters.&lt;/li>
&lt;li>&lt;strong>Create Instance&lt;/strong>: Create a new DocumentDB instance by specifying the database class, engine, DBInstance Identifier, and other parameters.&lt;/li>
&lt;li>&lt;strong>View Instance &amp;amp; Cluster&lt;/strong>: View an existing DocumentDB instance or cluster by clicking the instance/cluster name.&lt;/li>
&lt;li>&lt;strong>Edit Instance &amp;amp; Cluster&lt;/strong>: Edit an existing DocumentDB instance or cluster by clicking the instance/cluster name and clicking the &lt;strong>Edit Instance&lt;/strong> or &lt;strong>Edit Cluster&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>Remove Instance &amp;amp; Cluster&lt;/strong>: Remove an existing DocumentDB instance or cluster by clicking the instance/cluster name and clicking the &lt;strong>Actions&lt;/strong> followed by &lt;strong>Remove Selected&lt;/strong> button.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: DynamoDB</title><link>/user-guide/aws/dynamodb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/dynamodb/</guid><description>
&lt;p>DynamoDB is a fully managed NoSQL database service provided by AWS.
It offers a flexible and highly scalable way to store and retrieve data, making it suitable for a wide range of applications.
DynamoDB provides a fast and scalable key-value datastore with support for replication, automatic scaling, data encryption at rest, and on-demand backup, among other capabilities.&lt;/p>
&lt;p>LocalStack allows you to use the DynamoDB APIs in your local environment to manage key-value and document data models.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_dynamodb/">API coverage page&lt;/a>, which provides information on the extent of DynamoDB&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
DynamoDB on LocalStack is powered by &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DynamoDBLocal.html">DynamoDB Local&lt;/a>.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to DynamoDB and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.
We will demonstrate how to create DynamoDB table, along with its replicas, and put an item into the table using the AWS CLI.&lt;/p>
&lt;h3 id="create-a-dynamodb-table">Create a DynamoDB table&lt;/h3>
&lt;p>You can create a DynamoDB table using the &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_CreateTable.html">&lt;code>CreateTable&lt;/code>&lt;/a> API.
Execute the following command to create a table named &lt;code>global01&lt;/code> with a primary key &lt;code>id&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb create-table \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --table-name global01 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --key-schema AttributeName=id,KeyType=HASH \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --attribute-definitions AttributeName=id,AttributeType=S \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --billing-mode PAY_PER_REQUEST \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region ap-south-1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TableDescription&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AttributeDefinitions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AttributeName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;id&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AttributeType&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;S&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TableName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;global01&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;KeySchema&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AttributeName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;id&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;KeyType&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;HASH&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TableStatus&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ACTIVE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationDateTime&amp;#34;&lt;/span>: 1693244562.147,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TableArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:dynamodb:ap-south-1:000000000000:table/global01&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TableId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;6bc6dd46-98d8-486a-aed8-6ef66a35df7c&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-replicas">Create replicas&lt;/h3>
&lt;p>You can create replicas of a DynamoDB table using the &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateTable.html">&lt;code>UpdateTable&lt;/code>&lt;/a> API.
Execute the following command to create replicas in &lt;code>ap-south-1&lt;/code> and &lt;code>us-west-1&lt;/code> regions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb update-table \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --table-name global01 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --replica-updates &amp;#39;[{&amp;#34;Create&amp;#34;: {&amp;#34;RegionName&amp;#34;: &amp;#34;eu-central-1&amp;#34;}}, {&amp;#34;Create&amp;#34;: {&amp;#34;RegionName&amp;#34;: &amp;#34;us-west-1&amp;#34;}}]&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region ap-south-1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TableDescription&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AttributeDefinitions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AttributeName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;id&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AttributeType&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;S&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Replicas&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;RegionName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;eu-central-1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ReplicaStatus&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ACTIVE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;RegionName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;us-west-1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ReplicaStatus&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ACTIVE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now operate on the table in the replicated regions as well.
You can use the &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_ListTables.html">&lt;code>ListTables&lt;/code>&lt;/a> API to list the tables in the replicated regions.
Run the following command to list the tables in the &lt;code>eu-central-1&lt;/code> region:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb list-tables \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region eu-central-1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TableNames&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;global01&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="insert-an-item">Insert an item&lt;/h3>
&lt;p>You can insert an item into a DynamoDB table using the &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html">&lt;code>PutItem&lt;/code>&lt;/a> API.
Execute the following command to insert an item into the &lt;code>global01&lt;/code> table:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb put-item \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --table-name global01 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --item &amp;#39;{&amp;#34;id&amp;#34;:{&amp;#34;S&amp;#34;:&amp;#34;foo&amp;#34;}}&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region eu-central-1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now query the number of items in the table using the &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_DescribeTable.html">&lt;code>DescribeTable&lt;/code>&lt;/a> API.
Run the following command to query the number of items in the &lt;code>global01&lt;/code> table from a different region:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb describe-table \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --table-name global01 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --query &amp;#39;Table.ItemCount&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region ap-south-1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
You can run DynamoDB in memory, which can greatly improve the performance of your database operations. However, this also means that the data will not be possible to persist on disk and will be lost even though persistence is enabled in LocalStack. To enable this feature, you need to set the environment variable &lt;code>DYNAMODB_IN_MEMORY=1&lt;/code> while starting LocalStack.
&lt;/div>
&lt;h3 id="time-to-live">Time To Live&lt;/h3>
&lt;p>LocalStack supports &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/TTL.html">Time to Live (TTL)&lt;/a> in DynamoDB.
To enable this feature, you need to set the environment variable &lt;code>DYNAMODB_REMOVE_EXPIRED_ITEMS&lt;/code> to 1.
This enables a worker running every 60 minutes that scans all the tables and deletes the expired items.&lt;/p>
&lt;p>In addition, to programmatically trigger the worker at convenience, we provide the following endpoint:&lt;/p>
&lt;ul>
&lt;li>&lt;code>DELETE /_aws/dynamodb/expired&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>The response returns the number of deleted items:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">curl -X DELETE localhost:4566//_aws/dynamodb/expired
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">{&amp;#34;ExpiredItems&amp;#34;: 3}
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing DynamoDB tables and items.
You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>DynamoDB&lt;/strong> under the &lt;strong>Database&lt;/strong> section.&lt;/p>
&lt;img src="dynamodb-resource-browser.png" alt="DynamoDB Resource Browser" title="DynamoDB Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Table&lt;/strong>: Create a new DynamoDB table by clicking on the &lt;strong>Create Table&lt;/strong> button.
You can specify the table name, table class, key schema and other attributes of the table.&lt;/li>
&lt;li>&lt;strong>Edit Table&lt;/strong>: Edit an existing DynamoDB table by clicking on the &lt;strong>Edit Table&lt;/strong> button.
You can modify the table name, key schema and other attributes of the table.&lt;/li>
&lt;li>&lt;strong>View items&lt;/strong>: View the items in a DynamoDB table by clicking on the &lt;strong>Items&lt;/strong> button.
You can also add, edit and delete items in the table.
You can also switch to scan or query mode to view the items in the table.&lt;/li>
&lt;li>&lt;strong>Run PartiQL&lt;/strong>: Run a PartiQL query against a DynamoDB table by clicking on the &lt;strong>PartiQL&lt;/strong> button.
You can add your query in the editor and click on the &lt;strong>Execute&lt;/strong> button to execute the query.&lt;/li>
&lt;li>&lt;strong>Delete Table&lt;/strong>: Delete an existing DynamoDB table by selecting the DynamoDB table and clicking &lt;strong>Actions&lt;/strong> and then &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use IAM in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/serverless-api-ecs-apigateway-sample">Serverless Container-based APIs with Amazon ECS &amp;amp; API Gateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/shipment-list-demo">Full-Stack application with AWS Lambda, DynamoDB &amp;amp; S3 for shipment validation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/step-up-auth-sample">Step-up Authentication using Amazon Cognito&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/microservices-apigateway-lambda-dynamodb-sqs-sample">Serverless microservices with Amazon API Gateway, DynamoDB, SQS, and Lambda&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/event-driven-architecture-with-amazon-sns-fifo">Event-driven architecture with Amazon SNS FIFO, DynamoDB, Lambda, and S3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/aws-sdk-js-notes-app">Note-Taking application using AWS SDK for JavaScript&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/appsync-graphql-api-sample">AppSync GraphQL APIs for DynamoDB and RDS Aurora PostgreSQL&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/loan-broker-stepfunctions-lambda-app">Loan Broker application with AWS Step Functions, DynamoDB, Lambda, SQS, and SNS&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/sqs-fargate-ddb-cdk-go">Messaging Processing application with SQS, DynamoDB, and Fargate&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;h3 id="global-tables">Global tables&lt;/h3>
&lt;p>LocalStack provides support for global tables (Version 2019), which are tables that exist within the same account and are replicated across various regions.&lt;/p>
&lt;p>However, legacy global tables (Version 2017) are not supported by LocalStack.
Operations such as &lt;code>CreateGlobalTable&lt;/code>, &lt;code>UpdateGlobalTable&lt;/code>, and &lt;code>DescribeGlobalTable&lt;/code> will not replicate globally.&lt;/p>
&lt;h3 id="replication">Replication&lt;/h3>
&lt;ul>
&lt;li>Removing the original table region from the replication set while retaining the replicas is currently not feasible.
Deleting the original table will result in the removal of all replicas as well.&lt;/li>
&lt;li>DynamoDB Streams are exclusively supported for original tables and not for replicated ones.
More information can be found in &lt;a href="https://github.com/localstack/localstack/issues/7405">our public GitHub issue tracker&lt;/a>.&lt;/li>
&lt;li>Batch operations such as &lt;code>BatchWriteItem&lt;/code>, &lt;code>BatchGetItem&lt;/code>, etc. are currently not supported for replicated tables.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Elastic Beanstalk</title><link>/user-guide/aws/elasticbeanstalk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elasticbeanstalk/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Elastic Beanstalk (EB) is a managed platform-as-a-service (PaaS) provided by Amazon Web Services (AWS) that simplifies the process of deploying, managing, and scaling web applications and services. Elastic Beanstalk orchestrates various AWS services, including EC2, S3, SNS, and Elastic Load Balancers. Elastic Beanstalk also supports various application environments, such as Java, .NET, Node.js, PHP, Python, Ruby, Go, and Docker.&lt;/p>
&lt;p>LocalStack allows you to use the Elastic Beanstalk APIs in your local environment to create and manage applications, environments and versions. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_elasticbeanstalk/">API coverage page&lt;/a>, which provides information on the extent of Elastic Beanstalk&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
LocalStack&amp;rsquo;s Elastic Beanstalk implementation is limited and lacks support for installing application and running it in a local Elastic Beanstalk environment. LocalStack also does not support the &lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/dg/eb-cli3.html">&lt;code>eb&lt;/code>&lt;/a> CLI tool. However, you can use other integrations, such as AWS CLI &amp;amp; Terraform, to mock the Elastic Beanstalk APIs and test your workflow locally.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Elastic Beanstalk and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create an Elastic Beanstalk application and environment with the AWS CLI.&lt;/p>
&lt;h3 id="create-an-application">Create an application&lt;/h3>
&lt;p>To create an Elastic Beanstalk application, you can use the &lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_CreateApplication.html">&lt;code>CreateApplication&lt;/code>&lt;/a> API. Run the following command to create an application named &lt;code>my-app&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticbeanstalk create-application \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-name my-app&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Application&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ApplicationArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:elasticbeanstalk:us-east-1:000000000000:application/my-app&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ApplicationName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;my-app&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DateCreated&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-08-24T05:55:57.603443Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also use the &lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_DescribeApplications.html">&lt;code>DescribeApplications&lt;/code>&lt;/a> API to retrieve information about your application. Run the following command to retrieve information about the &lt;code>my-app&lt;/code> application, we created earlier:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticbeanstalk describe-applications \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-names my-app&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-an-environment">Create an environment&lt;/h3>
&lt;p>To create an Elastic Beanstalk environment, you can use the &lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_CreateEnvironment.html">&lt;code>CreateEnvironment&lt;/code>&lt;/a> API. Run the following command to create an environment named &lt;code>my-environment&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticbeanstalk create-environment \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-name my-app \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --environment-name my-environment&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;EnvironmentName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;my-environment&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;EnvironmentId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;4fcae3fb&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ApplicationName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;my-app&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DateCreated&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-08-24T05:57:59.889966Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;EnvironmentArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:elasticbeanstalk:us-east-1:000000000000:applicationversion/my-app/version&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also use the &lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_DescribeEnvironments.html">&lt;code>DescribeEnvironments&lt;/code>&lt;/a> API to retrieve information about your environment. Run the following command to retrieve information about the &lt;code>my-environment&lt;/code> environment, we created earlier:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticbeanstalk describe-environments \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --environment-names my-environment&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-an-application-version">Create an application version&lt;/h3>
&lt;p>To create an Elastic Beanstalk application version, you can use the &lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_CreateApplicationVersion.html">&lt;code>CreateApplicationVersion&lt;/code>&lt;/a> API. Run the following command to create an application version named &lt;code>v1&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticbeanstalk create-application-version \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-name my-app \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --version-label v1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ApplicationVersion&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ApplicationVersionArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:elasticbeanstalk:us-east-1:000000000000:applicationversion/my-app/v1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ApplicationName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;my-app&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;VersionLabel&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;v1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DateCreated&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-08-24T05:59:58.166021Z&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also use the &lt;a href="https://docs.aws.amazon.com/elasticbeanstalk/latest/api/API_DescribeApplicationVersions.html">&lt;code>DescribeApplicationVersions&lt;/code>&lt;/a> API to retrieve information about your application version. Run the following command to retrieve information about the &lt;code>v1&lt;/code> application version, we created earlier:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticbeanstalk describe-application-versions \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --application-name my-app&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Elastic Compute Cloud (EC2)</title><link>/user-guide/aws/ec2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ec2/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Elastic Compute Cloud (EC2) is a core service within Amazon Web Services (AWS) that provides scalable and flexible virtual computing resources.
EC2 enables users to launch and manage virtual machines, referred to as instances.&lt;/p>
&lt;p>LocalStack allows you to use the EC2 APIs in your local environment to create and manage EC2 instances and related resources such as VPCs, EBS volumes, etc.
The list of supported APIs can be found on the &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_ec2/">API coverage page&lt;/a>.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to EC2 and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.
We will demonstrate how to create an EC2 instance that runs a simple Python web server.
LocalStack Pro running on a Linux host is required as network access to containers is not possible on macOS.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.&lt;/p>
&lt;h3 id="create-a-key-pair">Create a key pair&lt;/h3>
&lt;p>To create a key pair, you can use the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_CreateKeyPair.html">&lt;code>CreateKeyPair&lt;/code>&lt;/a> API.
Run the following command to create the key pair and pipe the output to a file named &lt;code>key.pem&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 create-key-pair \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --key-name my-key \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --query &amp;#39;KeyMaterial&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --output text | tee key.pem&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can assign necessary permissions to the key pair file using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>chmod 400 key.pem&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Alternatively, we can import an existing key pair, for example if you have an SSH public key in your home directory under &lt;code>~/.ssh/id_rsa.pub&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 import-key-pair --key-name my-key --public-key-material file://~/.ssh/id_rsa.pub&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;h3 id="add-rules-to-your-security-group">Add rules to your security group&lt;/h3>
&lt;p>Currently, LocalStack only supports the &lt;code>default&lt;/code> security group.
You can add rules to the security group using the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_AuthorizeSecurityGroupIngress.html">&lt;code>AuthorizeSecurityGroupIngress&lt;/code>&lt;/a> API.
Run the following command to add a rule to allow inbound traffic on port 8000:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 authorize-security-group-ingress \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --group-id default \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --protocol tcp \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --port 8000 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cidr 0.0.0.0/0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command will enable rules in the security group to allow incoming traffic from your local machine on port 8000 of an emulated EC2 instance.&lt;/p>
&lt;h3 id="run-an-ec2-instance">Run an EC2 instance&lt;/h3>
&lt;p>You can fetch the Security Group ID using the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeSecurityGroups.html">&lt;code>DescribeSecurityGroups&lt;/code>&lt;/a> API.
Run the following command to fetch the Security Group ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 describe-security-groups&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;SecurityGroups&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Description&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;default VPC security group&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;GroupName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;OwnerId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;000000000000&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;GroupId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;sg-0372ee3c519883079&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>To start your Python Web Server in your locally emulated EC2 instance, you can use the following user script by saving it to a file named &lt;code>user_script.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">#!/bin/bash -xeu
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic">&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt update
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apt install python3 -y
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>python3 -m http.server &lt;span style="color:#0000cf;font-weight:bold">8000&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now run an EC2 instance using the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_RunInstances.html">&lt;code>RunInstances&lt;/code>&lt;/a> API.
Run the following command to run an EC2 instance by adding the appropriate Security Group ID that we fetched in the previous step:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 run-instances \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --image-id ami-ff0fea8310f3 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --count 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --instance-type t3.nano \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --key-name my-key \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --security-group-ids &amp;#39;&amp;lt;SECURITY_GROUP_ID&amp;gt;&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --user-data file://./user_script.sh&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="test-the-python-web-server">Test the Python web server&lt;/h3>
&lt;p>You can now open the LocalStack logs to find the IP address of the locally emulated EC2 instance.
Run the following command to open the LocalStack logs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack logs&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-08-16T17:18:29.702 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> l.s.ec2.vmmanager.docker : Instance i-b07acefd77a3c415f will be accessible via SSH at: 127.0.0.1:12862, 172.17.0.4:22
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-08-16T17:18:29.702 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> l.s.ec2.vmmanager.docker : Instance i-b07acefd77a3c415f port mappings &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>container -&amp;gt; host&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;8000/tcp&amp;#39;&lt;/span>: 29043, &lt;span style="color:#4e9a06">&amp;#39;22/tcp&amp;#39;&lt;/span>: 12862&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now use the IP address to test the Python Web Server.
Run the following command to test the Python Web Server:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl 172.17.0.4:8000&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&amp;lt;!DOCTYPE HTML PUBLIC &lt;span style="color:#4e9a06">&amp;#34;-//W3C//DTD HTML 4.01//EN&amp;#34;&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;http://www.w3.org/TR/html4/strict.dtd&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;html&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;head&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;meta http-equiv&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Content-Type&amp;#34;&lt;/span> &lt;span style="color:#000">content&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;text/html; charset=utf-8&amp;#34;&lt;/span>&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;title&amp;gt;Directory listing &lt;span style="color:#204a87;font-weight:bold">for&lt;/span> /&amp;lt;/title&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Similar to the setup in production AWS, the user data content is stored at &lt;code>/var/lib/cloud/instances/&amp;lt;instance_id&amp;gt;/user-data.txt&lt;/code> within the instance.
Any execution of this data is recorded in the &lt;code>/var/log/cloud-init-output.log&lt;/code> file.
&lt;/div>
&lt;h3 id="connecting-via-ssh">Connecting via SSH&lt;/h3>
&lt;p>You can also set up an SSH connection to the locally emulated EC2 instance using the instance IP address.&lt;/p>
&lt;p>This section assumes that you have created or imported an SSH key pair named &lt;code>my-key&lt;/code> (see &lt;a href="#create-a-key-pair">instructions above&lt;/a>).
When running the EC2 instance, make sure to pass the &lt;code>--key-name&lt;/code> parameter to the command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 run-instances --key-name my-key ...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the instance is up and running, we can use the &lt;code>ssh&lt;/code> command to set up an SSH connection.
Assuming the instance is available under &lt;code>127.0.0.1:12862&lt;/code> (as per the LocalStack log output), use this command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>ssh -p 12862 -i key.pem root@127.0.0.1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">Tip&lt;/h4>
If the &lt;code>ssh&lt;/code> command throws an error like &amp;ldquo;Identity file not accessible&amp;rdquo; or &amp;ldquo;bad permissions&amp;rdquo;, then please make sure that the key file has a restrictive &lt;code>0400&lt;/code> permission as illustrated &lt;a href="#create-a-key-pair">here&lt;/a>.
&lt;/div>
&lt;h2 id="vm-managers">VM Managers&lt;/h2>
&lt;p>LocalStack EC2 supports multiple methods to simulate the EC2 service.
All tiers support the mock/CRUD capability.
For advanced setups, LocalStack Pro comes with emulation capability for certain resource types so that they behave more closely like AWS.&lt;/p>
&lt;p>The underlying method for this can be controlled using the &lt;a href="/references/configuration/#ec2">&lt;code>EC2_VM_MANAGER&lt;/code>&lt;/a> configuration option.
You may choose between plain mocked resources, containerized or virtualized.&lt;/p>
&lt;h2 id="mock-vm-manager">Mock VM Manager&lt;/h2>
&lt;p>With the Mock VM manager, all resources are stored as in-memory representation.
This only offers the CRUD capability.&lt;/p>
&lt;p>This is the default VM manager in LocalStack Community edition.
To use this VM manager in LocalStack Pro, set &lt;a href="/references/configuration/#ec2">&lt;code>EC2_VM_MANAGER&lt;/code>&lt;/a> to &lt;code>mock&lt;/code>.&lt;/p>
&lt;p>This serves as the fallback manager if an operation is not implemented in other VM managers.&lt;/p>
&lt;h2 id="docker-vm-manager">Docker VM Manager&lt;/h2>
&lt;p>LocalStack Pro supports the Docker VM manager which uses the &lt;a href="https://docs.docker.com/engine/">Docker Engine&lt;/a> to emulate EC2 instances.
This VM manager requires the Docker socket from the host machine to be mounted inside the LocalStack container at &lt;code>/var/run/docker.sock&lt;/code>.&lt;/p>
&lt;p>This is the default VM manager in LocalStack Pro.
You may set &lt;a href="/references/configuration/#ec2">&lt;code>EC2_VM_MANAGER&lt;/code>&lt;/a> to &lt;code>docker&lt;/code> to explicitly use this VM manager.&lt;/p>
&lt;p>All launched EC2 instances have the Docker socket mounted inside them at &lt;code>/var/run/docker.sock&lt;/code> to make Docker-in-Docker usecases possible.&lt;/p>
&lt;p>All limitations associated with containers are also applicable to EC2 instances managed by the Docker manager.
These restrictions include things like root access and networking.&lt;/p>
&lt;p>Please note that this VM manager does not fully support persistence.
While the records of resources will be persisted, the instances or AMIs themselves (i.e. Docker containers and Docker images) will not be persisted.&lt;/p>
&lt;h3 id="instances-and-amis">Instances and AMIs&lt;/h3>
&lt;p>LocalStack utilizes a specific naming scheme to recognize and manage associated containers and images.
Docker containers that back EC2 instances are named &lt;code>localstack-ec2.&amp;lt;InstanceId&amp;gt;&lt;/code>.
Similarly, Docker base images which are tagged with the scheme &lt;code>localstack-ec2/&amp;lt;AmiName&amp;gt;:&amp;lt;AmiId&amp;gt;&lt;/code> are recognized as Amazon Machine Images (AMIs).&lt;/p>
&lt;p>You can mark any Docker base image as AMI using the below command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker tag ubuntu:focal localstack-ec2/ubuntu-focal-ami:ami-000001&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above example will make LocalStack treat the &lt;code>ubuntu:focal&lt;/code> Docker image as an AMI with name &lt;code>ubuntu-focal-ami&lt;/code> and ID &lt;code>ami-000001&lt;/code>.&lt;/p>
&lt;p>At startup, LocalStack downloads the following AMIs that can be used to launch Dockerized instances.&lt;/p>
&lt;ul>
&lt;li>Ubuntu 20.04 &lt;code>ami-ff0fea8310f3&lt;/code> (deprecated and marked for removal in the next major release)&lt;/li>
&lt;li>Ubuntu 22.04 &lt;code>ami-df5de72bdb3b&lt;/code>&lt;/li>
&lt;li>Amazon Linux 2023 &lt;code>ami-024f768332f0&lt;/code>&lt;/li>
&lt;/ul>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The auto download of Docker images to be used as AMIs can be disabled using the &lt;code>EC2_DOWNLOAD_DEFAULT_IMAGES=0&lt;/code> configuration variable.
&lt;/div>
&lt;p>All LocalStack-managed Docker AMIs bear the resource tag &lt;code>ec2_vm_manager:docker&lt;/code>.
These AMIs can be listed using:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 describe-images --filters Name=tag:ec2_vm_manager,Values=docker&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
If an AMI does have the &lt;code>ec2_vm_manager:docker&lt;/code> tag, it means that it is mocked.
Attempting to launch Dockerized instances using these AMIs will result in an &lt;code>InvalidAMIID.NotFound&lt;/code> error.
See &lt;a href="#mock-vm-manager">Mock VM manager&lt;/a>.
&lt;/div>
&lt;h3 id="networking">Networking&lt;/h3>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Network access to EC2 instance is not possible on macOS.
This is because Docker Desktop on macOS does not expose the bridge network to the host system.
See &lt;a href="https://docs.docker.com/desktop/networking/#known-limitations">Docker Desktop Known Limitations&lt;/a>.
&lt;/div>
&lt;p>Network addresses for Dockerized instances are allocated by the Docker daemon and can be obtained from the &lt;code>PublicIpAddress&lt;/code> attribute.
These addresses are also printed in the logs while the instance is being initialized.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2022-03-21T14:46:49.540 INFO Instance i-1d6327abf04e31be6 will be accessible via SSH at: 127.0.0.1:55705
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When instances are launched, LocalStack attempts to start SSH server &lt;code>/usr/sbin/sshd&lt;/code> in the Docker base image.
If not found, it installs and starts the &lt;a href="https://github.com/mkj/dropbear">Dropbear&lt;/a> SSH server.&lt;/p>
&lt;p>To be able to access the instance at additional ports from the host system, you can modify the default security group and incorporate the needed ingress ports.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Security group ingress rules are applied only during the creation of the Dockerized instance.
Modifying a security group will not open any ports for a running instance.
&lt;/div>
&lt;p>The system supports up to 32 ingress ports.
This constraint is in place to prevent the host from exhausting available ports.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 authorize-security-group-ingress \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --group-id default \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --protocol tcp \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --port 8080
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 describe-security-groups \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --group-names default&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The port mapping details are provided in the logs during the instance initialization process.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2022-12-20T19:43:44.544 INFO Instance i-1d6327abf04e31be6 port mappings &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>container -&amp;gt; host&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;8080/tcp&amp;#39;&lt;/span>: 51747, &lt;span style="color:#4e9a06">&amp;#39;22/tcp&amp;#39;&lt;/span>: 55705&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="elastic-block-store">Elastic Block Store&lt;/h3>
&lt;p>A common use case is to attach an EBS block device to an EC2 instance, which can then be used to create a custom filesystem for additional storage.
This section illustrates how this functionality can be achieved with EC2 Docker instances in LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
This feature is disabled by default.
Please set the &lt;a href="/references/configuration/#ec2">&lt;code>EC2_MOUNT_BLOCK_DEVICES&lt;/code>&lt;/a> configuration option to enable it.
&lt;/div>
&lt;p>First, we create a user data script &lt;code>init.sh&lt;/code> which creates an ext3 file system on the block device &lt;code>/ebs-dev/sda1&lt;/code> and mounts it under &lt;code>/ebs-mounted&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat &amp;gt; init.sh &amp;lt;&amp;lt;EOF
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>#!/bin/bash
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>set -eo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkdir -p /ebs-mounted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mkfs -t ext3 /ebs-dev/sda1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>mount -o loop /ebs-dev/sda1 /ebs-mounted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>touch /ebs-mounted/my-test-file
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>We can then start an EC2 instance, specifying a block device mapping under the device name &lt;code>/ebs-dev/sda1&lt;/code>, and pointing to our &lt;code>init.sh&lt;/code> user data script:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ec2 run-instances --image-id ami-ff0fea8310f3 --count 1 --instance-type t3.nano \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --block-device-mapping &amp;#39;{&amp;#34;DeviceName&amp;#34;:&amp;#34;/ebs-dev/sda1&amp;#34;,&amp;#34;Ebs&amp;#34;:{&amp;#34;VolumeSize&amp;#34;:10}}&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --user-data file://init.sh&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Please note that, whereas real AWS uses GiB for volume sizes, LocalStack uses MiB as the unit for &lt;code>VolumeSize&lt;/code> in the command above (to avoid creating huge files locally).
Also, by default block device images are limited to 1 GiB in size, but this can be customized by setting the &lt;a href="/references/configuration/#ec2">&lt;code>EC2_EBS_MAX_VOLUME_SIZE&lt;/code>&lt;/a> config variable (defaults to &lt;code>1000&lt;/code>).&lt;/p>
&lt;p>Once the instance is successfully started and initialized, we can first determine the container ID via &lt;code>docker ps&lt;/code>, and then list the contents of the mounted filesystem &lt;code>/ebs-mounted&lt;/code>, which should contain our test file named &lt;code>my-test-file&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker ps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CONTAINER ID IMAGE PORTS NAMES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>5c60cf72d84a ...:ami-ff0fea8310f3 19419-&amp;gt;22/tcp localstack-ec2...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker exec 5c60cf72d84a ls /ebs-mounted
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>my-test-file&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;h3 id="instance-metadata-service">Instance Metadata Service&lt;/h3>
&lt;p>The Docker VM manager supports the &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html">Instance Metadata Service&lt;/a> which provides information about the running instance.&lt;/p>
&lt;p>Both IMDSv1 and IMDSv2 can be used.
LocalStack does not strictly enforce either versions.
If the &lt;code>X-aws-ec2-metadata-token&lt;/code> header is present, LocalStack will use IMDSv2, otherwise it will fall back to IMDSv1.&lt;/p>
&lt;p>To create an IMDSv2 token, run the following inside the EC2 container:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -X PUT &amp;#34;http://169.254.169.254/latest/api/token&amp;#34; -H &amp;#34;x-aws-ec2-metadata-token-ttl-seconds: 300&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The token can be used in subsequent requests like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -H &amp;#34;x-aws-ec2-metadata-token: &amp;lt;TOKEN&amp;gt;&amp;#34; -v http://169.254.169.254/latest/meta-data/&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Currently a limited set of &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/instancedata-data-categories.html">metadata categories&lt;/a> are implemented.
If you would like support for more metadata categories, please make a feature request on &lt;a href="https://github.com/localstack/localstack/issues/new/choose">GitHub&lt;/a>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
IMDS IPv6 endpoint is currently not supported.
&lt;/div>
&lt;h3 id="configuration">Configuration&lt;/h3>
&lt;p>You can use the &lt;a href="/references/configuration/#ec2">&lt;code>EC2_DOCKER_FLAGS&lt;/code>&lt;/a> LocalStack configuration variable to pass supplementary flags to Docker during the initiation of containerized instances.
This allows for fine-tuned behaviours, for example, running containers in privileged mode using &lt;code>--privileged&lt;/code> or specifying an alternate CPU platform with &lt;code>--platform&lt;/code>.
Keep in mind that this will apply to all instances that are launched in the LocalStack session.&lt;/p>
&lt;h3 id="operations">Operations&lt;/h3>
&lt;p>The following table explains the emulated action for various API operations.
Any operation not listed below will use the mock VM manager.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Operation&lt;/th>
&lt;th style="text-align:left">Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;code>CreateImage&lt;/code>&lt;/td>
&lt;td style="text-align:left">Uses Docker commit to capture a snapshot of a running instance into a new AMI&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>DescribeImages&lt;/code>&lt;/td>
&lt;td style="text-align:left">Retrieves a list of Docker images that can be used as AMIs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>DescribeInstances&lt;/code>&lt;/td>
&lt;td style="text-align:left">Describes both mocked and Docker-backed instances. Docker-backed instances are marked with the resource tag &lt;code>ec2_vm_manager:docker&lt;/code>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>RunInstances&lt;/code>&lt;/td>
&lt;td style="text-align:left">Creates and runs Docker containers that back instances&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>StopInstances&lt;/code>&lt;/td>
&lt;td style="text-align:left">Pauses the Docker containers that back instances&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>StartInstances&lt;/code>&lt;/td>
&lt;td style="text-align:left">Resumes the Docker containers that back instances&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>TerminateInstances&lt;/code>&lt;/td>
&lt;td style="text-align:left">Stops the Docker containers that back instances&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="libvirt-vm-manager">Libvirt VM Manager&lt;/h2>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The Libvirt VM manager is under active development.
It is currently offered as a preview and will be part of the Enterprise Plan upon release.
If a functionality you desire is missing, please create a feature request on the &lt;a href="https://github.com/localstack/localstack/issues/new/choose">GitHub issue tracker&lt;/a>.
&lt;/div>
&lt;p>The Libvirt VM manager uses the &lt;a href="https://libvirt.org/index.html">Libvirt&lt;/a> API to create fully virtualized EC2 resources.
This lets you create EC2 setups which closely resemble AWS EC2.
Currently LocalStack Pro supports the KVM-accelerated QEMU hypervisor on Linux hosts.&lt;/p>
&lt;p>Installation steps for QEMU/KVM will vary based on the Linux distribution on the host machine.
On Debian/Ubuntu-based distributions, you can run:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>sudo apt install -y qemu-kvm libvirt-daemon-system&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To check CPU support for virtualization, run:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>kvm-ok
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>INFO: /dev/kvm exists
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>KVM acceleration can be used&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">Tip&lt;/h4>
You may also need to enable virtualization support at hardware level.
This is often labelled as &amp;lsquo;Virtualization Technology&amp;rsquo;, &amp;lsquo;VT-d&amp;rsquo; or &amp;lsquo;VT-x&amp;rsquo; in UEFI/BIOS setups.
&lt;/div>
&lt;p>LocalStack requires the Libvirt socket on the host to be mounted inside the container.
This can be done by including the volume mounts when the LocalStack container is started.
If you are using the &lt;a href="/getting-started/installation/#starting-localstack-with-docker-compose">Docker Compose template&lt;/a>, include the following line in &lt;code>services.localstack.volumes&lt;/code> list:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&amp;#34;/var/run/libvirt/libvirt-sock:/var/run/libvirt/libvirt-sock&amp;#34;
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you are using &lt;a href="/getting-started/installation/#starting-localstack-with-docker">Docker CLI&lt;/a>, include the following parameter in &lt;code>docker run&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>-v /var/run/libvirt/libvirt-sock:/var/run/libvirt/libvirt-sock
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The Libvirt VM manager currently does not have full support for persistence.
Underlying virtual machines and volumes are not persisted, instead only their mock respresentations are.&lt;/p>
&lt;h3 id="amis">AMIs&lt;/h3>
&lt;p>All qcow2 images with cloud-init support can be used as AMIs.&lt;/p>
&lt;p>LocalStack does not come preloaded with any AMIs.
You can find the download links for images of popular OSs below:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-37" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active"
id="tabs-37-00-tab" data-toggle="tab" href="#tabs-37-00" role="tab"
aria-controls="tabs-37-00" aria-selected="false">
Ubuntu
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link"
id="tabs-37-01-tab" data-toggle="tab" href="#tabs-37-01" role="tab"
aria-controls="tabs-37-01" aria-selected="false">
Debian
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link"
id="tabs-37-02-tab" data-toggle="tab" href="#tabs-37-02" role="tab"
aria-controls="tabs-37-02" aria-selected="false">
Fedora
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link"
id="tabs-37-03-tab" data-toggle="tab" href="#tabs-37-03" role="tab"
aria-controls="tabs-37-03" aria-selected="false">
Microsoft Windows
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-37-content">
&lt;div class="tab-body tab-pane fade show active"
id="tabs-37-00" role="tabpanel" aria-labelled-by="tabs-37-00-tab">
&lt;p>Canonical provides official Ubuntu images at &lt;a href="https://cloud-images.ubuntu.com/">cloud-images.ubuntu.com&lt;/a>.&lt;/p>
&lt;p>Please use the images in qcow2 format ending in &lt;code>.img&lt;/code>.&lt;/p>
&lt;/div>
&lt;div class="tab-body tab-pane fade"
id="tabs-37-01" role="tabpanel" aria-labelled-by="tabs-37-01-tab">
&lt;p>
Debian provides cloud images for direct download at &lt;a href="http://cdimage.debian.org/cdimage/cloud/">cdimage.debian.org/cdimage/cloud&lt;/a>.
&lt;/p>
&lt;p>
Please use the &lt;code>genericcloud&lt;/code> image in qcow2 format.
&lt;/p>
&lt;/div>
&lt;div class="tab-body tab-pane fade"
id="tabs-37-02" role="tabpanel" aria-labelled-by="tabs-37-02-tab">
&lt;p>
The Fedora project maintains the official cloud images at &lt;a href="https://fedoraproject.org/cloud/download">fedoraproject.org/cloud/download&lt;/a>.
&lt;/p>
&lt;p>
Please use the qcow2 images.
&lt;/p>
&lt;/div>
&lt;div class="tab-body tab-pane fade"
id="tabs-37-03" role="tabpanel" aria-labelled-by="tabs-37-03-tab">
&lt;p>An evaluation version of Windows Server 2012 R2 is provided by &lt;a href="https://cloudbase.it/windows-cloud-images/">Cloudbase Solutions&lt;/a>.&lt;/p>
&lt;/div>
&lt;/div>
&lt;p>Compatible qcow2 images must be placed at the default Libvirt storage pool at &lt;code>/var/lib/libvirt/images&lt;/code> on the host machine.
Images must be named with the prefix &lt;code>ami-&lt;/code> followed by at least 8 hexadecimal characters without an extension, e.g. &lt;code>ami-1234abcd&lt;/code>.
You may need run the following command to make sure the image is registered with Libvirt:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>virsh pool-refresh default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Pool default refreshed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>virsh vol-list --pool default
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Name Path
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--------------------------------------------------------------------------------------------------------
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ami-1234abcd /var/lib/libvirt/images/ami-1234abcd&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Only the images that follow the above naming scheme will be recognised by LocalStack as AMIs suitable for launching virtualised instances.
These AMIs will also have the resource tag &lt;code>ec2_vm_manager:libvirt&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal ec2 describe-images --filters Name=tag:ec2_vm_manager,Values=libvirt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="instances">Instances&lt;/h3>
&lt;p>Virtualised instances can be launched with &lt;code>RunInstances&lt;/code> operation and specifying a compatible AMI.
LocalStack will create and start a Libvirt domain to represent the instance.&lt;/p>
&lt;p>When instances are launched, LocalStack uses the &lt;a href="https://cloudinit.readthedocs.io/en/latest/reference/datasources/nocloud.html">NoCloud&lt;/a> datasource to customize the virtual machine.
The login user is created with the username &lt;code>localstack&lt;/code> and password &lt;code>localstack&lt;/code>.
If a key pair is provided, it will added as an authorised SSH key for this user.&lt;/p>
&lt;p>LocalStack shuts down all virtual machines when it terminates.
The Libvirt domains and volumes are left defined and can be used for debugging, etc.&lt;/p>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">Tip&lt;/h4>
Use &lt;a href="https://virt-manager.org/">Virtual Machine Manager&lt;/a> or &lt;a href="https://www.libvirt.org/manpages/virsh.html">virsh&lt;/a> to manage the virtual machines outside of LocalStack.
&lt;/div>
&lt;p>The Libvirt VM manager currently does not support instance user data.&lt;/p>
&lt;p>To connect to the graphical display of the instance, first obtain the VNC address using:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>virsh vncdisplay &amp;lt;instance ID&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>127.0.0.1:0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can then use a compatible VNC client (e.g. &lt;a href="https://tigervnc.org/">TigerVNC&lt;/a>) to connect and interact with the virtual machine.&lt;/p>
&lt;p>
&lt;img src="tiger-vnc.png" alt="Tiger VNC" title="Tiger VNC"/>
&lt;/p>
&lt;h3 id="networking-1">Networking&lt;/h3>
&lt;p>Currently all instances are behind a NAT network.
Instances can access the internet but are inaccessible from the host machine.&lt;/p>
&lt;h3 id="elastic-block-stores">Elastic Block Stores&lt;/h3>
&lt;p>LocalStack clones the AMI into an EBS volume when the instance is initialised.
LocalStack does not resize the instance root volume, instead it inherits the properties of the AMI.&lt;/p>
&lt;p>Currently it is not possible to attach additional EBS volumes to instances.&lt;/p>
&lt;h3 id="instance-metadata-service-1">Instance Metadata Service&lt;/h3>
&lt;p>The Libvirt VM manager does not support the Instance Metadata Service endpoints.&lt;/p>
&lt;h3 id="operations-1">Operations&lt;/h3>
&lt;p>The following table explains the emulated action for various API operations.
Any operation not listed below will use the mock VM manager.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th style="text-align:left">Operation&lt;/th>
&lt;th style="text-align:left">Notes&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td style="text-align:left">&lt;code>DescribeImages&lt;/code>&lt;/td>
&lt;td style="text-align:left">Returns all mock and Libvirt AMIs&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>RunInstances&lt;/code>&lt;/td>
&lt;td style="text-align:left">Defines and starts a Libvirt domain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>StartInstances&lt;/code>&lt;/td>
&lt;td style="text-align:left">Starts an already defined Libvirt domain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>StopInstances&lt;/code>&lt;/td>
&lt;td style="text-align:left">Stops a running Libvirt domain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>RebootInstances&lt;/code>&lt;/td>
&lt;td style="text-align:left">Restarts a Libvirt domain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>TerminateInstances&lt;/code>&lt;/td>
&lt;td style="text-align:left">Stops and undefines a Libvirt domain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td style="text-align:left">&lt;code>CreateVolume&lt;/code>&lt;/td>
&lt;td style="text-align:left">Creates a sparse Libvirt volume&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing EC2 instances.
You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>EC2&lt;/strong> under the &lt;strong>Compute&lt;/strong> section.&lt;/p>
&lt;p>
&lt;img src="ec2-resource-browser.png" alt="EC2 Resource Browser" title="EC2 Resource Browser" width="900" />
&lt;/p>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Instance&lt;/strong>: Create a new EC2 instance by clicking the &lt;strong>Launch Instance&lt;/strong> button and specifying the AMI ID, instance type, and other parameters.&lt;/li>
&lt;li>&lt;strong>View Instance&lt;/strong>: View the details of an EC2 instance by clicking on the Instance ID.&lt;/li>
&lt;li>&lt;strong>Terminate Instance&lt;/strong>: Terminate an EC2 instance by selecting the Instance ID, and clicking on the &lt;strong>ACTIONS&lt;/strong> button followed by clicking on &lt;strong>Terminate Selected&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Start Instance&lt;/strong>: Start a stopped EC2 instance by selecting the Instance ID, and clicking on the &lt;strong>ACTIONS&lt;/strong> button followed by clicking on &lt;strong>Start Selected&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Stop Instance&lt;/strong>: Stop a running EC2 instance by selecting the Instance ID, and clicking on the &lt;strong>ACTIONS&lt;/strong> button followed by clicking on &lt;strong>Stop Selected&lt;/strong>.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Elastic Container Registry (ECR)</title><link>/user-guide/aws/ecr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ecr/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Elastic Container Registry (ECR) is a fully managed container registry service provided by Amazon Web Services.
ECR enables you to store, manage, and deploy Docker container images to build, store, and deploy containerized applications.
ECR integrates with other AWS services, such as Lambda, ECS, and EKS.&lt;/p>
&lt;p>LocalStack allows you to use the ECR APIs in your local environment to build &amp;amp; push Docker images to a local ECR registry.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_ecr/">API coverage page&lt;/a>, which provides information on the extent of ECR&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Elastic Container Registry and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to build and push a Docker image to a local ECR repository.&lt;/p>
&lt;h3 id="create-a-docker-image">Create a Docker image&lt;/h3>
&lt;p>To get started, create a Docker image for a simple web application that can be used in an ECS task definition.
Create a new file named &lt;code>Dockerfile&lt;/code> (with no file extension) in your project directory.
This file will contain the instructions for building the Docker image.
Add the following content to the file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-Dockerfile" data-lang="Dockerfile">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">FROM&lt;/span>&lt;span style="color:#4e9a06"> public.ecr.aws/docker/library/ubuntu:18.04&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Install dependencies&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">RUN&lt;/span> apt-get update &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> apt-get -y install apache2&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Install apache and write hello world message&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">RUN&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;Hello World!&amp;#39;&lt;/span> &amp;gt; /var/www/html/index.html&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#8f5902;font-style:italic"># Configure apache&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">RUN&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;. /etc/apache2/envvars&amp;#39;&lt;/span> &amp;gt; /root/run_apache.sh &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;mkdir -p /var/run/apache2&amp;#39;&lt;/span> &amp;gt;&amp;gt; /root/run_apache.sh &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;mkdir -p /var/lock/apache2&amp;#39;&lt;/span> &amp;gt;&amp;gt; /root/run_apache.sh &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> &lt;span style="color:#204a87">echo&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;/usr/sbin/apache2 -D FOREGROUND&amp;#39;&lt;/span> &amp;gt;&amp;gt; /root/run_apache.sh &lt;span style="color:#ce5c00;font-weight:bold">&amp;amp;&amp;amp;&lt;/span> &lt;span style="color:#4e9a06">\ &lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span> chmod &lt;span style="color:#0000cf;font-weight:bold">755&lt;/span> /root/run_apache.sh&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">EXPOSE&lt;/span>&lt;span style="color:#4e9a06"> 80&lt;/span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">CMD&lt;/span> /root/run_apache.sh&lt;span style="color:#a40000">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now build the Docker image from the &lt;code>Dockerfile&lt;/code> using the `docker CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker build -t localstack-ecr-image .&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can run the following command to verify that the image was built successfully:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker images&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You will see output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>REPOSITORY TAG IMAGE ID CREATED SIZE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>..
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>localstack-ecr-image latest 38883941b8fa &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> minute ago 185MB
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-an-ecr-repository">Create an ECR repository&lt;/h3>
&lt;p>To push the Docker image to ECR, you first need to create a repository.
You can create an ECR repository using the &lt;a href="https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_CreateRepository.html">&lt;code>CreateRepository&lt;/code>&lt;/a> API.
Run the following command to create a repository named &lt;code>localstack-ecr-repository&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ecr create-repository \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --repository-name localstack-ecr-repository \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --image-scanning-configuration scanOnPush=true&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You will see an output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;repository&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;repositoryArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:ecr:us-east-1:000000000000:repository/localstack-ecr-repository&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;registryId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;000000000000&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;repositoryName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;localstack-ecr-repository&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;repositoryUri&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;000000000000.dkr.ecr.us-east-1.localhost.localstack.cloud:4566/localstack-ecr-repository&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;createdAt&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-07-24T16:58:36+05:30&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;imageTagMutability&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;MUTABLE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;imageScanningConfiguration&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;scanOnPush&amp;#34;&lt;/span>: &lt;span style="color:#204a87">true&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;encryptionConfiguration&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;encryptionType&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;AES256&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You will need the &lt;code>repositoryUri&lt;/code> value to push the Docker image to the repository.&lt;/p>
&lt;h3 id="push-the-docker-image-to-the-repository">Push the Docker image to the repository&lt;/h3>
&lt;p>To push the Docker image to the repository, you first need to tag the image with the &lt;code>repositoryUri&lt;/code>.
Run the following command to tag the image:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker tag localstack-ecr-image 000000000000.dkr.ecr.us-east-1.localhost.localstack.cloud:4566/localstack-ecr-repository&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now push the image to the repository using the &lt;code>docker&lt;/code> CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker push 000000000000.dkr.ecr.us-east-1.localhost.localstack.cloud:4566/localstack-ecr-repository&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The image will take a few seconds to push to the repository.
You can run the following command to verify that the image was pushed successfully:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ecr list-images --repository-name localstack-ecr-repository&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You will see an output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;imageIds&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;imageDigest&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;sha256:1cbc853c42983362817b5eecac80b1389c0a5cf9cfd1e711d9d0a1f5a7a36d43&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;imageTag&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;latest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing ECR repositories and images.
You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>ECR&lt;/strong> under the &lt;strong>Compute&lt;/strong> section.&lt;/p>
&lt;img src="ecr-resource-browser.png" alt="ECR Resource Browser" title="ECR Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create repository&lt;/strong>: Create a new ECR repository by clicking the &lt;strong>Create&lt;/strong> button, and specify the &lt;strong>Registry Id&lt;/strong>, &lt;strong>Repository Name&lt;/strong>, &lt;strong>Tags&lt;/strong>, and other options.&lt;/li>
&lt;li>&lt;strong>View repository&lt;/strong>: View the details of an ECR repository by clicking on the repository name.
You can also view the push commands to push an image to the repository by clicking the &lt;strong>View Push Commands&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>Delete repository&lt;/strong>: Delete an ECR repository by selecting the ECR repository, clicking the &lt;strong>Actions&lt;/strong> button, and then clicking &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use ECR in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/amazon-rds-init-cdk">Amazon RDS initialization using CDK, Lambda, ECR, and Secrets Manager&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-container-image">Lambda Container Images with ECR&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/ecs-ecr-container-app">Pushing Docker images to ECR and running them locally on ECS&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Elastic Container Service (ECS)</title><link>/user-guide/aws/ecs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/ecs/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Amazon Elastic Container Service (Amazon ECS) is a fully managed container orchestration service provided by Amazon Web Services (AWS).
It allows you to run, stop, and manage Docker containers on a cluster.
ECS eliminates the need for you to install, operate, and scale your own cluster management infrastructure.&lt;/p>
&lt;p>LocalStack allows you to use the ECS APIs in your local environment to create &amp;amp; manage ECS clusters, tasks, and services.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_ecs/">API coverage page&lt;/a>, which provides information on the extent of ECS&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>This guide is designed for users new to ECS and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.
We will demonstrate how to create an ECS service using the AWS CLI&lt;/p>
&lt;h3 id="create-a-cluster">Create a cluster&lt;/h3>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
By default, the &lt;strong>ECS Fargate&lt;/strong> launch type is assumed, i.e., the local Docker engine is used for deployment of applications, and there is no need to create and manage EC2 virtual machines to run the containers.
&lt;/div>
&lt;p>ECS tasks and services run on a cluster.
Execute the following command to create an ECS cluster named &lt;code>mycluster&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ecs create-cluster --cluster-name mycluster
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;clusterArn&amp;#34;: &amp;#34;arn:aws:ecs:us-east-1:000000000000:cluster/mycluster&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;clusterName&amp;#34;: &amp;#34;mycluster&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;ACTIVE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;registeredContainerInstancesCount&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;runningTasksCount&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;pendingTasksCount&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;activeServicesCount&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;settings&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;containerInsights&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;value&amp;#34;: &amp;#34;disabled&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-a-task-definition">Create a task definition&lt;/h3>
&lt;p>Containers within tasks are defined by a task definition that is managed outside of the context of a cluster.
To create a task definition that runs an &lt;code>ubuntu&lt;/code> container forever (by running an infinite loop printing &amp;ldquo;Running&amp;rdquo; on startup), create the following file as &lt;code>task_definition.json&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;containerDefinitions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;server&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;image&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ubuntu&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;cpu&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;memory&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;command&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;sh&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;-c&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;while true; do echo running; sleep 1; done&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;essential&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87;font-weight:bold">true&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;logConfiguration&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;logDriver&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;awslogs&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;options&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;awslogs-create-group&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;awslogs-group&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;myloggroup&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;awslogs-stream-prefix&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;myprefix&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;awslogs-region&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;us-east-1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;family&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;myfamily&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and then run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ecs register-task-definition --cli-input-json file://task_definition.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;taskDefinition&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;taskDefinitionArn&amp;#34;: &amp;#34;arn:aws:ecs:us-east-1:000000000000:task-definition/myfamily:1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;containerDefinitions&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;server&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;image&amp;#34;: &amp;#34;ubuntu&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cpu&amp;#34;: 10,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;memory&amp;#34;: 10,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;portMappings&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;essential&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;command&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;sh&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;-c&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;while true; do echo running; sleep 1; done&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;environment&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;mountPoints&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;volumesFrom&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;logConfiguration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;logDriver&amp;#34;: &amp;#34;awslogs&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;options&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;awslogs-create-group&amp;#34;: &amp;#34;true&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;awslogs-group&amp;#34;: &amp;#34;myloggroup&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;awslogs-stream-prefix&amp;#34;: &amp;#34;myprefix&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;awslogs-region&amp;#34;: &amp;#34;us-east-1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;family&amp;#34;: &amp;#34;myfamily&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;networkMode&amp;#34;: &amp;#34;bridge&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;revision&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;volumes&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;ACTIVE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;placementConstraints&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;compatibilities&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EXTERNAL&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EC2&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;registeredAt&amp;#34;: 1713364207.068659
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Task definitions are immutable, and are identified by their &lt;code>family&lt;/code> field, and calling &lt;code>register-task-definition&lt;/code> again with the same &lt;code>family&lt;/code> value creates a new &lt;em>version&lt;/em> of a task definition.&lt;/p>
&lt;p>This task definition creates a CloudWatch Logs log group and log stream for the container so you can view the service logs.&lt;/p>
&lt;h3 id="launch-a-service">Launch a service&lt;/h3>
&lt;p>Finally we launch an ECS service using the task definition above.
This will create a number of containers in replica mode meaning they are distributed over the nodes of the cluster, or in the case of Fargate, over availability zones within the region of the cluster. To create a service, execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ecs create-service --service-name myservice --cluster mycluster --task-definition myfamily --desired-count 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;serviceArn&amp;#34;: &amp;#34;arn:aws:ecs:us-east-1:000000000000:service/mycluster/myservice&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;serviceName&amp;#34;: &amp;#34;myservice&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;clusterArn&amp;#34;: &amp;#34;arn:aws:ecs:us-east-1:000000000000:cluster/mycluster&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;loadBalancers&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;serviceRegistries&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;ACTIVE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;desiredCount&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;runningCount&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;pendingCount&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;launchType&amp;#34;: &amp;#34;EC2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;taskDefinition&amp;#34;: &amp;#34;arn:aws:ecs:us-east-1:000000000000:task-definition/myfamily:1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;deploymentConfiguration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;deploymentCircuitBreaker&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;enable&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;rollback&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;maximumPercent&amp;#34;: 200,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;minimumHealthyPercent&amp;#34;: 100
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;deployments&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;ecs-svc/49976591540684372&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;PRIMARY&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;taskDefinition&amp;#34;: &amp;#34;arn:aws:ecs:us-east-1:000000000000:task-definition/myfamily:1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;desiredCount&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;pendingCount&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;runningCount&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;failedTasks&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;createdAt&amp;#34;: 1709242525.05109,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;updatedAt&amp;#34;: 1709242525.051093,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;launchType&amp;#34;: &amp;#34;EC2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;rolloutState&amp;#34;: &amp;#34;IN_PROGRESS&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;rolloutStateReason&amp;#34;: &amp;#34;ECS deployment ecs-svc/49976591540684372 in progress.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;events&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;createdAt&amp;#34;: 1709242525.051096,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;placementStrategy&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;schedulingStrategy&amp;#34;: &amp;#34;REPLICA&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;createdBy&amp;#34;: &amp;#34;arn:aws:iam::000000000000:user/test&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see a new docker container has been created, using the &lt;code>ubuntu:latest&lt;/code> image, and running the infinite loop command:&lt;/p>
&lt;pre tabindex="0">&lt;code>$ docker ps
CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
5dfeb9376391 ubuntu &amp;#34;sh -c &amp;#39;while true; …&amp;#34; 3 minutes ago Up 3 minutes ls-ecs-mycluster-75f0515e-0364-4ee5-9828-19026140c91a-0-a1afaa9d
9967fe5300cc localstack/localstack-pro &amp;#34;docker-entrypoint.sh&amp;#34; 5 minutes ago Up 5 minutes (healthy) 0.0.0.0:443-&amp;gt;443/tcp, 0.0.0.0:4510-4560-&amp;gt;4510-4560/tcp, 53/tcp, 5678/tcp, 0.0.0.0:4566-&amp;gt;4566/tcp localstack-main
&lt;/code>&lt;/pre>&lt;h3 id="collect-container-logs">Collect container logs&lt;/h3>
&lt;p>To access the generated logs from the container, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal logs filter-log-events --log-group-name myloggroup --query &amp;#39;events[].message&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs filter-log-events --log-group-name myloggroup | head -n 20
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;events&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;logStreamName&amp;#34;: &amp;#34;myprefix/ls-ecs-mycluster-75f0515e-0364-4ee5-9828-19026140c91a-0-a1afaa9d/75f0515e-0364-4ee5-9828-19026140c91a&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;timestamp&amp;#34;: 1713364216375,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;message&amp;#34;: &amp;#34;running&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ingestionTime&amp;#34;: 1713364216704,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;eventId&amp;#34;: &amp;#34;0&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;logStreamName&amp;#34;: &amp;#34;myprefix/ls-ecs-mycluster-75f0515e-0364-4ee5-9828-19026140c91a-0-a1afaa9d/75f0515e-0364-4ee5-9828-19026140c91a&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;timestamp&amp;#34;: 1713364216440,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;message&amp;#34;: &amp;#34;running&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ingestionTime&amp;#34;: 1713364216704,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;eventId&amp;#34;: &amp;#34;1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;logStreamName&amp;#34;: &amp;#34;myprefix/ls-ecs-mycluster-75f0515e-0364-4ee5-9828-19026140c91a-0-a1afaa9d/75f0515e-0364-4ee5-9828-19026140c91a&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;timestamp&amp;#34;: 1713364216505,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;message&amp;#34;: &amp;#34;running&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>See our &lt;a href="/user-guide/aws/logs/">CloudWatch Logs user guide&lt;/a> for more details.&lt;/p>
&lt;h2 id="localstack-ecs-behavior">LocalStack ECS behavior&lt;/h2>
&lt;p>You can use the configuration option &lt;code>MAIN_DOCKER_NETWORK&lt;/code> to specify the network the ECS containers are started in.
Otherwise, your ECS containers will be created in the same Docker network that LocalStack is in.
If your ECS containers depend on LocalStack services, your ECS task network should be the same as the LocalStack container network.&lt;/p>
&lt;p>If you are running LocalStack through a &lt;code>docker run&lt;/code> command, do not forget to enable the communication from the container to the Docker Engine API.
You can provide the access by adding the following option &lt;code>-v /var/run/docker.sock:/var/run/docker.sock&lt;/code>.&lt;/p>
&lt;p>For more information regarding the configuration of LocalStack, please check the &lt;a href="/references/configuration/">LocalStack configuration&lt;/a> section.&lt;/p>
&lt;h2 id="remote-debugging">Remote debugging&lt;/h2>
&lt;p>To enable a remote debugging port for your ECS tasks, set the environment variable &lt;code>ECS_DOCKER_FLAGS=&amp;quot;-p 0:&amp;lt;debugger port&amp;gt;&amp;quot;&lt;/code> to expose your debugger on a random port on your host.
You can then use this port to remote attach your debugger.
Or if you are working with a single container, you can set &lt;code>ECS_DOCKER_FLAGS=&amp;quot;-p &amp;lt;debugger port&amp;gt;:&amp;lt;debugger port&amp;gt;&amp;quot;&lt;/code> to expose the debugger port to your host system.&lt;/p>
&lt;h2 id="mounting-local-directories-for-ecs-tasks">Mounting local directories for ECS tasks&lt;/h2>
&lt;p>In some cases, it can be useful to mount code from the host filesystem into the ECS container. For example, to enable a quick debugging loop where you can test changes without having to build and redeploy the task&amp;rsquo;s Docker image each time - similar to the &lt;a href="/user-guide/lambda-tools/hot-reloading/">Lambda Hot Reloading&lt;/a> feature in LocalStack.&lt;/p>
&lt;p>In order to leverage code mounting, we can use the ECS bind mounts feature, which is covered in the &lt;a href="https://docs.aws.amazon.com/AmazonECS/latest/developerguide/bind-mounts.html">AWS Bind mounts documentation&lt;/a>.&lt;/p>
&lt;h3 id="boto3-example">Boto3 example&lt;/h3>
&lt;p>The Python sample code below registers a task definition, mounting a host path &lt;code>/host/path&lt;/code> into the container under &lt;code>/container/path&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">ecs_client&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> boto3.client&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;ecs&amp;#34;&lt;/span>, &lt;span style="color:#000">endpoint_url&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;http://localhost:4566&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>ecs_client.register_task_definition&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">family&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;...&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">containerDefinitions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;...&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;image&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;alpine&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;command&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;...&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;mountPoints&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;containerPath&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/container/path&amp;#34;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;sourceVolume&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;test-volume&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">volumes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=[{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;host&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;sourcePath&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/host/path&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>, &lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;test-volume&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">}]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="cdk-example">CDK example&lt;/h3>
&lt;p>The same functionality can be achieved with the AWS CDK following this (Python) example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">task_definition&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">ecs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TaskDefinition&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">volumes&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ecs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Volume&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-volume&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">host&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">ecs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Host&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">source_path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/host/path&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">container&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">task_def&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">add_container&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">container&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">add_mount_points&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ecs&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">MountPoint&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">container_path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/container/path&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">source_volume&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test-volume&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="private-registry-authentication">Private registry authentication&lt;/h2>
&lt;p>To download images from a private registry using LocalStack, you must provide your credentials.
You can pass your Docker credentials to the container by setting the &lt;code>DOCKER_CONFIG&lt;/code> environment variable and mounting the &lt;code>~/.docker/config.json&lt;/code> file as a volume at &lt;code>/config.json&lt;/code>.
Your file paths might differ, so check Docker&amp;rsquo;s documentation on &lt;a href="https://docs.docker.com/engine/reference/commandline/cli/#environment-variables">Environment Variables&lt;/a> and &lt;a href="https://docs.docker.com/engine/reference/commandline/cli/#configuration-files">Configuration Files&lt;/a> for details.&lt;/p>
&lt;p>Here is a Docker Compose example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;3.8&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">services&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">container_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;${LOCALSTACK_DOCKER_NAME:-localstack-main}&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack/localstack-pro&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;127.0.0.1:4566:4566&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;127.0.0.1:4510-4559:4510-4559&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;127.0.0.1:443:443&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN:?}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">DOCKER_CONFIG=/config.json&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;/var/run/docker.sock:/var/run/docker.sock&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">~/.docker/config.json:/config.json:ro&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Alternatively, you can download the image from the private registry before using it or employ an &lt;a href="https://docs.localstack.cloud/references/init-hooks/">Initialization Hook&lt;/a> to install the Docker client and use these credentials to download the image.&lt;/p>
&lt;h2 id="running-ecs-on-kubernetes">Running ECS on Kubernetes&lt;/h2>
&lt;p>LocalStack Enterprise image allows you to run ECS tasks on Kubernetes. The tasks are added to ELB load balancer target groups.
You can do so by setting the &lt;code>ECS_TASK_EXECUTOR&lt;/code> environment variable to &lt;code>kubernetes&lt;/code> in the LocalStack container.&lt;/p>
&lt;p>In this guide, you will learn how to run ECS tasks on Kubernetes by using &lt;a href="https://k3d.io/">`k3d&lt;/a>, a lightweight Kubernetes distribution.&lt;/p>
&lt;h3 id="create-a-new-cluster">Create a new cluster&lt;/h3>
&lt;p>After installing &lt;code>k3d&lt;/code>, you can run the following commands to create a Kubernetes cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export NODE_PORT=31566
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>k3d cluster create ls-cluster -p &amp;#34;4566:$NODE_PORT&amp;#34; --wait --timeout 5m&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="install-localstack-in-the-cluster">Install LocalStack in the cluster&lt;/h3>
&lt;p>You can now install LocalStack in the Kubernetes cluster by using LocalStack&amp;rsquo;s Helm chart. The following command installs LocalStack with the &lt;code>kubernetes&lt;/code> executor for ECS and sets the &lt;code>LOCALSTACK_AUTH_TOKEN&lt;/code> environment variable:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>helm upgrade --install localstack localstack/localstack \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --set debug=true \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --set image.repository=localstack/localstack-pro \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --set image.tag=latest \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --set readinessProbe.initialDelaySeconds=10 --set livenessProbe.initialDelaySeconds=10 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --set service.edgeService.nodePort=$NODE_PORT \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --set &amp;#34;extraEnvVars[0].name=LOCALSTACK_AUTH_TOKEN&amp;#34; --set-string &amp;#34;extraEnvVars[0].value=${LOCALSTACK_AUTH_TOKEN}&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --set &amp;#34;extraEnvVars[1].name=ECS_TASK_EXECUTOR&amp;#34; --set-string &amp;#34;extraEnvVars[1].value=kubernetes&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --wait --timeout 5m&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After a successful installation, you can access the LocalStack running the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://localhost:4566/_localstack/health&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now create ECS tasks on Kubernetes by following the steps in the &lt;a href="#getting-started">Getting Started&lt;/a> section.&lt;/p>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing ECS clusters &amp;amp; task definitions.
You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resource Browser&lt;/strong> section, and then clicking on &lt;strong>ECS&lt;/strong> under the &lt;strong>Compute&lt;/strong> section.&lt;/p>
&lt;img src="ecs-resource-browser.png" alt="ECS Resource Browser" title="ECS Resource Browser" width="900" />
&lt;br>
&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Cluster&lt;/strong>: Create a new ECS cluster by clicking on the &lt;strong>Create Cluster&lt;/strong> button in the &lt;strong>Clusters&lt;/strong> tab and providing the cluster name among other details.&lt;/li>
&lt;li>&lt;strong>Register Task Definition&lt;/strong>: Register a new task definition by clicking on the &lt;strong>Register Task Definition&lt;/strong> button in the &lt;strong>Task Definitions&lt;/strong> tab and providing the task definition details.&lt;/li>
&lt;li>&lt;strong>View Cluster Details&lt;/strong>: Click on a cluster in the &lt;strong>Clusters&lt;/strong> tab to view the cluster details, including the cluster ARN, status, and other information.&lt;/li>
&lt;li>&lt;strong>View Task Definition Details&lt;/strong>: Click on a task definition in the &lt;strong>Task Definitions&lt;/strong> tab to view the task definition details, including the task definition ARN, family, and other information.&lt;/li>
&lt;li>&lt;strong>Edit Cluster&lt;/strong>: Click on the &lt;strong>Edit Cluster&lt;/strong> button while you are viewing a cluster to edit the cluster details.&lt;/li>
&lt;li>&lt;strong>Edit Task Definition&lt;/strong>: Click on the &lt;strong>Edit Task Definition&lt;/strong> button while you are viewing a task definition to edit the task definition details.&lt;/li>
&lt;li>&lt;strong>Delete Cluster&lt;/strong>: Select the cluster name in the &lt;strong>Clusters&lt;/strong> tab and click on the &lt;strong>Actions&lt;/strong> button followed by &lt;strong>Remove Selected&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>Delete Task Definition&lt;/strong>: Select the task definition name in the &lt;strong>Task Definitions&lt;/strong> tab and click on the &lt;strong>Actions&lt;/strong> button followed by &lt;strong>Remove Selected&lt;/strong> button.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Elastic File System (EFS)</title><link>/user-guide/aws/efs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/efs/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Elastic File System (EFS) is a fully managed file storage service provided by Amazon Web Services (AWS). EFS offers scalable and shared file storage that can be accessed by multiple EC2 instances and on-premises servers simultaneously. EFS utilizes the Network File System protocol to allow it to be used as a data source for various applications and workloads.&lt;/p>
&lt;p>LocalStack allows you to use the EFS APIs in your local environment to create local file systems, lifecycle configurations, and file system policies. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_efs/">API coverage page&lt;/a>, which provides information on the extent of EFS&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
LocalStack&amp;rsquo;s EFS implementation is limited and lacks support for functionalities like creating mount targets, configuring access points, and generating tags. LocalStack uses Moto to emulate the EFS APIs, and efforts are underway to incorporate support for these features in upcoming updates.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Elastic File System and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create a file system, apply an IAM resource-based policy, and create a lifecycle configuration using the AWS CLI.&lt;/p>
&lt;h3 id="create-a-filesystem">Create a filesystem&lt;/h3>
&lt;p>To create a new, empty file system you can use the &lt;a href="https://docs.aws.amazon.com/goto/WebAPI/elasticfilesystem-2015-02-01/CreateFileSystem">&lt;code>CreateFileSystem&lt;/code>&lt;/a> API. Run the following command to create a new file system:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal efs create-file-system \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --performance-mode generalPurpose \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --throughput-mode bursting \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --encrypted \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --tags Key=Name,Value=my-file-system&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationToken&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;53465731-0032-4cef-92f5-8aefe7c7b91e&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;FileSystemId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;fs-34feac549e66b814&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;FileSystemArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:elasticfilesystem:us-east-1:000000000000:file-system/fs-34feac549e66b814&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationTime&amp;#34;&lt;/span>: 1692808338.424,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;LifeCycleState&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;available&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;PerformanceMode&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;generalPurpose&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Encrypted&amp;#34;&lt;/span>: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ThroughputMode&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;bursting&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Tags&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Key&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Value&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;my-file-system&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also describe the locally available file systems using the &lt;a href="https://docs.aws.amazon.com/efs/latest/ug/API_DescribeFileSystems.html">&lt;code>DescribeFileSystems&lt;/code>&lt;/a> API. Run the following command to describe the local file systems available:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal efs describe-file-systems&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can alternatively pass the &lt;code>--file-system-id&lt;/code> parameter to the &lt;code>describe-file-system&lt;/code> command to retrieve information about a specific file system in AWS CLI.&lt;/p>
&lt;h3 id="put-file-system-policy">Put file system policy&lt;/h3>
&lt;p>You can apply an EFS &lt;code>FileSystemPolicy&lt;/code> to an EFS file system using the &lt;a href="https://docs.aws.amazon.com/efs/latest/ug/API_PutFileSystemPolicy.html">&lt;code>PutFileSystemPolicy&lt;/code>&lt;/a> API. Run the following command to apply a policy to the file system created in the previous step:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal efs put-file-system-policy \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --file-system-id &amp;lt;FILE_SYSTEM_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --policy &amp;#34;{\&amp;#34;Version\&amp;#34;:\&amp;#34;2012-10-17\&amp;#34;,\&amp;#34;Id\&amp;#34;:\&amp;#34;ExamplePolicy01\&amp;#34;,\&amp;#34;Statement\&amp;#34;:[{\&amp;#34;Sid\&amp;#34;:\&amp;#34;ExampleSatement01\&amp;#34;,\&amp;#34;Effect\&amp;#34;:\&amp;#34;Allow\&amp;#34;,\&amp;#34;Principal\&amp;#34;:{\&amp;#34;AWS\&amp;#34;:\&amp;#34;*\&amp;#34;},\&amp;#34;Action\&amp;#34;:[\&amp;#34;elasticfilesystem:ClientMount\&amp;#34;,\&amp;#34;elasticfilesystem:ClientWrite\&amp;#34;],\&amp;#34;Resource\&amp;#34;:\&amp;#34;arn:aws:elasticfilesystem:us-east-1:000000000000:file-system/fs-34feac549e66b814\&amp;#34;}]}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can list the file system policies using the &lt;a href="https://docs.aws.amazon.com/efs/latest/ug/API_DescribeFileSystemPolicy.html">&lt;code>DescribeFileSystemPolicy&lt;/code>&lt;/a> API. Run the following command to list the file system policies:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal efs describe-file-system-policy \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --file-system-id &amp;lt;FILE_SYSTEM_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace &lt;code>&amp;lt;FILE_SYSTEM_ID&amp;gt;&lt;/code> with the ID of the file system you want to list the policies for. The output will return the &lt;code>FileSystemPolicy&lt;/code> for the specified EFS file system.&lt;/p>
&lt;h3 id="create-a-lifecycle-configuration">Create a lifecycle configuration&lt;/h3>
&lt;p>You can create a lifecycle configuration for an EFS file system using the &lt;a href="https://docs.aws.amazon.com/efs/latest/ug/API_PutLifecycleConfiguration.html">&lt;code>PutLifecycleConfiguration&lt;/code>&lt;/a> API. Run the following command to create a lifecycle configuration for the file system created in the previous step:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal efs put-lifecycle-configuration \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --file-system-id &amp;lt;FILE_SYSTEM_ID&amp;gt; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --lifecycle-policies &amp;#34;{\&amp;#34;TransitionToIA\&amp;#34;:\&amp;#34;AFTER_30_DAYS\&amp;#34;}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;LifecyclePolicies&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TransitionToIA&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;AFTER_30_DAYS&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Elastic Kubernetes Service (EKS)</title><link>/user-guide/aws/eks/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/eks/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Elastic Kubernetes Service (EKS) is a managed Kubernetes service that makes it easy to run Kubernetes on AWS without installing, operating, and maintaining your own Kubernetes control plane or worker nodes. Kubernetes is an open-source system for automating containerized applications&amp;rsquo; deployment, scaling, and management.&lt;/p>
&lt;p>LocalStack allows you to use the EKS APIs in your local environment to spin up embedded Kubernetes clusters in your local Docker engine or use an existing Kubernetes installation you can access from your local machine (defined in &lt;code>$HOME/.kube/config&lt;/code>). The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_eks/">API coverage page&lt;/a>, which provides information on the extent of EKS&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Elastic Kubernetes Service and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script. To interact with the Kubernetes cluster, you should also install &lt;a href="https://kubernetes.io/docs/tasks/tools/">&lt;code>kubectl&lt;/code>&lt;/a>.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how you can auto-install an embedded Kubernetes cluster, configure ingress, and deploy a sample service with ECR.&lt;/p>
&lt;h3 id="create-an-embedded-kubernetes-cluster">Create an embedded Kubernetes cluster&lt;/h3>
&lt;p>The default approach for creating Kubernetes clusters using the local EKS API is by setting up an embedded &lt;a href="https://k3d.io/">k3d&lt;/a> kube cluster within Docker. LocalStack seamlessly manages the download and installation process, making it hassle-free for users. In most cases, the installation is automatic, eliminating the need for any manual customizations.&lt;/p>
&lt;p>A new cluster can be created using the following command:&lt;/p>
&lt;p>You can create a new cluster using the &lt;a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_CreateCluster.html">&lt;code>CreateCluster&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks create-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name cluster1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role-arn &amp;#34;arn:aws:iam::000000000000:role/eks-role&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resources-vpc-config &amp;#34;{}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can see an output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;cluster&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;cluster1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:eks:us-east-1:000000000000:cluster/cluster1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;createdAt&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2022-04-13T16:38:24.850000+02:00&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;roleArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:role/eks-role&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;resourcesVpcConfig&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;identity&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;oidc&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;issuer&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;https://localhost.localstack.cloud/eks-oidc&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;status&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;CREATING&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;clientRequestToken&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;cbdf2bb6-fd3b-42b1-afe0-3c70980b5959&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use the &lt;code>docker&lt;/code> CLI to check that some containers have been created:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker ps
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>CONTAINER ID IMAGE COMMAND CREATED STATUS PORTS NAMES
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>b335f7f089e4 rancher/k3d-proxy:5.0.1-rc.1 &amp;#34;/bin/sh -c nginx-pr…&amp;#34; 1 minute ago Up 1 minute 0.0.0.0:8081-&amp;gt;80/tcp, 0.0.0.0:44959-&amp;gt;6443/tcp k3d-cluster1-serverlb
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>f05770ec8523 rancher/k3s:v1.21.5-k3s2 &amp;#34;/bin/k3s server --t…&amp;#34; 1 minute ago Up 1 minute
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After successfully creating and initializing the cluster, we can easily find the server endpoint, using the &lt;a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_DescribeCluster.html">&lt;code>DescribeCluster&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks describe-cluster --name cluster1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;arn&amp;#34;: &amp;#34;arn:aws:eks:us-east-1:000000000000:cluster/cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;createdAt&amp;#34;: &amp;#34;2022-04-13T17:12:39.738000+02:00&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endpoint&amp;#34;: &amp;#34;https://localhost.localstack.cloud:4511&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam::000000000000:role/eks-role&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;resourcesVpcConfig&amp;#34;: {},
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;identity&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;oidc&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;issuer&amp;#34;: &amp;#34;https://localhost.localstack.cloud/eks-oidc&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;ACTIVE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;certificateAuthority&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;data&amp;#34;: &amp;#34;...&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;clientRequestToken&amp;#34;: &amp;#34;d188f578-b353-416b-b309-5d8c76ecc4e2&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="utilizing-ecr-images-within-eks">Utilizing ECR Images within EKS&lt;/h3>
&lt;p>You can now use ECR (Elastic Container Registry) images within your EKS environment.&lt;/p>
&lt;h4 id="initial-configuration">Initial configuration&lt;/h4>
&lt;p>To modify the return value of resource URIs for most services, including ECR, you can utilize the &lt;code>LOCALSTACK_HOST&lt;/code> variable in the &lt;a href="/references/configuration/">configuration&lt;/a>.
By default, ECR returns a &lt;code>repositoryUri&lt;/code> starting with &lt;code>localhost.localstack.cloud&lt;/code>, such as: &lt;code>localhost.localstack.cloud:&amp;lt;port&amp;gt;/&amp;lt;repository-name&amp;gt;&lt;/code>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Notes&lt;/h4>
&lt;p>In this section, we assume that &lt;code>localhost.localstack.cloud&lt;/code> resolves in your environment, and LocalStack is connected to a non-default bridge network. For more information, refer to the article about &lt;a href="/user-guide/tools/dns-server/#dns-rebind-protection">DNS rebind protection&lt;/a>.&lt;/p>
&lt;p>If the domain &lt;code>localhost.localstack.cloud&lt;/code> does not resolve on your host, you can still proceed by setting &lt;code>LOCALSTACK_HOST=localhost&lt;/code> (not recommended).&lt;/p>
&lt;p>LocalStack will take care of the DNS resolution of &lt;code>localhost.localstack.cloud&lt;/code> within ECR itself, allowing you to use the &lt;code>localhost:&amp;lt;port&amp;gt;/&amp;lt;repository_name&amp;gt;&lt;/code> URI for tagging and pushing the image on your host.&lt;/p>
&lt;/div>
&lt;p>Once you have configured this correctly, you can seamlessly use your ECR image within EKS as expected.&lt;/p>
&lt;h4 id="deploying-a-sample-application-from-an-ecr-image">Deploying a sample application from an ECR image&lt;/h4>
&lt;p>To showcase this behavior, let&amp;rsquo;s go through a concise step-by-step guide that will lead us to the successful pulling of an image from local ECR. For the purpose of this guide, we will retag the &lt;code>nginx&lt;/code> image to be pushed to a local ECR repository under a different name, and then utilize it for a pod configuration.&lt;/p>
&lt;p>You can create a new ECR repository using the &lt;a href="https://docs.aws.amazon.com/AmazonECR/latest/APIReference/API_CreateRepository.html">&lt;code>CreateRepository&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal ecr create-repository --repository-name &amp;#34;fancier-nginx&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repository&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repositoryArn&amp;#34;: &amp;#34;arn:aws:ecr:us-east-1:000000000000:repository/fancier-nginx&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;registryId&amp;#34;: &amp;#34;c75fd0e2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repositoryName&amp;#34;: &amp;#34;fancier-nginx&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;repositoryUri&amp;#34;: &amp;#34;localhost.localstack.cloud:4510/fancier-nginx&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;createdAt&amp;#34;: &amp;#34;2022-04-13T14:22:47+02:00&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;imageTagMutability&amp;#34;: &amp;#34;MUTABLE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;imageScanningConfiguration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;scanOnPush&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;encryptionConfiguration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;encryptionType&amp;#34;: &amp;#34;AES256&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>When creating an ECR repository, a port from the &lt;a href="/references/external-ports/">external service port range&lt;/a> is dynamically assigned. As a result, the port can differ from the static value &lt;code>4510&lt;/code> used in the examples below.&lt;/p>
&lt;p>To ensure the correct URL and port, it&amp;rsquo;s important to use the &lt;code>repositoryUrl&lt;/code> obtained from the &lt;code>create-repository&lt;/code> request. This ensures that you have the accurate endpoint to access the repository.&lt;/p>
&lt;/div>
&lt;p>You can now pull the &lt;code>nginx&lt;/code> image from Docker Hub using the &lt;code>docker&lt;/code> CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker pull nginx&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can further tag the image to be pushed to ECR:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker tag nginx localhost.localstack.cloud:4510/fancier-nginx&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Finally, you can push the image to local ECR:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker push localhost.localstack.cloud:4510/fancier-nginx&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Now, let us set up the EKS cluster using the image pushed to local ECR.&lt;/p>
&lt;p>Next, we can configure &lt;code>kubectl&lt;/code> to use the EKS cluster, using the &lt;a href="https://docs.aws.amazon.com/eks/latest/APIReference/API_UpdateClusterConfig.html">&lt;code>UpdateKubeconfig&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks update-kubeconfig --name cluster1 &amp;amp;&amp;amp; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> kubectl config use-context arn:aws:eks:us-east-1:000000000000:cluster/cluster1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Added new context arn:aws:eks:us-east-1:000000000000:cluster/cluster1 to /home/localstack/.kube/config
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Switched to context &amp;#34;arn:aws:eks:us-east-1:000000000000:cluster/cluster1&amp;#34;.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now go ahead and add a deployment configuration for the &lt;code>fancier-nginx&lt;/code> image.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: apps/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Deployment
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> replicas: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> selector:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> matchLabels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> template:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> labels:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> containers:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> image: localhost.localstack.cloud:4510/fancier-nginx:latest
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ports:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - containerPort: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now describe the pod to see if the image was pulled successfully:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>kubectl describe pod fancier-nginx&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the events, we can see that the pull from ECR was successful:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span> Normal Pulled 10s kubelet Successfully pulled image &lt;span style="color:#4e9a06">&amp;#34;localhost.localstack.cloud:4510/fancier-nginx:latest&amp;#34;&lt;/span> in 2.412775896s
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Public Docker images from &lt;code>registry.k8s.io&lt;/code> can be pulled without additional configuration from EKS nodes, but if you pull images from any other locations that resolve to S3 you can configure &lt;code>DNS_NAME_PATTERNS_TO_RESOLVE_UPSTREAM=&amp;lt;bucket-name&amp;gt;\.s3.*\.amazonaws\.com&lt;/code> in your &lt;a href="/references/configuration/">configuration&lt;/a>.
&lt;/div>
&lt;h3 id="configuring-an-ingress-for-your-services">Configuring an Ingress for your services&lt;/h3>
&lt;p>To make an EKS service externally accessible, it is necessary to create an Ingress configuration, which exposes the service on a specific path to the load balancer.&lt;/p>
&lt;p>For our sample deployment, we can create an &lt;code>nginx&lt;/code> Kubernetes service by applying the following configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> selector:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> app: fancier-nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ports:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - name: http
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> protocol: TCP
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> targetPort: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Use the following ingress configuration to expose the &lt;code>nginx&lt;/code> service on path &lt;code>/test123&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: networking.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Ingress
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ingress.kubernetes.io/ssl-redirect: &amp;#34;false&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rules:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - http:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> paths:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - path: /test123
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pathType: Prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: nginx
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> number: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You will be able to send a request to &lt;code>nginx&lt;/code> via the load balancer port &lt;code>8081&lt;/code> from the host:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://localhost:8081/test123
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;html&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;lt;hr&amp;gt;&amp;lt;center&amp;gt;nginx/1.21.6&amp;lt;/center&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
You can customize the Load Balancer port by configuring &lt;code>EKS_LOADBALANCER_PORT&lt;/code> in your environment.
&lt;/div>
&lt;h3 id="enabling-https-with-local-ssltls-certificate-for-the-ingress">Enabling HTTPS with local SSL/TLS certificate for the Ingress&lt;/h3>
&lt;p>To enable HTTPS for your endpoints, you can configure Kubernetes to use SSL/TLS with the &lt;a href="https://github.com/localstack/localstack-artifacts/blob/master/local-certs/server.key">certificate for local domain names&lt;/a> &lt;code>*.localhost.localstack.cloud&lt;/code>.&lt;/p>
&lt;p>The local EKS cluster comes pre-configured with a secret named &lt;code>ls-secret-tls&lt;/code>, which can be conveniently utilized to define the &lt;code>tls&lt;/code> section in the ingress configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">networking.k8s.io/v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Ingress&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">test-ingress&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">annotations&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ingress.kubernetes.io/ssl-redirect&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;false&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">traefik.ingress.kubernetes.io/router.entrypoints&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">web,websecure&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">traefik.ingress.kubernetes.io/router.tls&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;true&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">tls&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">secretName&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ls-secret-tls&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hosts&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">myservice.localhost.localstack.cloud&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">...&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once you have deployed your service using the mentioned ingress configuration, it will be accessible via the HTTPS endpoint &lt;code>https://myservice.localhost.localstack.cloud&lt;/code>.&lt;/p>
&lt;p>Remember that the ingress controller does not support HTTP/HTTPS multiplexing within the same Ingress. Consequently, if you want your service to be accessible via HTTP and HTTPS, you must create two separate Ingress definitions — one Ingress for HTTP and another for HTTPS.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The &lt;code>ls-secret-tls&lt;/code> secret is created in the &lt;code>default&lt;/code> namespace. If your ingress and services are residing in a custom namespace, it is essential to copy the secret to that custom namespace to make use of it.
&lt;/div>
&lt;h2 id="use-an-existing-kubernetes-installation">Use an existing Kubernetes installation&lt;/h2>
&lt;p>You can also access the EKS API using your existing local Kubernetes installation. This can be achieved by mounting the &lt;code>$HOME/.kube/config&lt;/code> file into the LocalStack container, especially when using a &lt;code>docker-compose.yml&lt;/code> file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;${HOME}/.kube/config:/root/.kube/config&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In recent versions of Docker, you can enable Kubernetes as an embedded service running inside Docker. The picture below illustrates the Kubernetes settings in Docker for macOS (similar configurations apply for Linux/Windows). By default, the Kubernetes API is assumed to run on the local TCP port &lt;code>6443&lt;/code>.&lt;/p>
&lt;img src="kubernetes.png" alt="Kubernetes in Docker" title="Kubernetes in Docker" width="450" />
&lt;p>You can create an EKS Cluster configuration using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks create-cluster --name cluster1 --role-arn arn:aws:iam::000000000000:role/eks-role --resources-vpc-config &amp;#39;{}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;arn&amp;#34;: &amp;#34;arn:aws:eks:eu-central-1:000000000000:cluster/cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;createdAt&amp;#34;: &amp;#34;Sat, 05 Oct 2019 12:29:26 GMT&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endpoint&amp;#34;: &amp;#34;https://172.17.0.1:6443&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;ACTIVE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>And check that it was created with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks list-clusters
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;clusters&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To interact with your Kubernetes cluster, configure your Kubernetes client (such as &lt;code>kubectl&lt;/code> or other SDKs) to point to the &lt;code>endpoint&lt;/code> provided in the &lt;code>create-cluster&lt;/code> output mentioned earlier. However, depending on whether you&amp;rsquo;re calling the Kubernetes API from your local machine or from within a Lambda function, you might need to use different endpoint URLs.&lt;/p>
&lt;p>For local machine interactions, use &lt;code>https://localhost:6443&lt;/code> as the endpoint URL. If you are accessing the Kubernetes API from within a Lambda function, you should use &lt;code>https://172.17.0.1:6443&lt;/code> as the endpoint URL, assuming that &lt;code>172.17.0.1&lt;/code> is the IP address of the Docker network bridge.&lt;/p>
&lt;p>By using the appropriate endpoint URL based on your context, you can effectively communicate with your Kubernetes cluster and manage your resources as needed.&lt;/p>
&lt;h2 id="customizing-the-kubernetes-load-balancer-ports">Customizing the Kubernetes Load Balancer Ports&lt;/h2>
&lt;p>By default, the Kubernetes load balancer (LB) is exposed on port &lt;code>8081&lt;/code>. If you need to customize the port or expose the load balancer on multiple ports, you can utilize the special tag name &lt;code>_lb_ports_&lt;/code> during the cluster creation process.&lt;/p>
&lt;p>For instance, if you want to expose the load balancer on ports 8085 and 8086, you can use the following tag definition when creating the cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks create-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name cluster1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role-arn arn:aws:iam::000000000000:role/eks-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resources-vpc-config &amp;#39;{}&amp;#39; --tags &amp;#39;{&amp;#34;_lb_ports_&amp;#34;:&amp;#34;8085,8086&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="routing-traffic-to-services-on-different-endpoints">Routing Traffic to Services on Different Endpoints&lt;/h2>
&lt;p>When working with EKS, a common scenario is to access multiple Kubernetes services behind different endpoints.&lt;/p>
&lt;p>For instance, you might have multiple microservices, each following a common path versioning scheme, such as API request paths starting with &lt;code>/v1/...&lt;/code>. In such cases, path-based routing may not be ideal if you need the services to be accessible in a uniform manner.&lt;/p>
&lt;p>To address this requirement, we recommend utilizing host-based routing rules, as demonstrated in the example below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat &amp;lt;&amp;lt;EOF | kubectl apply -f -
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>apiVersion: networking.k8s.io/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>kind: Ingress
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>metadata:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: multi-services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> annotations:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ingress.kubernetes.io/ssl-redirect: &amp;#34;false&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>spec:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> rules:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - host: eks-service-1.localhost.localstack.cloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> http:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> paths:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - path: /v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pathType: Prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: service-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> number: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - host: eks-service-2.localhost.localstack.cloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> http:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> paths:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - path: /v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> pathType: Prefix
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> service:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> name: service-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> port:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> number: 80
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>EOF&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The example defines routing rules for two local endpoints - the first rule points to a service &lt;code>service-1&lt;/code> accessible under &lt;code>/v1&lt;/code>, and the second rule points to a service &lt;code>service-2&lt;/code> accessible under the same path &lt;code>/v1&lt;/code>.&lt;/p>
&lt;p>In the provided example, we define routing rules for two local endpoints. The first rule directs traffic to a service named &lt;code>service-1&lt;/code>, accessible under the path &lt;code>/v1&lt;/code>. Similarly, the second rule points to a service named &lt;code>service-2&lt;/code>, also accessible under the same path &lt;code>/v1&lt;/code>.&lt;/p>
&lt;p>This approach enables us to access the two distinct services using the same path and port number, but with different host names. This host-based routing mechanism ensures that each service is uniquely identified based on its designated host name, allowing for a uniform and organized way of accessing multiple services within the EKS cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://eks-service-1.localhost.localstack.cloud:8081/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... [output of service 1]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://eks-service-2.localhost.localstack.cloud:8081/v1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>... [output of service 2]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>It is important to note that the host names &lt;code>eks-service-1.localhost.localstack.cloud&lt;/code> and &lt;code>eks-service-2.localhost.localstack.cloud&lt;/code> both resolve to &lt;code>127.0.0.1&lt;/code> (localhost). Consequently, you can utilize them to communicate with your service endpoints and distinguish between different services within the Kubernetes load balancer.&lt;/p>
&lt;p>However, it might encounter issues in scenarios where you intend to run your Load Balancer (LB) on standard ports such as 80/443 since some of these ports may already be occupied on your local machine. For instance, by default, LocalStack allocates port 443 to expose APIs via the HTTPS endpoint (&lt;code>https://localhost.localstack.cloud&lt;/code>). Hence, it&amp;rsquo;s crucial to ensure that you expose your LB on a custom, non-standard port to prevent conflicts.&lt;/p>
&lt;p>Additionally, note that LocalStack EKS employs &lt;a href="https://doc.traefik.io/traefik/providers/kubernetes-ingress">Traefik&lt;/a> as the Kubernetes ingress controller internally.&lt;/p>
&lt;h2 id="mounting-directories-from-host-to-pod">Mounting directories from host to pod&lt;/h2>
&lt;p>If you have specific directories which you want to mount from your local dev machine into one of your pods, you can do this with two simple steps:&lt;/p>
&lt;p>If you have specific directories that you want to mount from your local development machine into one of your pods, you can achieve this in two simple steps.&lt;/p>
&lt;p>When creating your cluster, include the special tag &lt;code>_volume_mount_&lt;/code>, which allows you to define the desired volume mounting configuration from your local development machine to the cluster nodes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal eks create-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name cluster1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role-arn arn:aws:iam::000000000000:role/eks-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --resources-vpc-config &amp;#39;{}&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --tags &amp;#39;{&amp;#34;_volume_mount_&amp;#34;:&amp;#34;/path/on/host:/path/on/node&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;arn&amp;#34;: &amp;#34;arn:aws:eks:eu-central-1:000000000000:cluster/cluster1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;createdAt&amp;#34;: &amp;#34;Sat, 05 Oct 2019 12:29:26 GMT&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endpoint&amp;#34;: &amp;#34;https://172.17.0.1:6443&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;ACTIVE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;tags&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;_volume_mount_&amp;#34; : &amp;#34;/path/on/host:/path/on/node&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Notes&lt;/h4>
Note that the tag was previously referred to as &lt;code>__k3d_volume_mount__&lt;/code>, but it has now been renamed to &lt;code>_volume_mount_&lt;/code>. As a result, the tag name &lt;code>__k3d_volume_mount__&lt;/code> is considered deprecated and will be removed in an upcoming release.
&lt;/div>
&lt;p>After creating your cluster with the &lt;code>_volume_mount_&lt;/code> tag, you can create your path with volume mounts as usual. The configuration for the volume mounts can be set up similar to this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">apiVersion&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">v1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">kind&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Pod&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">metadata&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">test&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">spec&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-volume&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hostPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">path&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">/path/on/node&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">containers&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">alpine:3.12&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">command&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/bin/sh&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;-c&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">args&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">echo &amp;#34;Starting the update command&amp;#34;;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">apk update;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;Adding the openssh command&amp;#34;;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">apk add openssh;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">echo &amp;#34;openssh completed&amp;#34;;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">sleep 240m;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">imagePullPolicy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">IfNotPresent&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">alpine&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumeMounts&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">mountPath&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;/path/on/pod&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">example-volume&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">restartPolicy&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Always&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing EKS clusters.
You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resource Browser&lt;/strong> section, and then clicking on &lt;strong>EKS&lt;/strong> under the &lt;strong>Compute&lt;/strong> section.&lt;/p>
&lt;img src="eks-resource-browser.png" alt="EKS Resource Browser" title="EKS Resource Browser" width="900" />
&lt;br>
&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Cluster&lt;/strong>: Create a new EKS cluster by clicking on the &lt;strong>Create Cluster&lt;/strong> button and providing the cluster name among other details.&lt;/li>
&lt;li>&lt;strong>View Cluster Details&lt;/strong>: View the details of an existing EKS cluster by clicking on the cluster name.&lt;/li>
&lt;li>&lt;strong>Edit Cluster&lt;/strong>: Edit the configuration of an existing EKS cluster by clicking on the &lt;strong>Edit&lt;/strong> button while viewing the cluster details.&lt;/li>
&lt;li>&lt;strong>Delete Cluster&lt;/strong>: Select the cluster name and click on the &lt;strong>Actions&lt;/strong> button followed by &lt;strong>Remove Selected&lt;/strong> button.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Elastic Load Balancing (ELB)</title><link>/user-guide/aws/elb/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elb/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Elastic Load Balancing (ELB) is a service that allows users to distribute incoming traffic across multiple targets, such as EC2 instances, containers, IP addresses, and lambda functions and automatically scales its request handling capacity in response to incoming traffic. It also monitors the health of its registered targets and ensures that it routes traffic only to healthy targets. You can check &lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/userguide/what-is-load-balancing.html">the official AWS documentation&lt;/a> to understand the basic terms and concepts used in the ELB.&lt;/p>
&lt;p>Localstack allows you to use the Elastic Load Balancing APIs in your local environment to create, edit, and view load balancers, target groups, listeners, and rules. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_elbv2/">API coverage page&lt;/a>, which provides information on the extent of ELB&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Elastic Load Balancing and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create an Application Load Balancer, along with its target group, listener, and rule, and forward requests to an IP target.&lt;/p>
&lt;h3 id="start-a-target-server">Start a target server&lt;/h3>
&lt;p>Launch an HTTP server which will serve as the target for our load balancer.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker run --rm -itd -p 5678:80 ealen/echo-server&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-a-load-balancer">Create a load balancer&lt;/h3>
&lt;p>To specify the subnet and VPC in which the load balancer will be created, you can use the &lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_DescribeSubnets.html">&lt;code>DescribeSubnets&lt;/code>&lt;/a> API to retrieve the subnet ID and VPC ID. In this example, we will use the subnet and VPC in the &lt;code>us-east-1f&lt;/code> availability zone.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>subnet_info=$(awslocal ec2 describe-subnets --filters Name=availability-zone,Values=us-east-1f \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | jq -r &amp;#39;.Subnets[] | select(.AvailabilityZone == &amp;#34;us-east-1f&amp;#34;) | {SubnetId: .SubnetId, VpcId: .VpcId}&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>subnet_id=$(echo $subnet_info | jq -r &amp;#39;.SubnetId&amp;#39;)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>vpc_id=$(echo $subnet_info | jq -r &amp;#39;.VpcId&amp;#39;)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To create a load balancer, you can use the &lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateLoadBalancer.html">&lt;code>CreateLoadBalancer&lt;/code>&lt;/a> API. The following command creates an Application Load Balancer named &lt;code>example-lb&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>loadBalancer=$(awslocal elbv2 create-load-balancer --name example-lb \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --subnets $subnet_id | jq -r &amp;#39;.LoadBalancers[]|.LoadBalancerArn&amp;#39;)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-a-target-group">Create a target group&lt;/h3>
&lt;p>To create a target group, you can use the &lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateTargetGroup.html">&lt;code>CreateTargetGroup&lt;/code>&lt;/a> API. The following command creates a target group named &lt;code>example-target-group&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>targetGroup=$(awslocal elbv2 create-target-group --name example-target-group \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --protocol HTTP --target-type ip --port 80 --vpc-id $vpc_id \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | jq -r &amp;#39;.TargetGroups[].TargetGroupArn&amp;#39;)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="register-a-target">Register a target&lt;/h3>
&lt;p>To register a target, you can use the &lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_RegisterTargets.html">&lt;code>RegisterTargets&lt;/code>&lt;/a> API. The following command registers the target with the target group created in the previous step:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elbv2 register-targets --targets Id=127.0.0.1,Port=5678,AvailabilityZone=all \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --target-group-arn $targetGroup&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Note that in some cases the &lt;code>targets&lt;/code> parameter &lt;code>Id&lt;/code> can be the &lt;code>Gateway&lt;/code> address of the docker container. You can find the gateway address by running &lt;code>docker inspect &amp;lt;container_id&amp;gt;&lt;/code>.
&lt;/div>
&lt;h3 id="create-a-listener-and-a-rule">Create a listener and a rule&lt;/h3>
&lt;p>We create a for the load balancer using the &lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateListener.html">&lt;code>CreateListener&lt;/code>&lt;/a> API. The following command creates a listener for the load balancer created in the previous step:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>listenerArn=$(awslocal elbv2 create-listener \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --default-actions &amp;#39;{&amp;#34;Type&amp;#34;:&amp;#34;forward&amp;#34;,&amp;#34;TargetGroupArn&amp;#34;:&amp;#34;&amp;#39;$targetGroup&amp;#39;&amp;#34;,&amp;#34;ForwardConfig&amp;#34;:{&amp;#34;TargetGroups&amp;#34;:[{&amp;#34;TargetGroupArn&amp;#34;:&amp;#34;&amp;#39;$targetGroup&amp;#39;&amp;#34;,&amp;#34;Weight&amp;#34;:11}]}}&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --load-balancer-arn $loadBalancer | jq -r &amp;#39;.Listeners[]|.ListenerArn&amp;#39;)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To create a rule for the listener, you can use the &lt;a href="https://docs.aws.amazon.com/elasticloadbalancing/latest/APIReference/API_CreateRule.html">&lt;code>CreateRule&lt;/code>&lt;/a> API. The following command creates a rule for the listener created above:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>listenerRule=$(awslocal elbv2 create-rule \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --conditions Field=path-pattern,Values=/ \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --priority 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --actions &amp;#39;{&amp;#34;Type&amp;#34;:&amp;#34;forward&amp;#34;,&amp;#34;TargetGroupArn&amp;#34;:&amp;#34;&amp;#39;$targetGroup&amp;#39;&amp;#34;,&amp;#34;ForwardConfig&amp;#34;:{&amp;#34;TargetGroups&amp;#34;:[{&amp;#34;TargetGroupArn&amp;#34;:&amp;#34;&amp;#39;$targetGroup&amp;#39;&amp;#34;,&amp;#34;Weight&amp;#34;:11}]}}&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --listener-arn $listenerArn \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | jq -r &amp;#39;.Rules[].RuleArn&amp;#39;)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="send-a-request-to-the-load-balancer">Send a request to the load balancer&lt;/h3>
&lt;p>Finally, you can issue an HTTP request to the &lt;code>DNSName&lt;/code> parameter of &lt;code>CreateLoadBalancer&lt;/code> operation, and &lt;code>Port&lt;/code> parameter of &lt;code>CreateListener&lt;/code> command with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl example-lb.elb.localhost.localstack.cloud:4566&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output will be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;host&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;hostname&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;example-lb.elb.localhost.localstack.cloud&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ip&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;::ffff:172.17.0.1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ips&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;http&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;method&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;GET&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;baseUrl&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;originalUrl&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;protocol&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;http&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;request&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;params&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;0&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;query&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;cookies&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;body&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;headers&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;accept-encoding&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;identity&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;host&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;example-lb.elb.localhost.localstack.cloud:4566&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;user-agent&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;curl/7.88.1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;accept&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;*/*&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;environment&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;PATH&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;HOSTNAME&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;bee08b83d633&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TERM&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;xterm&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;NODE_VERSION&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;18.17.1&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;YARN_VERSION&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;1.22.19&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;HOME&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/root&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use ELB in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.localstack.cloud/tutorials/elb-load-balancing/">Setting up Elastic Load Balancing (ELB) Application Load Balancers using LocalStack, deployed via the Serverless framework&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;ul>
&lt;li>The Application Load Balancer currently supports only the &lt;code>forward&lt;/code> and &lt;code>redirect&lt;/code> action types.&lt;/li>
&lt;li>When opting for Route53 CNAMEs to direct requests towards the ALBs, it&amp;rsquo;s important to remember that explicit configuration of the &lt;code>Host&lt;/code> header to match the resource record might be necessary while making calls.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Elastic MapReduce (EMR)</title><link>/user-guide/aws/emr/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/emr/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Amazon Elastic MapReduce (EMR) is a fully managed big data processing service that allows developers to effortlessly create, deploy, and manage big data applications. EMR supports various big data processing frameworks, including Hadoop MapReduce, Apache Spark, Apache Hive, and Apache Pig. Developers can leverage these frameworks and their rich ecosystem of tools and libraries to perform complex data transformations, machine learning tasks, and real-time data processing.&lt;/p>
&lt;p>LocalStack Pro supports EMR and allows developers to run data analytics workloads locally. EMR utilizes various tools in the &lt;a href="https://hadoop.apache.org/">Hadoop&lt;/a> and &lt;a href="https://spark.apache.org">Spark&lt;/a> ecosystem, and your EMR instance is automatically configured to connect seamlessly to LocalStack&amp;rsquo;s S3 API. LocalStack also supports EMR Serverless to create applications and job runs, to run your Spark/PySpark jobs locally.&lt;/p>
&lt;p>The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_emr/">API coverage page&lt;/a>, which provides information on the extent of EMR&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
To utilize the EMR API, certain additional dependencies need to be downloaded from the network (including Hadoop, Hive, Spark, etc). These dependencies are fetched automatically during service startup, hence it is important to ensure a reliable internet connection when retrieving the dependencies for the first time. Alternatively, you can use one of our &lt;code>*-bigdata&lt;/code> Docker image tags which already ship with the required libraries baked in and may provide better stability (see &lt;a href="https://docs.localstack.cloud/user-guide/ci/#ci-images">here&lt;/a> for more details).
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to EMR and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will create a virtual EMR cluster using the AWS CLI. To create an EMR cluster, run the following command:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal emr create-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --release-label emr-5.9.0 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --instance-groups InstanceGroupType=MASTER,InstanceCount=1,InstanceType=m4.large InstanceGroupType=CORE,InstanceCount=1,InstanceType=m4.large&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
You will see a response similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ClusterId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;j-A2KF3EKLAOWRI&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also specify startup commands using the &lt;code>--steps=...&lt;/code> command line argument to the &lt;code>CreateCluster&lt;/code> API.&lt;/p>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use EMR in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/sample-archive/emr-hadoop-spark-jobs">Running data analytics jobs using EMR&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/emr-serverless-sample">Running EMR Serverless Jobs with Java&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Elastic Transcoder</title><link>/user-guide/aws/elastictranscoder/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elastictranscoder/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Elastic Transcoder is a managed service that facilitates the transcoding of multimedia files into various formats to ensure compatibility across devices. Elastic Transcoder manages the underlying resources, ensuring high availability and fault tolerance. It also supports a wide range of input and output formats, enabling users to efficiently process and deliver video content at scale.&lt;/p>
&lt;p>LocalStack allows you to mock the Elastic Transcoder APIs in your local environment. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_elastictranscoder/">API coverage page&lt;/a>, which provides information on the extent of Elastic Transcoder&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Elastic Transcoder and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create an Elastic Transcoder pipeline, read the pipeline, and list all pipelines using the AWS CLI.&lt;/p>
&lt;h3 id="create-s3-buckets">Create S3 buckets&lt;/h3>
&lt;p>You can create S3 buckets using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3/mb.html">&lt;code>mb&lt;/code>&lt;/a> API. Execute the following command to create two buckets named &lt;code>elasticbucket&lt;/code> and &lt;code>outputbucket&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://elasticbucket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://outputbucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-an-elastic-transcoder-pipeline">Create an Elastic Transcoder pipeline&lt;/h3>
&lt;p>You can create an Elastic Transcoder pipeline using the &lt;a href="https://docs.aws.amazon.com/elastictranscoder/latest/developerguide/create-pipeline.html">&lt;code>CreatePipeline&lt;/code>&lt;/a> API. Execute the following command to create a pipeline named &lt;code>test-pipeline&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elastictranscoder create-pipeline \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name Default \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --input-bucket elasticbucket \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --output-bucket outputbucket \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::000000000000:role/Elastic_Transcoder_Default_Role&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Pipeline&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Id&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;0998507242379-vltecz&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:elastictranscoder:us-east-1:000000000000:pipeline/0998507242379-vltecz&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Status&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Active&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;InputBucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;elasticbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;OutputBucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;outputbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Role&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:role/Elastic_Transcoder_Default_Role&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Notifications&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Progressing&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Completed&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Warning&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Error&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ContentConfig&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Bucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;outputbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Permissions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ThumbnailConfig&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Bucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;outputbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Permissions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Warnings&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="list-the-pipelines">List the pipelines&lt;/h3>
&lt;p>You can list all pipelines using the &lt;a href="https://docs.aws.amazon.com/elastictranscoder/latest/developerguide/list-pipelines.html">&lt;code>ListPipelines&lt;/code>&lt;/a> API. Execute the following command to list all pipelines:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elastictranscoder list-pipelines&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Pipelines&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Id&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;0998507242379-vltecz&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:elastictranscoder:us-east-1:000000000000:pipeline/0998507242379-vltecz&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Status&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Active&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;InputBucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;elasticbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;OutputBucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;outputbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Role&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:role/Elastic_Transcoder_Default_Role&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Notifications&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Progressing&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Completed&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Warning&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Error&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ContentConfig&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Bucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;outputbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Permissions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ThumbnailConfig&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Bucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;outputbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Permissions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="read-the-pipeline">Read the pipeline&lt;/h3>
&lt;p>You can read a pipeline using the &lt;a href="https://docs.aws.amazon.com/elastictranscoder/latest/developerguide/read-pipeline.html">&lt;code>ReadPipeline&lt;/code>&lt;/a> API. Execute the following command to read the pipeline with the ID &lt;code>0998507242379-vltecz&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elastictranscoder read-pipeline --id 0998507242379-vltecz&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Pipeline&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Id&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;0998507242379-vltecz&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:elastictranscoder:us-east-1:000000000000:pipeline/0998507242379-vltecz&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Default&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Status&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Active&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;InputBucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;elasticbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;OutputBucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;outputbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Role&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:role/Elastic_Transcoder_Default_Role&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Notifications&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Progressing&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Completed&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Warning&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Error&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ContentConfig&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Bucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;outputbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Permissions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ThumbnailConfig&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Bucket&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;outputbucket&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Permissions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: ElastiCache</title><link>/user-guide/aws/elasticache/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/elasticache/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Amazon ElastiCache is a managed in-memory caching service provided by Amazon Web Services (AWS).
It facilitates the deployment and operation of in-memory caches within the AWS cloud environment.
ElastiCache is designed to improve application performance and scalability by alleviating the workload on backend databases.
It supports popular open-source caching engines like Redis and Memcached (LocalStack currently supports Redis),
providing a means to efficiently store and retrieve frequently accessed data with minimal latency.&lt;/p>
&lt;p>LocalStack supports ElastiCache via the Pro offering, allowing you to use the ElastiCache APIs in your local environment.
The supported APIs are available on our API Coverage Page,
which provides information on the extent of ElastiCache integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to ElastiCache and assumes basic knowledge of the AWS CLI and our &lt;code>awslocal&lt;/code> wrapper script.&lt;/p>
&lt;h3 id="single-cache-cluster">Single cache cluster&lt;/h3>
&lt;p>After starting LocalStack Pro, you can create a cluster with the following command.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticache create-cache-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cache-cluster-id my-redis-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cache-node-type cache.t2.micro \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --engine redis \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --num-cache-nodes 1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Wait for it to be available, then you can use the cluster endpoint for Redis operations.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticache describe-cache-clusters --show-cache-node-info --query &amp;#34;CacheClusters[0].CacheNodes[0].Endpoint&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Address&amp;#34;: &amp;#34;localhost.localstack.cloud&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Port&amp;#34;: 4510
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The cache cluster uses a random port of the &lt;a href="/references/external-ports/">external service port range&lt;/a>.
Use this port number to connect to the Redis instance like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>redis-cli -p 4510 ping
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>PONG
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>redis-cli -p 4510 set foo bar
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>OK
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>redis-cli -p 4510 get foo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;#34;bar&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="replication-groups-in-non-cluster-mode">Replication groups in non-cluster mode&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticache create-replication-group \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --replication-group-id my-redis-replication-group \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --replication-group-description &amp;#39;my replication group&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --engine redis \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cache-node-type cache.t2.micro \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --num-cache-clusters 3&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Wait for it to be available. When running the following command, you should see one node group when running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticache describe-replication-groups --replication-group-id my-redis-replication-group&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To retrieve the primary endpoint:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticache describe-replication-groups --replication-group-id my-redis-replication-group \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --query &amp;#34;ReplicationGroups[0].NodeGroups[0].PrimaryEndpoint&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="replication-groups-in-cluster-mode">Replication groups in cluster mode&lt;/h3>
&lt;p>The cluster mode is enabled by using &lt;code>--num-node-groups&lt;/code> and &lt;code>--replicas-per-node-group&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticache create-replication-group \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --engine redis \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --replication-group-id my-clustered-redis-replication-group \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --replication-group-description &amp;#39;my clustered replication group&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cache-node-type cache.t2.micro \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --num-node-groups 2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --replicas-per-node-group 2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Note that the group nodes do not have a primary endpoint. Instead they have a &lt;code>ConfigurationEndpoint&lt;/code>, which you can connect to using &lt;code>redis-cli -c&lt;/code> where &lt;code>-c&lt;/code> is for cluster mode.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal elasticache describe-replication-groups --replication-group-id my-clustered-redis-replication-group \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --query &amp;#34;ReplicationGroups[0].ConfigurationEndpoint&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="container-mode">Container mode&lt;/h2>
&lt;p>In order to start Redis clusters of a specific version, you need to use the container mode for Redis-based services.
This instructs LocalStack to start Redis instances in a separate container using the specified image tag.
Another reason you might want to use the container mode is to check the logs of every Redis instance separately.&lt;/p>
&lt;p>To do this, you can set the &lt;code>REDIS_CONTAINER_MODE&lt;/code> configuration variable to &lt;code>1&lt;/code>.&lt;/p>
&lt;h2 id="resource-browser">Resource browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing ElastiCache resources.
You can access the Resource Browser by opening the LocalStack Web Application in your browser and navigating to the Resources section, then clicking on ElastiCache.&lt;/p>
&lt;p>In the ElastiCache resource browser you can:&lt;/p>
&lt;ul>
&lt;li>List and remove existing cache clusters
&lt;img src="/user-guide/aws/elasticache/elasticache-resource-browser-list.png"
alt="Create a ElastiCache cluster in the resource browser"/> &lt;/li>
&lt;li>View details of cache clusters
&lt;img src="/user-guide/aws/elasticache/elasticache-resource-browser-show.png"
alt="Create a ElastiCache cluster in the resource browser"/> &lt;/li>
&lt;li>Create new cache clusters
&lt;img src="/user-guide/aws/elasticache/elasticache-resource-browser-create.png"
alt="Create a ElastiCache cluster in the resource browser"/> &lt;/li>
&lt;/ul>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;p>LocalStack currently supports Redis single-node and cluster mode, but not memcached.
Moreover, LocalStack emulation support for ElastiCache is mostly centered around starting/stopping Redis servers.&lt;/p>
&lt;p>Resources necessary to operate a cluster, like parameter groups, security groups, subnets groups, etc. are mocked, but have no effect on the functioning of the Redis servers.&lt;/p>
&lt;p>LocalStack currently doesn&amp;rsquo;t support ElastiCache snapshots, failovers, users/passwords, service updates, replication scaling, SSL, migrations, service integration (like CloudWatch/Kinesis log delivery, SNS notifications) or tests.&lt;/p>
&lt;p>You can find a detailed list of covered API methods on the &lt;a href="/references/coverage/coverage_elasticache/">ElastiCache coverage page&lt;/a>.&lt;/p></description></item><item><title>User-Guide: Elasticsearch Service</title><link>/user-guide/aws/es/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/es/</guid><description>
&lt;p>The Elasticsearch Service in LocalStack lets you create one or more single-node Elasticsearch/OpenSearch cluster that behaves like the &lt;a href="https://aws.amazon.com/opensearch-service/the-elk-stack/what-is-elasticsearch/">Amazon Elasticsearch Service&lt;/a>.
This service is, like its AWS counterpart, heavily linked with the &lt;a href="../opensearch">OpenSearch Service&lt;/a>.
Any cluster created with the Elasticsearch Service will show up in the OpenSearch Service and vice versa.&lt;/p>
&lt;h2 id="creating-an-elasticsearch-cluster">Creating an Elasticsearch cluster&lt;/h2>
&lt;p>You can go ahead and use &lt;a href="/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal">awslocal&lt;/a> to create a new elasticsearch domain via the &lt;code>aws es create-elasticsearch-domain&lt;/code> command.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Unless you use the Elasticsearch default version, the first time you create a cluster with a specific version, the Elasticsearch binary is downloaded, which may take a while to download.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The default Elasticsearch version used is 7.10.0. This is a slight deviation from the default version used in AWS (Elasticsearch 1.5), which is not supported in LocalStack.
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es create-elasticsearch-domain --domain-name my-domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainStatus&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainId&amp;#34;: &amp;#34;000000000000/my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainName&amp;#34;: &amp;#34;my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ARN&amp;#34;: &amp;#34;arn:aws:es:us-east-1:000000000000:domain/my-domain&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Created&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Deleted&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Endpoint&amp;#34;: &amp;#34;my-domain.us-east-1.es.localhost.localstack.cloud:4566&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Processing&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ElasticsearchVersion&amp;#34;: &amp;#34;7.10.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ElasticsearchClusterConfig&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceType&amp;#34;: &amp;#34;m3.medium.elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceCount&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ZoneAwarenessEnabled&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterType&amp;#34;: &amp;#34;m3.medium.elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterCount&amp;#34;: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeType&amp;#34;: &amp;#34;gp2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeSize&amp;#34;: 10,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Iops&amp;#34;: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CognitoOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the LocalStack log you will see something like the following, where you can see the cluster starting up in the background.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:28:INFO:localstack.services.es.cluster: starting elasticsearch: /opt/code/localstack/localstack/localstack/infra/elasticsearch/bin/elasticsearch -E http.port=57705 -E http.publish_port=57705 -E transport.port=0 -E network.host=127.0.0.1 -E http.compression=false -E path.data=&amp;#34;/var/lib/localstack/lib//elasticsearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/data&amp;#34; -E path.repo=&amp;#34;/var/lib/localstack/lib//elasticsearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/backup&amp;#34; -E xpack.ml.enabled=false with env {&amp;#39;ES_JAVA_OPTS&amp;#39;: &amp;#39;-Xms200m -Xmx600m&amp;#39;, &amp;#39;ES_TMPDIR&amp;#39;: &amp;#39;/var/lib/localstack/lib//elasticsearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/tmp&amp;#39;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:28:INFO:localstack.services.es.cluster: registering an endpoint proxy for http://my-domain.us-east-1.es.localhost.localstack.cloud:4566 =&amp;gt; http://127.0.0.1:57705
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:30:INFO:localstack.services.es.cluster: OpenJDK 64-Bit Server VM warning: Option UseConcMarkSweepGC was deprecated in version 9.0 and will likely be removed in a future release.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:32:INFO:localstack.services.es.cluster: [2021-11-08T16:29:32,502][INFO ][o.e.n.Node ] [noctua] version[7.10.0], pid[22403], build[default/tar/51e9d6f22758d0374a0f3f5c6e8f3a7997850f96/2020-11-09T21:30:33.964949Z], OS[Linux/5.4.0-89-generic/amd64], JVM[Ubuntu/OpenJDK 64-Bit Server VM/11.0.11/11.0.11+9-Ubuntu-0ubuntu2.20.04]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:32:INFO:localstack.services.es.cluster: [2021-11-08T16:29:32,510][INFO ][o.e.n.Node ] [noctua] JVM home [/usr/lib/jvm/java-11-openjdk-amd64], using bundled JDK [false]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:32:INFO:localstack.services.es.cluster: [2021-11-08T16:29:32,511][INFO ][o.e.n.Node ] [noctua] JVM arguments [-Xshare:auto, -Des.networkaddress.cache.ttl=60, -Des.networkaddress.cache.negative.ttl=10, -XX:+AlwaysPreTouch, -Xss1m, -Djava.awt.headless=true, -Dfile.encoding=UTF-8, -Djna.nosys=true, -XX:-OmitStackTraceInFastThrow, -Dio.netty.noUnsafe=true, -Dio.netty.noKeySetOptimization=true, -Dio.netty.recycler.maxCapacityPerThread=0, -Dio.netty.allocator.numDirectArenas=0, -Dlog4j.shutdownHookEnabled=false, -Dlog4j2.disable.jmx=true, -Djava.locale.providers=SPI,COMPAT, -XX:+UseConcMarkSweepGC, -XX:CMSInitiatingOccupancyFraction=75, -XX:+UseCMSInitiatingOccupancyOnly, -Djava.io.tmpdir=/var/lib/localstack/lib//elasticsearch/arn:aws:es:us-east-1:000000000000:domain/my-domain/tmp, -XX:+HeapDumpOnOutOfMemoryError, -XX:HeapDumpPath=data, -XX:ErrorFile=logs/hs_err_pid%p.log, -Xlog:gc*,gc+age=trace,safepoint:file=logs/gc.log:utctime,pid,tags:filecount=32,filesize=64m, -Xms200m, -Xmx600m, -XX:MaxDirectMemorySize=314572800, -Des.path.home=/opt/code/localstack/localstack/localstack/infra/elasticsearch, -Des.path.conf=/opt/code/localstack/localstack/localstack/infra/elasticsearch/config, -Des.distribution.flavor=default, -Des.distribution.type=tar, -Des.bundled_jdk=true]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:36:INFO:localstack.services.es.cluster: [2021-11-08T16:29:36,258][INFO ][o.e.p.PluginsService ] [noctua] loaded module [aggs-matrix-stats]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:36:INFO:localstack.services.es.cluster: [2021-11-08T16:29:36,259][INFO ][o.e.p.PluginsService ] [noctua] loaded module [analysis-common]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2021-11-08T16:29:36:INFO:localstack.services.es.cluster: [2021-11-08T16:29:36,260][INFO ][o.e.p.PluginsService ] [noctua] loaded module [constant-keyword]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>and after some time, you should see that the &lt;code>Processing&lt;/code> state of the domain is set to &lt;code>false&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es describe-elasticsearch-domain --domain-name my-domain | jq &amp;#34;.DomainStatus.Processing&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>false&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="interact-with-the-cluster">Interact with the cluster&lt;/h2>
&lt;p>You can now interact with the cluster at the cluster API endpoint for the domain,
in this case &lt;code>http://my-domain.us-east-1.es.localhost.localstack.cloud:4566&lt;/code>.&lt;/p>
&lt;p>For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://my-domain.us-east-1.es.localhost.localstack.cloud:4566
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34; : &amp;#34;localstack&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster_name&amp;#34; : &amp;#34;elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster_uuid&amp;#34; : &amp;#34;IC7E9daNSiepRBB9Ksul7w&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;version&amp;#34; : {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number&amp;#34; : &amp;#34;7.10.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_flavor&amp;#34; : &amp;#34;default&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_type&amp;#34; : &amp;#34;tar&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_hash&amp;#34; : &amp;#34;51e9d6f22758d0374a0f3f5c6e8f3a7997850f96&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_date&amp;#34; : &amp;#34;2020-11-09T21:30:33.964949Z&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;build_snapshot&amp;#34; : false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;lucene_version&amp;#34; : &amp;#34;8.7.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;minimum_wire_compatibility_version&amp;#34; : &amp;#34;6.8.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;minimum_index_compatibility_version&amp;#34; : &amp;#34;6.0.0-beta1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;tagline&amp;#34; : &amp;#34;You Know, for Search&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Or the health endpoint:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -s http://my-domain.us-east-1.es.localhost.localstack.cloud:4566/_cluster/health | jq .
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;cluster_name&amp;#34;: &amp;#34;elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;green&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;timed_out&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_nodes&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_data_nodes&amp;#34;: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;active_primary_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;active_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;relocating_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;initializing_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;unassigned_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;delayed_unassigned_shards&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_pending_tasks&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;number_of_in_flight_fetch&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;task_max_waiting_in_queue_millis&amp;#34;: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;active_shards_percent_as_number&amp;#34;: 100
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="advanced-topics">Advanced topics&lt;/h2>
&lt;h3 id="endpoints">Endpoints&lt;/h3>
&lt;p>There are three configurable strategies that govern how domain endpoints are created, and can be configured via the &lt;code>OPENSEARCH_ENDPOINT_STRATEGY&lt;/code> (previously &lt;code>ES_ENDPOINT_STRATEGY&lt;/code>) environment variable.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Value&lt;/th>
&lt;th>Format&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>domain&lt;/code>&lt;/td>
&lt;td>&lt;code>&amp;lt;domain-name&amp;gt;.&amp;lt;region&amp;gt;.es.localhost.localstack.cloud:4566&lt;/code>&lt;/td>
&lt;td>This is the default strategy that uses the &lt;code>localhost.localstack.cloud&lt;/code> domain to route to your localhost&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>path&lt;/code>&lt;/td>
&lt;td>&lt;code>localhost:4566/es/&amp;lt;region&amp;gt;/&amp;lt;domain-name&amp;gt;&lt;/code>&lt;/td>
&lt;td>An alternative that can be useful if you cannot resolve LocalStack&amp;rsquo;s localhost domain&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>port&lt;/code>&lt;/td>
&lt;td>&lt;code>localhost:&amp;lt;port-from-range&amp;gt;&lt;/code>&lt;/td>
&lt;td>Exposes the cluster(s) directly with ports from the &lt;a href="/references/external-ports/">external service port range&lt;/a>&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>off&lt;/code>&lt;/td>
&lt;td>&lt;/td>
&lt;td>&lt;em>Deprecated&lt;/em>. This value now reverts to the &lt;code>port&lt;/code> setting, using a port from the given range instead of &lt;code>4571&lt;/code>&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>Regardless of the service from which the clusters were created, the domain of the cluster always corresponds to the engine type (OpenSearch or Elasticsearch) of the cluster.
OpenSearch cluster therefore have &lt;code>opensearch&lt;/code> in their domain (e.g. &lt;code>my-domain.us-east-1.opensearch.localhost.localstack.cloud:4566&lt;/code>) and Elasticsearch clusters have &lt;code>es&lt;/code> in their domain (e.g. &lt;code>my-domain.us-east-1.es.localhost.localstack.cloud:4566&lt;/code>)&lt;/p>
&lt;h4 id="custom-endpoints">Custom Endpoints&lt;/h4>
&lt;p>LocalStack allows you to set arbitrary custom endpoints for your clusters in the domain endpoint options.
This can be used to overwrite the behavior of the endpoint strategies described above.
You can also choose custom domains, however it is important to add the edge port (&lt;code>80&lt;/code>/&lt;code>443&lt;/code> or by default &lt;code>4566&lt;/code>).&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es create-elasticsearch-domain --domain-name my-domain \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --elasticsearch-version 7.10 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --domain-endpoint-options &amp;#39;{ &amp;#34;CustomEndpoint&amp;#34;: &amp;#34;http://localhost:4566/my-custom-endpoint&amp;#34;, &amp;#34;CustomEndpointEnabled&amp;#34;: true }&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the domain processing is complete, you can access the cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl http://localhost:4566/my-custom-endpoint/_cluster/health&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="re-using-a-single-cluster-instance">Re-using a single cluster instance&lt;/h3>
&lt;p>In some cases, you may not want to create a new cluster instance for each domain,
for example when you are only interested in testing API interactions instead of actual Elasticsearch functionality.
In this case, you can set &lt;code>OPENSEARCH_MULTI_CLUSTER=0&lt;/code> (previously &lt;code>ES_MULTI_CLUSTER&lt;/code>).
This will multiplex all domains to the same cluster, or return the same port every time when using the &lt;code>port&lt;/code> endpoint strategy.
This can however lead to unexpected behavior when persisting data into Elasticsearch, or creating clusters with different versions, so we do not recommend it.&lt;/p>
&lt;h3 id="storage-layout">Storage Layout&lt;/h3>
&lt;p>Elasticsearch will be organized in your state directory as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-plaintext" data-lang="plaintext">&lt;span style="display:flex;">&lt;span>localstack@machine % tree -L 4 volume/state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>├── elasticsearch
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ └── arn:aws:es:us-east-1:000000000000:domain
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── my-cluster-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── tmp
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ ├── my-cluster-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── backup
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ ├── data
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ │ └── tmp
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="advanced-security-options">Advanced Security Options&lt;/h3>
&lt;p>Since LocalStack 1.4.0, the OpenSearch and ElasticSearch services support &amp;ldquo;Advanced Security Options&amp;rdquo;.
This feature is currently only supported for OpenSearch domains (which can also be created by the elasticsearch service).
More info can be found on &lt;a href="../opensearch#advanced-security-options">the OpenSearch Service docs page&lt;/a>.&lt;/p>
&lt;h2 id="custom-elasticsearch-backends">Custom Elasticsearch backends&lt;/h2>
&lt;p>LocalStack downloads elasticsearch asynchronously the first time you run the &lt;code>aws es create-elasticsearch-domain&lt;/code>, so you will get the response from localstack first and then (after download/install) you will have your elasticsearch cluster running locally.
You may not want this, and instead use your already running elasticsearch cluster.
This can also be useful when you want to run a cluster with a custom configuration that localstack does not support.&lt;/p>
&lt;p>To customize the elasticsearch backend, you can your own elasticsearch cluster locally and point localstack to it using the &lt;code>OPENSEARCH_CUSTOM_BACKEND&lt;/code> (previously &lt;code>ES_CUSTOM_BACKEND&lt;/code>) environment variable.
Note that only a single backend can be configured, meaning that you will get a similar behavior as when you &lt;a href="#re-using-a-single-cluster-instance">re-use a single cluster instance&lt;/a>.&lt;/p>
&lt;h3 id="example">Example&lt;/h3>
&lt;p>The following shows a sample docker-compose file that contains a single-noded elasticsearch cluster and a basic localstack setp.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;3.9&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">services&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">elasticsearch&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">container_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">elasticsearch&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">docker.elastic.co/elasticsearch/elasticsearch:7.10.2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">node.name=elasticsearch&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">cluster.name=es-docker-cluster&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">discovery.type=single-node&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">bootstrap.memory_lock=true&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;ES_JAVA_OPTS=-Xms512m -Xmx512m&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;9200:9200&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ulimits&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">memlock&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">soft&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">hard&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>-&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">data01:/usr/share/elasticsearch/data&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">container_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;${LOCALSTACK_DOCKER_NAME:-localstack-main}&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack/localstack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;4566:4566&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">depends_on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">elasticsearch&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">ES_CUSTOM_BACKEND=http://elasticsearch:9200&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">DEBUG=${DEBUG:-0}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;/var/run/docker.sock:/var/run/docker.sock&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">data01&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">driver&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">local&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol>
&lt;li>
&lt;p>Run docker compose:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker-compose up -d&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create the Elasticsearch domain:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es create-elasticsearch-domain \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --domain-name mylogs-2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --elasticsearch-version 7.10 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --elasticsearch-cluster-config &amp;#39;{ &amp;#34;InstanceType&amp;#34;: &amp;#34;m3.xlarge.elasticsearch&amp;#34;, &amp;#34;InstanceCount&amp;#34;: 4, &amp;#34;DedicatedMasterEnabled&amp;#34;: true, &amp;#34;ZoneAwarenessEnabled&amp;#34;: true, &amp;#34;DedicatedMasterType&amp;#34;: &amp;#34;m3.xlarge.elasticsearch&amp;#34;, &amp;#34;DedicatedMasterCount&amp;#34;: 3}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainStatus&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainId&amp;#34;: &amp;#34;000000000000/mylogs-2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DomainName&amp;#34;: &amp;#34;mylogs-2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ARN&amp;#34;: &amp;#34;arn:aws:es:us-east-1:000000000000:domain/mylogs-2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Created&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Deleted&amp;#34;: false,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Endpoint&amp;#34;: &amp;#34;mylogs-2.us-east-1.es.localhost.localstack.cloud:4566&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Processing&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ElasticsearchVersion&amp;#34;: &amp;#34;7.10&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ElasticsearchClusterConfig&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceType&amp;#34;: &amp;#34;m3.xlarge.elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceCount&amp;#34;: 4,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ZoneAwarenessEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterType&amp;#34;: &amp;#34;m3.xlarge.elasticsearch&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DedicatedMasterCount&amp;#34;: 3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EBSEnabled&amp;#34;: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeType&amp;#34;: &amp;#34;gp2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VolumeSize&amp;#34;: 10,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Iops&amp;#34;: 0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CognitoOptions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>If the &lt;code>Processing&lt;/code> status is true, it means that the cluster is not yet healthy. You can run &lt;code>describe-elasticsearch-domain&lt;/code> to receive the status:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es describe-elasticsearch-domain --domain-name mylogs-2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Check the cluster health endpoint and create indices:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl mylogs-2.us-east-1.es.localhost.localstack.cloud:4566/_cluster/health
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;cluster_name&amp;#34;:&amp;#34;es-docker-cluster&amp;#34;,&amp;#34;status&amp;#34;:&amp;#34;green&amp;#34;,&amp;#34;timed_out&amp;#34;:false,&amp;#34;number_of_nodes&amp;#34;:1,&amp;#34;number_of_data_nodes&amp;#34;:1,&amp;#34;active_primary_shards&amp;#34;:0,&amp;#34;active_shards&amp;#34;:0,&amp;#34;relocating_shards&amp;#34;:0,&amp;#34;initializing_shards&amp;#34;:0,&amp;#34;unassigned_shards&amp;#34;:0,&amp;#34;delayed_unassigned_shards&amp;#34;:0,&amp;#34;number_of_pending_tasks&amp;#34;:0,&amp;#34;number_of_in_flight_fetch&amp;#34;:0,&amp;#34;task_max_waiting_in_queue_millis&amp;#34;:0,&amp;#34;active_shards_percent_as_number&amp;#34;:100.0}[~]&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Create an example index:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -X PUT mylogs-2.us-east-1.es.localhost.localstack.cloud:4566/my-index
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;acknowledged&amp;#34;:true,&amp;#34;shards_acknowledged&amp;#34;:true,&amp;#34;index&amp;#34;:&amp;#34;my-index&amp;#34;}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="differences-to-aws">Differences to AWS&lt;/h2>
&lt;ul>
&lt;li>By default, AWS only sets the &lt;code>Endpoint&lt;/code> attribute of the cluster status once the cluster is up.
LocalStack will return the endpoint immediately, but keep &lt;code>Processing = &amp;quot;true&amp;quot;&lt;/code> until the cluster has been started.&lt;/li>
&lt;li>The &lt;code>CustomEndpointOptions&lt;/code> allows arbitrary endpoint URLs, which is not allowed in AWS&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Elemental MediaStore</title><link>/user-guide/aws/mediastore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/mediastore/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>MediaStore is a scalable and highly available object storage service designed specifically for media content.
It provides a reliable way to store, manage, and serve media assets, such as audio, video, and images, with low latency and high performance.
MediaStore seamlessly integrates with other AWS services like Elemental MediaConvert, Elemental MediaLive, Elemental MediaPackage, and CloudFront.&lt;/p>
&lt;p>LocalStack allows you to use the Elemental MediaStore APIs as a high-performance storage solution for media content in your local environment.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_mediastore/">API Coverage Page&lt;/a>, which provides information on the extent of Elemental MediaStore integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Elemental MediaStore and assumes basic knowledge of the AWS CLI and our &lt;code>awslocal&lt;/code> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how you can create a MediaStore container, upload an asset, and download the asset.&lt;/p>
&lt;h3 id="create-a-container">Create a container&lt;/h3>
&lt;p>You can create a container using the &lt;a href="https://docs.aws.amazon.com/mediastore/latest/apireference/API_CreateContainer.html">&lt;code>CreateContainer&lt;/code>&lt;/a> API.
Run the following command to create a container and retrieve the the &lt;code>Endpoint&lt;/code> value which should be used in subsequent requests:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal mediastore create-container --container-name mycontainer&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Container&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Endpoint&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;http://mediastore-mycontainer.mediastore.localhost.localstack.cloud:4566&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationTime&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-08-11T09:43:19.982754+01:00&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ARN&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:mediastore:us-east-1:000000000000:container/mycontainer&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;mycontainer&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="upload-an-asset">Upload an asset&lt;/h3>
&lt;p>To upload a file named &lt;code>myfile.txt&lt;/code> to the container, utilize the &lt;a href="https://docs.aws.amazon.com/mediastore/latest/apireference/API_PutObject.html">&lt;code>PutObject&lt;/code>&lt;/a> API.
This action will transfer the file to the specified path, &lt;code>/myfolder/myfile.txt&lt;/code>, within the container.
Provide the &lt;code>endpoint&lt;/code> obtained in the previous step for the operation to be successful.
Run the following command to upload the file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal mediastore-data put-object \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --endpoint http://mediastore-mycontainer.mediastore.localhost.localstack.cloud:4566 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --body myfile.txt \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --path /myfolder/myfile.txt \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --content-type binary/octet-stream&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ContentSHA256&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ETag&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;\&amp;#34;111d787cdcfcc358fd15684131f586d8\&amp;#34;&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="download-an-asset">Download an asset&lt;/h3>
&lt;p>To retrieve the file from the container, utilize the &lt;a href="https://docs.aws.amazon.com/mediastore/latest/apireference/API_GetObject.html">&lt;code>GetObject&lt;/code>&lt;/a> API.
In this process, you need to specify the endpoint, the path for downloading the file, and the location where the output file, such as &lt;code>/tmp/out.txt&lt;/code>, will be stored.
The downloaded file will then be accessible at the specified output path.
Run the following command to download the file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal mediastore-data get-object \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --endpoint http://mediastore-mycontainer.mediastore.localhost.localstack.cloud:4566 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --path /myfolder/myfile.txt \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> /tmp/out.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ContentLength&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;716&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ContentType&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;binary/octet-stream&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ETag&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;\&amp;#34;111d787cdcfcc358fd15684131f586d8\&amp;#34;&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;LastModified&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-08-11T08:43:20+00:00&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;StatusCode&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;p>The Elemental MediaStore service requires the use of a custom HTTP/HTTPS endpoint. In case you encounter any issues, please consult our &lt;a href="/references/network-troubleshooting/">Networking documentation&lt;/a> for assistance.&lt;/p></description></item><item><title>User-Guide: EventBridge</title><link>/user-guide/aws/events/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/events/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>EventBridge provides a centralized mechanism to discover and communicate events across various AWS services and applications. EventBridge allows you to register, track, and resolve events, which indicates a change in the environment and then applies a rule to route the event to a target. EventBridge rules are tied to an Event Bus to manage event-driven workflows. You can use either identity-based or resource-based policies to control access to EventBridge resources, where the former can be attached to IAM users, groups, and roles, and the latter can be attached to specific AWS resources.&lt;/p>
&lt;p>LocalStack allows you to use the EventBridge APIs in your local environment to create rules that route events to a target. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_events/">API coverage page&lt;/a>, which provides information on the extent of EventBridge&amp;rsquo;s integration with LocalStack. For information on EventBridge Pipes, please refer to the &lt;a href="/user-guide/aws/pipes/">EventBridge Pipes&lt;/a> section.&lt;/p>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>This guide is designed for users new to EventBridge and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate creating an EventBridge rule to run a Lambda function on a schedule.&lt;/p>
&lt;h3 id="create-a-lambda-function">Create a Lambda Function&lt;/h3>
&lt;p>To create a new Lambda function, create a new file called &lt;code>index.js&lt;/code> with the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-js" data-lang="js">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#39;use strict&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">exports&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">console&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;LogScheduledEvent&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">console&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;Received event:&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">JSON&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">stringify&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">));&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">callback&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">null&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;Finished&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the following command to create a new Lambda function using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/lambda/create-function.html">&lt;code>CreateFunction&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>zip function.zip index.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name events-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime nodejs16.x \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb://function.zip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler index.handler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::000000000000:role/cool-stacklifter&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output will consist of the &lt;code>FunctionArn&lt;/code>, which you will need to add the Lambda function to the EventBridge target.&lt;/p>
&lt;h3 id="create-an-eventbridge-rule">Create an EventBridge Rule&lt;/h3>
&lt;p>Run the following command to create a new EventBridge rule using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/events/put-rule.html">&lt;code>PutRule&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal events put-rule \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name my-scheduled-rule \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --schedule-expression &amp;#39;rate(2 minutes)&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the above command, we have specified a schedule expression of &lt;code>rate(2 minutes)&lt;/code>, which will run the rule every two minutes. It means that the Lambda function will be invoked every two minutes.&lt;/p>
&lt;p>Next, grant the EventBridge service principal (&lt;code>events.amazonaws.com&lt;/code>) permission to run the rule, using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/events/add-permission.html">&lt;code>AddPermission&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda add-permission \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name events-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --statement-id my-scheduled-event \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --action &amp;#39;lambda:InvokeFunction&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --principal events.amazonaws.com \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --source-arn arn:aws:events:us-east-1:000000000000:rule/my-scheduled-rule&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="add-the-lambda-function-as-a-target">Add the Lambda Function as a Target&lt;/h3>
&lt;p>Create a file named &lt;code>targets.json&lt;/code> with the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Arn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:lambda:us-east-1:000000000000:function:events-example&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Finally, add the Lambda function as a target to the EventBridge rule using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/events/put-targets.html">&lt;code>PutTargets&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal events put-targets \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --rule my-scheduled-rule \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --targets file://targets.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="verify-the-lambda-invocation">Verify the Lambda invocation&lt;/h3>
&lt;p>You can verify the Lambda invocation by checking the CloudWatch logs. However, wait at least 2 minutes after running the last command before checking the logs.&lt;/p>
&lt;p>Run the following command to list the CloudWatch log groups:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs describe-log-groups&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output will contain the log group name, which you can use to list the log streams:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs describe-log-streams \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --log-group-name /aws/lambda/events-example&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Alternatively, you can fetch LocalStack logs to verify the Lambda invocation:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack logs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-07-17T09:37:52.028 INFO --- [ asgi_gw_0] localstack.request.aws : AWS lambda.Invoke =&amp;gt; 202
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-07-17T09:37:52.106 INFO --- [ asgi_gw_0] localstack.request.http : POST /_localstack_lambda/97e08ac50c18930f131d9dd9744b8df4/invocations/ecb744d0-b3f2-400f-9e49-c85cf12b1e00/logs =&amp;gt; 202
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-07-17T09:37:52.114 INFO --- [ asgi_gw_0] localstack.request.http : POST /_localstack_lambda/97e08ac50c18930f131d9dd9744b8df4/invocations/ecb744d0-b3f2-400f-9e49-c85cf12b1e00/response =&amp;gt; 202
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="supported-target-types">Supported target types&lt;/h2>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Information&lt;/h4>
LocalStack now supports a new event rule engine for &lt;a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html">EventBridge event patterns&lt;/a>.
You can &lt;a href="/references/configuration/">configure&lt;/a> &lt;code>EVENT_RULE_ENGINE=java&lt;/code> (preview) to use the AWS &lt;a href="https://github.com/aws/event-ruler">event-ruler&lt;/a>, which offers better parity.
&lt;/div>
&lt;p>At this time LocalStack supports the following &lt;a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-targets.html#eb-console-targets">target types&lt;/a> for EventBridge rules:&lt;/p>
&lt;ul>
&lt;li>Lambda function&lt;/li>
&lt;li>SNS Topic&lt;/li>
&lt;li>SQS queue&lt;/li>
&lt;li>StepFunctions StateMachine&lt;/li>
&lt;li>Firehose&lt;/li>
&lt;li>Event bus&lt;/li>
&lt;li>API destination&lt;/li>
&lt;li>Kinesis&lt;/li>
&lt;li>CloudWatch log group&lt;/li>
&lt;/ul>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing EventBridge Buses. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>EventBridge&lt;/strong> under the &lt;strong>App Integration&lt;/strong> section.&lt;/p>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>View the Event Buses&lt;/strong>: You can view the list of EventBridge Buses running locally, alongside their Amazon Resource Names (ARNs) and Policies.&lt;/li>
&lt;li>&lt;strong>Create Event Rule&lt;/strong>: You can create a new Event Rule by specifying &lt;strong>Name&lt;/strong>, &lt;strong>Description&lt;/strong>, &lt;strong>Event Pattern&lt;/strong>, &lt;strong>Schedule Expressions&lt;/strong>, &lt;strong>State&lt;/strong>, &lt;strong>Role ARN&lt;/strong>, and &lt;strong>Tags&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Trigger Event&lt;/strong>: You can trigger an Event by specifying the &lt;strong>Entries&lt;/strong> and &lt;strong>Endpoint Id&lt;/strong>. While creating an Entry, you must specify &lt;strong>Source&lt;/strong>, &lt;strong>Event Bus Name&lt;/strong>, &lt;strong>Detail&lt;/strong>, &lt;strong>Resources&lt;/strong>, &lt;strong>Detail Type&lt;/strong>, and &lt;strong>Trace Header&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Remove Selected&lt;/strong>: You can remove the selected EventBridge Bus.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: EventBridge Pipes</title><link>/user-guide/aws/pipes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/pipes/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>EventBridge Pipes allows users to create point-to-point integrations between event producers and consumers with transform, filter and enrichment steps. Pipes are particularly useful for scenarios involving real-time data processing, application integration, and automated workflows, while simplifying the process of routing events between AWS services. Pipes offer a point-to-point connection from one source to one target (one-to-one). In contrast, EventBridge Event Bus offers a one-to-many integration where an event router delivers one event to zero or more destinations.&lt;/p>
&lt;p>LocalStack allows you to use the Pipes APIs in your local environment to create Pipes with SQS queues and Kinesis streams as source and target. You can also filter events using EventBridge event patterns and enrich events using Lambda.&lt;/p>
&lt;p>The supported APIs are available on our &lt;a href="/references/coverage/coverage_pipes/">API coverage page&lt;/a>, which provides information on the extent of Pipe&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;div class="alert alert-info" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The implementation of EventBridge Pipes is currently in &lt;strong>preview&lt;/strong> stage and under active development.
If you would like support for more APIs or report bugs, please make an issue on &lt;a href="https://github.com/localstack/localstack/issues/new/choose">GitHub&lt;/a>.
&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Information&lt;/h4>
LocalStack now supports a new event rule engine for &lt;a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-event-patterns.html">EventBridge event patterns&lt;/a>.
You can &lt;a href="/references/configuration/">configure&lt;/a> &lt;code>EVENT_RULE_ENGINE=java&lt;/code> (preview) to use the AWS &lt;a href="https://github.com/aws/event-ruler">event-ruler&lt;/a>, which offers better parity.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to EventBridge Pipes and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create a Pipe with SQS queues as source and target, and send events to the source queue which will be routed to the target queue.&lt;/p>
&lt;h3 id="create-an-sqs-queue">Create an SQS queue&lt;/h3>
&lt;p>Create two SQS queues that will be used as source and target for the Pipe. Run the following command to create a queue using the &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_CreateQueue.html">&lt;code>CreateQueue&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sqs create-queue --queue-name source-queue
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sqs create-queue --queue-name target-queue&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can fetch their queue ARNs using the &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_GetQueueAttributes.html">&lt;code>GetQueueAttributes&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>SOURCE_QUEUE_ARN=$(awslocal sqs get-queue-attributes --queue-url http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/source-queue --attribute-names QueueArn --output text)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>TARGET_QUEUE_ARN=$(awslocal sqs get-queue-attributes --queue-url http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/target-queue --attribute-names QueueArn --output text)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-a-pipe">Create a Pipe&lt;/h3>
&lt;p>You can now create a Pipe, using the &lt;a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_CreatePipe.html">&lt;code>CreatePipe&lt;/code>&lt;/a> API. Run the following command, by specifying the source and target queue ARNs we created earlier:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal pipes create-pipe --name sample-pipe \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --source $SOURCE_QUEUE_ARN \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --target $TARGET_QUEUE_ARN \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role-arn arn:aws:iam::000000000000:role/pipes-role&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:pipes:us-east-1:000000000000:pipe/sample-pipe&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationTime&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2024-01-26T11:55:27.069088+05:30&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CurrentState&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;CREATING&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DesiredState&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;RUNNING&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;LastModifiedTime&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2024-01-26T11:55:27.069088+05:30&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;sample-pipe&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="describe-the-pipe">Describe the Pipe&lt;/h3>
&lt;p>You can use the &lt;a href="https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_DescribePipe.html">&lt;code>DescribePipe&lt;/code>&lt;/a> API to get information about the Pipe:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal pipes describe-pipe --name sample-pipe&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:pipes:us-east-1:000000000000:pipe/sample-pipe&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationTime&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2024-01-26T11:55:27.069088+05:30&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CurrentState&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;RUNNING&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;DesiredState&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;RUNNING&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;EnrichmentParameters&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;LastModifiedTime&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2024-01-26T11:55:27.069088+05:30&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Name&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;sample-pipe&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;RoleArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:role/pipe-role&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Source&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:sqs:us-east-1:000000000000:source-queue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;SourceParameters&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;SqsQueueParameters&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;BatchSize&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;StateReason&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;USER_INITIATED&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Tags&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Target&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:sqs:us-east-1:000000000000:target-queue&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;TargetParameters&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="send-events-to-the-source-queue">Send events to the source queue&lt;/h3>
&lt;p>You can now send events to the source queue, which will be routed to the target queue. Run the following command to send an event to the source queue:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sqs send-message \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --queue-url http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/source-queue \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --message-body &amp;#34;message-1&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="receive-events-from-the-target-queue">Receive events from the target queue&lt;/h3>
&lt;p>You can fetch the message from the target queue using the &lt;a href="https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_ReceiveMessage.html">&lt;code>ReceiveMessage&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sqs receive-message \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --queue-url http://sqs.us-east-1.localhost.localstack.cloud:4566/000000000000/target-queue&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="supported-sources">Supported sources&lt;/h2>
&lt;p>LocalStack supports the following &lt;a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-source.html">sources&lt;/a> for Pipes:&lt;/p>
&lt;ul>
&lt;li>Amazon DynamoDB stream&lt;/li>
&lt;li>Amazon Kinesis stream&lt;/li>
&lt;li>Amazon SQS queue&lt;/li>
&lt;/ul>
&lt;p>Please create a feature request on &lt;a href="https://github.com/localstack/localstack/issues/new/choose">GitHub&lt;/a> if you miss support for
Amazon MQ broker,
Amazon MSK stream,
or Apache Kafka stream.&lt;/p>
&lt;h2 id="supported-enrichments">Supported enrichments&lt;/h2>
&lt;p>LocalStack supports the following &lt;a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/pipes-enrichment.html">enrichments&lt;/a> for Pipes:&lt;/p>
&lt;ul>
&lt;li>Lambda function&lt;/li>
&lt;/ul>
&lt;p>Please create a feature request on &lt;a href="https://github.com/localstack/localstack/issues/new/choose">GitHub&lt;/a> if you miss support for
API destination,
Amazon API Gateway,
or Step Functions state machine&lt;/p>
&lt;h2 id="supported-targets">Supported targets&lt;/h2>
&lt;p>LocalStack supports the following &lt;a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-event-target.html">targets&lt;/a> for Pipes:&lt;/p>
&lt;ul>
&lt;li>EventBride bus&lt;/li>
&lt;li>Kinesis stream&lt;/li>
&lt;li>Lambda function (SYNC or ASYNC)&lt;/li>
&lt;li>Amazon SNS topic&lt;/li>
&lt;li>Amazon SQS queue&lt;/li>
&lt;li>Step Functions state machine
&lt;ul>
&lt;li>Standard workflows (ASYNC)&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;p>Please create a feature request on &lt;a href="https://github.com/localstack/localstack/issues/new/choose">GitHub&lt;/a> if you miss support for
API destination,
API Gateway,
Batch job queue,
CloudWatch log group,
ECS task,
Firehose delivery stream,
Inspector assessment template,
Redshift cluster data API queries,
SageMaker Pipeline,
or Step Functions state machine: Express workflows (SYNC or ASYNC).&lt;/p>
&lt;h2 id="supported-log-destinations">Supported log destinations&lt;/h2>
&lt;p>LocalStack supports the following &lt;a href="https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-pipes-logs.html">log destinations&lt;/a> for detailed Pipes logging:&lt;/p>
&lt;ul>
&lt;li>CloudWatch Logs&lt;/li>
&lt;/ul>
&lt;p>Please create a feature request on &lt;a href="https://github.com/localstack/localstack/issues/new/choose">GitHub&lt;/a> if you miss support for
Firehose stream logs,
or Amazon S3 logs.&lt;/p>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;p>The EventBridge Pipes implementation in LocalStack is currently in preview stage and has the following limitations:&lt;/p>
&lt;ul>
&lt;li>Lack of input transformers.&lt;/li>
&lt;li>Lack of concurrency support (i.e., ParallelizationFactor), resulting in slower processing in high-throughput scenarios.&lt;/li>
&lt;li>Lack of lifecycle management for pipe states (i.e., missing tests for state transitions).&lt;/li>
&lt;li>Lack of re-sharding support when polling from Kinesis and DynamoDB streams.&lt;/li>
&lt;li>Batch handling behavior may have parity issues (e.g., batch flushing rules by size, length, time, etc. are not implemented).&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Fault Injection Simulator (FIS)</title><link>/user-guide/aws/fis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/fis/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Fault Injection Simulator (FIS) is a service provided by Amazon Web Services (AWS) that enables you to test the resilience of your applications and infrastructure by injecting faults and failures into your AWS resources.
FIS inject faults such as network latency, resource unavailability, and service errors to assess the impact on your application&amp;rsquo;s performance and availability.
The full list of such possible fault injections - called &lt;strong>actions&lt;/strong> - is available in the &lt;a href="https://docs.aws.amazon.com/fis/latest/userguide/fis-actions-reference.html">AWS docs&lt;/a>.&lt;/p>
&lt;p>LocalStack allows you to use the FIS APIs in your local environment to introduce faults in other services, in order to check how your setup behaves when parts of it stop working locally.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_fis/">API coverage page&lt;/a>, which provides information on the extent of FIS API&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="fis-concepts">FIS Concepts&lt;/h2>
&lt;p>In general, FIS calls contain the following details:&lt;/p>
&lt;ol>
&lt;li>Type of fault to introduce - referred to as &lt;strong>action&lt;/strong>.&lt;/li>
&lt;li>Resources to be impacted - known as &lt;strong>target&lt;/strong>.&lt;/li>
&lt;li>Duration of the disruption.
After the designated time, FIS is expected to restore systems to their original state or cease introducing faults.&lt;/li>
&lt;/ol>
&lt;p>FIS actions can be categorized into two main types:&lt;/p>
&lt;ol>
&lt;li>Single-time events — For example, the &lt;code>aws:ec2:stop-instances&lt;/code> FIS action, which sends a &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StopInstances.html">&lt;code>StopInstances&lt;/code>&lt;/a> API to specific EC2 instances.
Some of these events can automatically be undone after a defined time, such as sending a &lt;a href="https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_StartInstances.html">&lt;code>StartInstances&lt;/code>&lt;/a> command to the affected instances.&lt;/li>
&lt;li>Inducing API errors in response to a specified percentage of API calls.
For instance, using &lt;code>aws:fis:inject-api-unavailable-error&lt;/code> to introduce an HTTP 503 error.
Notably, AWS currently supports this exclusively for EC2 API calls.&lt;/li>
&lt;/ol>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to FIS and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.
We will demonstrate how to create an FIS Experiment that fails KMS &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_ListKeys.html">&lt;code>ListKeys&lt;/code>&lt;/a> API with a HTTP 400 code using the AWS CLI.&lt;/p>
&lt;h3 id="create-an-fis-experiment">Create an FIS Experiment&lt;/h3>
&lt;p>Create a new file named &lt;code>create-experiment.json&lt;/code>.
This file should contain a JSON configuration that will be utilized during the subsequent invocation of the &lt;a href="https://docs.aws.amazon.com/fis/latest/APIReference/API_CreateExperimentTemplate.html">&lt;code>CreateExperimentTemplate&lt;/code>&lt;/a> API.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;actions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Some test action&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;actionId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;localstack:generic:api-error&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;parameters&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;service&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;kms&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;operation&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ListKeys&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;percentage&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;100&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;exception&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;SomeTerribleException&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;errorCode&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;400&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;description&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;template for a test action&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;stopConditions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;source&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;roleArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam:123456789012:role/ExperimentRole&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This configuration will result in a 100% failure rate for KMS &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_ListKeys.html">&lt;code>ListKeys&lt;/code>&lt;/a> API calls, each accompanied by a HTTP 400 status code.
Note that the settings pertaining to &lt;code>stopConditions&lt;/code> and &lt;code>roleArn&lt;/code> hold no significance for LocalStack&amp;rsquo;s FIS emulation.
Nonetheless, they are obligatory fields according to AWS specifications and must be included.&lt;/p>
&lt;p>Run the following command to create an FIS Experiment Template using the configuration file we just created:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis create-experiment-template --cli-input-json file://create-experiment.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;experimentTemplate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;7b9ec603-1d20-4a8f-8eda-b1c3e7b28540&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;description&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;template for a test action&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;actions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Some test action&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;actionId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;localstack:generic:api-error&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;parameters&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;service&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;kms&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;operation&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ListKeys&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;percentage&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;100&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;exception&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;SomeTerribleException&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;errorCode&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;400&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;stopConditions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;source&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;creationTime&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1661772176.772892&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;lastUpdateTime&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1661772176.772892&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;roleArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam:123456789012:role/ExperimentRole&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can list all the templates you have created using the &lt;a href="https://docs.aws.amazon.com/fis/latest/APIReference/API_ListExperimentTemplates.html">&lt;code>ListExperimentTemplates&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis list-experiment-templates&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="start-the-fis-experiment">Start the FIS Experiment&lt;/h3>
&lt;p>Now let us check that KMS ListKeys actually works before we introduce our API disruprions:&lt;/p>
&lt;p>You can verify that KMS is working by running by using the &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_ListKeys.html">&lt;code>ListKeys&lt;/code>&lt;/a> API.
Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms list-keys&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Your output may vary, but if you have recently initialized LocalStack from a fresh state, the expected result should be an empty list.
The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Keys&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can start the FIS Experiment using the &lt;a href="https://docs.aws.amazon.com/fis/latest/APIReference/API_StartExperiment.html">&lt;code>StartExperiment&lt;/code>&lt;/a> API.
Run the following command and specify the ID of the experiment template you created earlier:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>$ awslocal fis start-experiment &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --experiment-template-id 7b9ec603-1d20-4a8f-8eda-b1c3e7b28540
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;experiment&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;8b98db02-1c46-49fd-8075-8ff3368fb0a3&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;experimentTemplateId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;7b9ec603-1d20-4a8f-8eda-b1c3e7b28540&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;roleArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam:123456789012:role/ExperimentRole&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;state&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;status&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;running&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;actions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Some test action&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;actionId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;localstack:generic:api-error&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;parameters&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;service&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;kms&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;operation&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ListKeys&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;percentage&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;100&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;exception&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;SomeTerribleException&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;errorCode&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;400&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;stopConditions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;source&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;creationTime&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1661772189.015712&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;startTime&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1661772189.015712&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use the &lt;a href="https://docs.aws.amazon.com/fis/latest/APIReference/API_ListExperiments.html">&lt;code>ListExperiments&lt;/code>&lt;/a> API to check the status of your experiment.
Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis list-experiments&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can fetch the details of your experiment using the &lt;a href="https://docs.aws.amazon.com/fis/latest/APIReference/API_GetExperiment.html">&lt;code>GetExperiment&lt;/code>&lt;/a> API.
Run the following command and specify the ID of the experiment you created earlier:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis get-experiment \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --id 8b98db02-1c46-49fd-8075-8ff3368fb0a3&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="test-the-fis-experiment">Test the FIS Experiment&lt;/h3>
&lt;p>You can now test that the FIS Experiment is working as expected by trying to list the KMS keys using the &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_ListKeys.html">&lt;code>ListKeys&lt;/code>&lt;/a> API.
Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms list-keys&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If everything happened as expected (or did not happen, in this case), the following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>An error occurred &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>SomeTerribleException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> when calling the ListKeys operation: Failing as per Fault Injection Simulator configuration
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can double-check to be sure whether other API calls to KMS or different services are impacted.
For instance, you can try using:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms list-aliases
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sqs list-queues&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To halt the experiment and return everything to its usual state, you can use the &lt;a href="https://docs.aws.amazon.com/fis/latest/APIReference/API_StopExperiment.html">&lt;code>StopExperiment&lt;/code>&lt;/a> API.
Run the following command and specify the ID of the experiment you created earlier:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis stop-experiment \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --id 8b98db02-1c46-49fd-8075-8ff3368fb0a3&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_ListKeys.html">&lt;code>ListKeys&lt;/code>&lt;/a> API should now return an empty list again.&lt;/p>
&lt;h2 id="localstack-features">LocalStack features&lt;/h2>
&lt;p>LocalStack provides the &lt;code>localstack:generic:api-error&lt;/code> action, which functions similarly to actions like &lt;code>aws:fis:inject-api-unavailable-error&lt;/code> found in AWS.
This action enables users to introduce errors into API calls.&lt;/p>
&lt;p>Contrasting with AWS, where such functionality is currently limited to EC2 API calls and a handful of error types, the &lt;code>localstack:generic:api-error&lt;/code> in LocalStack FIS empowers users to configure a wide range of faults for any API call.
Within its &lt;code>parameters&lt;/code> section, you can configure the following:&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Parameter&lt;/th>
&lt;th>Description&lt;/th>
&lt;th>Default Value&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>region&lt;/code>&lt;/td>
&lt;td>The region name where faults will be introduced, e.g., &amp;ldquo;us-west-1&amp;rdquo;.&lt;/td>
&lt;td>Experiment&amp;rsquo;s region&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>service&lt;/code>&lt;/td>
&lt;td>The service name to limit faults to, e.g., &amp;ldquo;kms&amp;rdquo;.&lt;/td>
&lt;td>All services&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>operation&lt;/code>&lt;/td>
&lt;td>The operation name for the specified service to limit faults to, e.g., &amp;ldquo;ListKeys&amp;rdquo;.&lt;/td>
&lt;td>All operations&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>percentage&lt;/code>&lt;/td>
&lt;td>The percentage of API calls to fail among matching calls.&lt;/td>
&lt;td>&amp;ldquo;100&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>exception&lt;/code>&lt;/td>
&lt;td>The name of the exception to raise for affected API calls.&lt;/td>
&lt;td>&amp;ldquo;InternalError&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>errorCode&lt;/code>&lt;/td>
&lt;td>The HTTP error code to return for impacted API calls.&lt;/td>
&lt;td>&amp;ldquo;500&amp;rdquo;&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>This table summarizes the configurable parameters for the &lt;code>localstack:generic:api-error&lt;/code> action in LocalStack FIS.&lt;/p>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;ol>
&lt;li>LocalStack currently supports only a subset of FIS actions available in AWS.
Unsupported actions will result in an error.
The range of supported actions is continuously expanding, with the capability to add new actions upon request.&lt;/li>
&lt;li>LocalStack does not provide support for the target selection mechanism utilized by AWS.
For more information, refer to the &lt;a href="https://docs.aws.amazon.com/fis/latest/userguide/targets.html#target-selection-mode">selection mode documentation&lt;/a>.&lt;/li>
&lt;li>At present, LocalStack does not consider &lt;a href="https://docs.aws.amazon.com/fis/latest/APIReference/API_ExperimentTemplate.html#fis-Type-ExperimentTemplate-roleArn">&lt;code>RoleARN&lt;/code>s&lt;/a>.
In AWS, FIS executes actions based on permissions granted by the specified &lt;code>RoleARN&lt;/code>s.&lt;/li>
&lt;/ol></description></item><item><title>User-Guide: Glacier</title><link>/user-guide/aws/glacier/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/glacier/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Glacier is a data storage service provided by Amazon Web Services to suit the long-term storage of archives and backup of infrequently accessed data.
It offers various retrieval options, different levels of retrieval speed, and more.
Glacier uses a Vault container to store your data, similar to how S3 stores data in Buckets.
A Vault further holds the data in an Archive, which can contain text, images, video, and audio files.
Glacier uses Jobs to retrieve the data in an Archive or list the inventory of a Vault.&lt;/p>
&lt;p>LocalStack allows you to use the Glacier APIs in your local environment to manage Vaults and Archives.
You can use the Glacier API to configure and set up vaults where you can store archives and manage them.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_glacier/">API coverage page&lt;/a>, which provides information on the extent of Glacier&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Glacier and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.
We will demonstrate how to create a vault, upload an archive, initiate a job to get an inventory details or download an archive, and delete the archive and vault with the AWS CLI.&lt;/p>
&lt;h3 id="create-a-vault">Create a vault&lt;/h3>
&lt;p>You can create a vault using the &lt;a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-put.html">&lt;code>CreateVault&lt;/code>&lt;/a> API.
Run the follow command to create a Glacier Vault named &lt;code>sample-vault&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier create-vault --vault-name sample-vault --account-id -&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can get the details from your vault using the &lt;a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-get.html">&lt;code>DescribeVault&lt;/code>&lt;/a> API.
Run the following command to describe your vault.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier describe-vault --vault-name sample-vault --account-id -&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>On successful creation of the Glacier vault, you will see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;VaultARN&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:glacier:us-east-1:000000000000:vaults/sample-vault&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;VaultName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;sample-vault&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationDate&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-09-11T15:07:28.000Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;LastInventoryDate&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-09-11T15:07:28.000Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;NumberOfArchives&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;SizeInBytes&amp;#34;&lt;/span>: &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="upload-an-archive-to-a-vault">Upload an archive to a vault&lt;/h3>
&lt;p>You can upload an archive or an individual file to a vault using the &lt;a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-post.html">&lt;code>UploadArchive&lt;/code>&lt;/a> API.
Download a random image from the internet and save it as &lt;code>image.jpg&lt;/code>.
Run the following command to upload the file to your Glacier vault:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier upload-archive --vault-name sample-vault --account-id - --body image.jpg&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>On successful upload of the Glacier archive, you will see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;location&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;/000000000000/vaults/sample-vault/archives/d41d8cd98f00b204e9800998ecf8427e&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;checksum&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;archiveId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;d41d8cd98f00b204e9800998ecf8427e&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="initiate-the-retrieval-of-an-archive-from-a-vault">Initiate the retrieval of an archive from a vault&lt;/h3>
&lt;p>You can initiate the retrieval of an archive from a vault using the &lt;a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">&lt;code>InitiateJob&lt;/code>&lt;/a> API.&lt;/p>
&lt;p>To download an archive, you will need to initiate an &lt;code>archive-retrieval&lt;/code> job first to make the Archive available for download.
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier initiate-job --vault-name sample-vault --account-id - --job-parameters &amp;#39;{&amp;#34;Type&amp;#34;:&amp;#34;archive-retrieval&amp;#34;,&amp;#34;ArchiveId&amp;#34;:&amp;#34;d41d8cd98f00b204e9800998ecf8427e&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>On successful execution of the job, you will see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;location&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;//vaults/sample-vault/jobs/25CEOTJ7ZUR5Q7YY0B1O55AE4C3L1502EOHWMNY10IIYEBWEQB73D23S8BVYO9RTRTPLRK2LJLUCCRM52GDV87C9A4JW&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;jobId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;25CEOTJ7ZUR5Q7YY0B1O55AE4C3L1502EOHWMNY10IIYEBWEQB73D23S8BVYO9RTRTPLRK2LJLUCCRM52GDV87C9A4JW&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="list-the-jobs">List the jobs&lt;/h3>
&lt;p>You can list the current and previous processes, called Jobs, to monitor the requests sent to the Glacier API using the &lt;a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-jobs-get.html">&lt;code>ListJobs&lt;/code>&lt;/a> API.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier list-jobs --vault-name sample-vault --account-id -&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>On successful execution of the command, you will see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;JobList&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;JobId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;25CEOTJ7ZUR5Q7YY0B1O55AE4C3L1502EOHWMNY10IIYEBWEQB73D23S8BVYO9RTRTPLRK2LJLUCCRM52GDV87C9A4JW&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Action&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ArchiveRetrieval&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ArchiveId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;d41d8cd98f00b204e9800998ecf8427e&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;VaultARN&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:glacier:us-east-1:000000000000:vaults/sample-vault&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationDate&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-09-11T15:25:54.000Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Completed&amp;#34;&lt;/span>: true,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;StatusCode&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Succeeded&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ArchiveSizeInBytes&amp;#34;&lt;/span>: 0,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;InventorySizeInBytes&amp;#34;&lt;/span>: 10000,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CompletionDate&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-09-11T15:25:59.000Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Tier&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Standard&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="download-the-result-of-an-archive-retrieval">Download the result of an archive retrieval&lt;/h3>
&lt;p>You can download the output of an &lt;code>ArchiveRetrieval&lt;/code> job with the &lt;a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-job-output-get.html">&lt;code>GetJobOutput&lt;/code>&lt;/a> API.&lt;/p>
&lt;p>The data download process can be verified through the previous &lt;code>ListJobs&lt;/code> call to check progress.
Once the &lt;code>ArchiveRetrieval&lt;/code> Job is complete, the data can be downloaded.
You can use the &lt;code>JobId&lt;/code> of the Job to download your archive with the following command:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier get-job-output --vault-name sample-vault --account-id - --job-id 25CEOTJ7ZUR5Q7YY0B1O55AE4C3L1502EOHWMNY10IIYEBWEQB73D23S8BVYO9RTRTPLRK2LJLUCCRM52GDV87C9A4JW my-archive.jpg&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Please not that currently, this operation is only mocked, and will create an empty file named &lt;code>my-archive.jpg&lt;/code>, not containing the contents of your archive.
&lt;/div>
&lt;/p>
&lt;h3 id="retrieve-the-inventory-information">Retrieve the inventory information&lt;/h3>
&lt;p>You can also initiate the retrieval of the inventory of a vault using the same &lt;a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-initiate-job-post.html">&lt;code>InitiateJob&lt;/code>&lt;/a> API.&lt;/p>
&lt;p>Initiate a job of the specified type to get the details of the individual inventory items inside a Vault using the &lt;code>initiate-job&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier initiate-job --vault-name sample-vault --account-id - --job-parameters &amp;#39;{&amp;#34;Type&amp;#34;:&amp;#34;inventory-retrieval&amp;#34;,&amp;#34;ArchiveId&amp;#34;:&amp;#34;d41d8cd98f00b204e9800998ecf8427e&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>On successful execution of the command, you will see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;location&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;//vaults/sample-vault/jobs/P5972CSWFR803BHX48OD1A7JWNBFJUMYVWCMZWY55ZJPIJMG1XWFV9ISZPZH1X3LBF0UV3UG6ORETM0EHE5R86Z47B1F&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;jobId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;P5972CSWFR803BHX48OD1A7JWNBFJUMYVWCMZWY55ZJPIJMG1XWFV9ISZPZH1X3LBF0UV3UG6ORETM0EHE5R86Z47B1F&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In the same fashion as the archive retrieval, you can now download the result of the inventory retrieval job using &lt;code>GetJobOutput&lt;/code> using the &lt;code>JobId&lt;/code> from the result of the previous command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier get-job-output \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --vault-name sample-vault --account-id - --job-id P5972CSWFR803BHX48OD1A7JWNBFJUMYVWCMZWY55ZJPIJMG1XWFV9ISZPZH1X3LBF0UV3UG6ORETM0EHE5R86Z47B1F inventory.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Inspecting the content of the &lt;code>inventory.json&lt;/code> file, we can find an inventory of the vault:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;VaultARN&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:glacier:us-east-1:000000000000:vaults/sample-vault&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;InventoryDate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2023-09-11T17:20:48.000Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ArchiveList&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ArchiveId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;d41d8cd98f00b204e9800998ecf8427e&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ArchiveDescription&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CreationDate&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;2023-09-11T15:13:41.000Z&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Size&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;SHA256TreeHash&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="delete-an-archive">Delete an archive&lt;/h3>
&lt;p>You can delete a Glacier archive using the &lt;a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-archive-delete.html">&lt;code>DeleteArchive&lt;/code>&lt;/a> API.&lt;/p>
&lt;p>Run the following command to delete the previously created archive:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier delete-archive \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --vault-name sample-vault --account-id - --archive-id d41d8cd98f00b204e9800998ecf8427e&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="delete-a-vault">Delete a vault&lt;/h3>
&lt;p>You can delete a Glacier vault with the &lt;a href="https://docs.aws.amazon.com/amazonglacier/latest/dev/api-vault-delete.html">&lt;code>DeleteVault&lt;/code>&lt;/a> API.&lt;/p>
&lt;p>Run the following command to delete the vault:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glacier delete-vault --vault-name sample-vault --account-id -&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p></description></item><item><title>User-Guide: Glue</title><link>/user-guide/aws/glue/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/glue/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>The Glue API in LocalStack Pro allows you to run ETL (Extract-Transform-Load) jobs locally, maintaining table metadata in the local Glue data catalog, and using the Spark ecosystem (PySpark/Scala) to run data processing workflows.&lt;/p>
&lt;p>LocalStack allows you to use the Glue APIs in your local environment.
The supported APIs are available on our &lt;a href="/references/coverage/coverage_glue/">API coverage page&lt;/a>, which provides information on the extent of Glue&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Glue and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.
We will demonstrate how to create databases and table metadata in Glue, run Glue ETL jobs, import databases from Athena, and run Glue Crawlers with the AWS CLI.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
In order to run Glue jobs, some additional dependencies have to be fetched from the network, including a Docker image of apprx. 1.5GB which includes Spark, Presto, Hive and other tools.
These dependencies are automatically fetched when you start up the service, so please make sure you&amp;rsquo;re on a decent internet connection when pulling the dependencies for the first time.
&lt;/div>
&lt;h3 id="creating-databases-and-table-metadata">Creating Databases and Table Metadata&lt;/h3>
&lt;p>The commands below illustrate the creation of some very basic entries (databases, tables) in the Glue data catalog:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-database --database-input &amp;#39;{&amp;#34;Name&amp;#34;:&amp;#34;db1&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-table --database db1 --table-input &amp;#39;{&amp;#34;Name&amp;#34;:&amp;#34;table1&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-tables --database db1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;TableList&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;table1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DatabaseName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;db1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="running-scripts-with-scala-and-pyspark">Running Scripts with Scala and PySpark&lt;/h3>
&lt;p>Create a new PySpark script named &lt;code>job.py&lt;/code> with the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">pyspark.sql&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">SparkSession&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">init_spark&lt;/span>&lt;span style="color:#000;font-weight:bold">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">spark&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">SparkSession&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">builder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">appName&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;HelloWorld&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">getOrCreate&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">sc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">spark&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sparkContext&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">spark&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#000">sc&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">spark&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#000">sc&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">init_spark&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">nums&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">sc&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">parallelize&lt;/span>&lt;span style="color:#000;font-weight:bold">([&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">3&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">4&lt;/span>&lt;span style="color:#000;font-weight:bold">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">nums&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">map&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#204a87;font-weight:bold">lambda&lt;/span> &lt;span style="color:#000">x&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">x&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span>&lt;span style="color:#000">x&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">collect&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">__name__&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">main&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now copy the script to an S3 bucket:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://glue-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp job.py s3://glue-test/job.py&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Next, you can create a job definition:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-job --name job1 --role arn:aws:iam::000000000000:role/glue-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --command &amp;#39;{&amp;#34;Name&amp;#34;: &amp;#34;pythonshell&amp;#34;, &amp;#34;ScriptLocation&amp;#34;: &amp;#34;s3://glue-test/job.py&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can finally start the job execution:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue start-job-run --job-name job1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
The returned &lt;code>JobRunId&lt;/code> can be used to query the status job the job execution, until it becomes &lt;code>SUCCEEDED&lt;/code>:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-job-run --job-name job1 --run-id &amp;lt;JobRunId&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;JobRun&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;733b76d0&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Attempt&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;JobRunState&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;SUCCEEDED&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>For a more detailed example illustrating how to run a local Glue PySpark job, please refer to this &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/glue-etl-jobs">sample repository&lt;/a>.&lt;/p>
&lt;h3 id="importing-athena-tables-into-glue-data-catalog">Importing Athena Tables into Glue Data Catalog&lt;/h3>
&lt;p>The Glue data catalog is integrated with Athena, and the database/table definitions can be imported via the &lt;code>import-catalog-to-glue&lt;/code> API.&lt;/p>
&lt;p>Assume you are running the following Athena queries to create databases and table definitions:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sql" data-lang="sql">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">CREATE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">DATABASE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">db2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">CREATE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">EXTERNAL&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">TABLE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">db2&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">table1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">a1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">a2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">STRING&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">a3&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">INT&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">LOCATION&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;s3://test/table1&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">CREATE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">EXTERNAL&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">TABLE&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">db2&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">table2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">a1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">Date&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">a2&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">STRING&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">a3&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87">INT&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">LOCATION&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#39;s3://test/table2&amp;#39;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then this command will import these DB/table definitions into the Glue data catalog:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue import-catalog-to-glue&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Afterwards, the databases and tables will be available in Glue.
You can query the databases with the &lt;code>get-databases&lt;/code> operation:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-databases&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DatabaseList&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a40000">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;db2&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Description&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Database db2 imported from Athena&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;TargetDatabase&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CatalogId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;000000000000&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DatabaseName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;db2&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>And you can query the databases with the &lt;code>get-databases&lt;/code> operation:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-tables --database-name db2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;TableList&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;table1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DatabaseName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;db2&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Description&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Table db2.table1 imported from Athena&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CreateTime&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#a40000">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;table2&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DatabaseName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;db2&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Description&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Table db2.table2 imported from Athena&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CreateTime&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#a40000">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="crawlers">Crawlers&lt;/h3>
&lt;p>Glue crawlers allow extracting metadata from structured data sources.&lt;/p>
&lt;p>LocalStack Glue currently supports S3 targets (configurable via &lt;code>S3Targets&lt;/code>), as well as JDBC targets (configurable via &lt;code>JdbcTargets&lt;/code>).
Support for other target types is in our pipeline and will be added soon.&lt;/p>
&lt;h4 id="s3-crawler-example">S3 Crawler Example&lt;/h4>
&lt;p>The example below illustrates crawling tables and partition metadata from S3 buckets.&lt;/p>
&lt;p>You can first create an S3 bucket with a couple of items:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>printf &amp;#34;1, 2, 3, 4\n5, 6, 7, 8&amp;#34; &amp;gt; /tmp/file.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/file.csv s3://test/table1/year=2021/month=Jan/day=1/file.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/file.csv s3://test/table1/year=2021/month=Jan/day=2/file.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/file.csv s3://test/table1/year=2021/month=Feb/day=1/file.csv
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/file.csv s3://test/table1/year=2021/month=Feb/day=2/file.csv&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can then create and trigger the crawler:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-database --database-input &amp;#39;{&amp;#34;Name&amp;#34;:&amp;#34;db1&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-crawler --name c1 --database-name db1 --role arn:aws:iam::000000000000:role/glue-role --targets &amp;#39;{&amp;#34;S3Targets&amp;#34;: [{&amp;#34;Path&amp;#34;: &amp;#34;s3://test/table1&amp;#34;}]}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue start-crawler --name c1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Finally, you can query the table metadata that has been created by the crawler:&lt;/p>
&lt;p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-tables --database-name db1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;TableList&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;table1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DatabaseName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;db1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;PartitionKeys&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span> &lt;span style="color:#a40000">...&lt;/span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can also query the created table partitions:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-partitions --database-name db1 --table-name table1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Partitions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Values&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;2021&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Jan&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">],&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DatabaseName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;db1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;TableName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;table1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h4 id="jdbc-crawler-example">JDBC Crawler Example&lt;/h4>
&lt;p>When using JDBC crawlers, you can point your crawler towards a Redshift database created in LocalStack.&lt;/p>
&lt;p>Below is a rough outline of the steps required to get the integration for the JDBC crawler working.
You can first create the local Redshift cluster via:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal redshift create-cluster --cluster-identifier c1 --node-type dc1.large --master-username test --master-user-password test --db-name db1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
The output of this command contains the endpoint address of the created Redshift database:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Endpoint&amp;#34;&lt;/span>&lt;span style="color:#a40000">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Address&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;localhost.localstack.cloud&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Port&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">4510&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>&lt;span style="color:#a40000">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a40000">...&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Then you can use any JDBC or Postgres client to create a table &lt;code>mytable1&lt;/code> in the Redshift database, and fill the table with some data.&lt;/p>
&lt;p>Next, you&amp;rsquo;re creating the Glue database, the JDBC connection, as well as the crawler:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-database --database-input &amp;#39;{&amp;#34;Name&amp;#34;:&amp;#34;gluedb1&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-connection --connection-input \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&amp;#34;Name&amp;#34;:&amp;#34;conn1&amp;#34;,&amp;#34;ConnectionType&amp;#34;:&amp;#34;JDBC&amp;#34;,&amp;#34;ConnectionProperties&amp;#34;:{&amp;#34;USERNAME&amp;#34;:&amp;#34;test&amp;#34;,&amp;#34;PASSWORD&amp;#34;:&amp;#34;test&amp;#34;,&amp;#34;JDBC_CONNECTION_URL&amp;#34;:&amp;#34;jdbc:redshift://localhost.localstack.cloud:4510/db1&amp;#34;}}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-crawler --name c1 --database-name gluedb1 --role arn:aws:iam::000000000000:role/glue-role --targets &amp;#39;{&amp;#34;JdbcTargets&amp;#34;:[{&amp;#34;ConnectionName&amp;#34;:&amp;#34;conn1&amp;#34;,&amp;#34;Path&amp;#34;:&amp;#34;db1/%/mytable1&amp;#34;}]}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue start-crawler --name c1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the crawler has started, you have to wait until the &lt;code>State&lt;/code> turns to &lt;code>READY&lt;/code> when querying the current state:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue get-crawler --name c1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>Once the crawler has finished running and is back in &lt;code>READY&lt;/code> state, the Glue table within the &lt;code>gluedb1&lt;/code> DB should have been populated and can be queried via the API.&lt;/p>
&lt;h3 id="schema-registry">Schema Registry&lt;/h3>
&lt;p>The Glue Schema Registry allows you to centrally discover, control, and evolve data stream schemas.
With the Schema Registry, you can manage and enforce schemas and schema compatibilities in your streaming applications.
It integrates nicely with &lt;a href="../managed-streaming-for-kafka">Managed Streaming for Kafka (MSK)&lt;/a>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Currently, LocalStack supports the AVRO dataformat for the Glue Schema Registry.
Support for other dataformats will be added in the future.
&lt;/div>
&lt;p>You can create a schema registry with the following command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-registry --registry-name demo-registry&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>You can create a schema in the newly created registry with the &lt;code>create-schema&lt;/code> command:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-schema --schema-name demo-schema --registry-id RegistryName=demo-registry --data-format AVRO --compatibility FORWARD \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --schema-definition &amp;#39;{&amp;#34;type&amp;#34;:&amp;#34;record&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;Demo&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;Person&amp;#34;,&amp;#34;fields&amp;#34;:[{&amp;#34;name&amp;#34;:&amp;#34;Name&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;string&amp;#34;}]}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RegistryName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;demo-registry&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RegistryArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:glue:us-east-1:000000000000:file-registry/demo-registry&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;SchemaName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;demo-schema&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;SchemaArn&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:glue:us-east-1:000000000000:schema/demo-registry/demo-schema&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DataFormat&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;AVRO&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Compatibility&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;FORWARD&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;SchemaCheckpoint&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;LatestSchemaVersion&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;NextSchemaVersion&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;SchemaStatus&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;AVAILABLE&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;SchemaVersionId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;546d3220-6ab8-452c-bb28-0f1f075f90dd&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;SchemaVersionStatus&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;AVAILABLE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once the schema has been created, you can create a new version:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue register-schema-version --schema-id SchemaName=demo-schema,RegistryName=demo-registry \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --schema-definition &amp;#39;{&amp;#34;type&amp;#34;:&amp;#34;record&amp;#34;,&amp;#34;namespace&amp;#34;:&amp;#34;Demo&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;Person&amp;#34;,&amp;#34;fields&amp;#34;:[{&amp;#34;name&amp;#34;:&amp;#34;Name&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;string&amp;#34;}, {&amp;#34;name&amp;#34;:&amp;#34;Address&amp;#34;,&amp;#34;type&amp;#34;:&amp;#34;string&amp;#34;}]}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;p>You should see the following output:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;SchemaVersionId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ee38732b-b299-430d-a88b-4c429d9e1208&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;VersionNumber&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Status&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;AVAILABLE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can find a more advanced sample in our &lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/glue-msk-schema-registry">localstack-pro-samples repository on GitHub&lt;/a>, which showcases the integration with AWS MSK and automatic schema registrations (including schema rejections based on the compatibilities).&lt;/p>
&lt;h3 id="delta-lake-tables">Delta Lake Tables&lt;/h3>
&lt;p>LocalStack Glue supports &lt;a href="https://delta.io">Delta Lake&lt;/a>, an open-source storage framework that extends Parquet data files with a file-based transaction log for ACID transactions and scalable metadata handling.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Please note that Delta Lake tables are only &lt;a href="https://docs.aws.amazon.com/glue/latest/dg/aws-glue-programming-etl-format-delta-lake.html">supported for Glue versions &lt;code>3.0&lt;/code> and &lt;code>4.0&lt;/code>&lt;/a>.
&lt;/div>
&lt;p>To illustrate this feature, we take a closer look at a Glue sample job that creates a Delta Lake table, puts some data into it, and then queries data from the table.&lt;/p>
&lt;p>First, we define the PySpark job in a file named &lt;code>job.py&lt;/code> (see below).
The job first creates a database &lt;code>db1&lt;/code> and table &lt;code>table1&lt;/code>, then inserts data into the table via both a dataframe and an &lt;code>INSERT INTO&lt;/code> query, and finally fetches the inserted rows via a &lt;code>SELECT&lt;/code> query:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">awsglue.context&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">GlueContext&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">pyspark&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">SparkContext&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">SparkConf&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">conf&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">SparkConf&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">conf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">set&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;spark.sql.extensions&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;io.delta.sql.DeltaSparkSessionExtension&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">conf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">set&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;spark.sql.catalog.spark_catalog&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;org.apache.spark.sql.delta.catalog.DeltaCatalog&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">glue_context&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">GlueContext&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">SparkContext&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">getOrCreate&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">conf&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">conf&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">spark&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">glue_context&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">spark_session&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># create database and table&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">spark&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sql&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;CREATE DATABASE db1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">spark&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sql&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;CREATE TABLE db1.table1 (name string, key long) USING delta PARTITIONED BY (key) LOCATION &amp;#39;s3a://test/data/&amp;#39;&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># create dataframe and write to table in S3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">df&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">spark&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">createDataFrame&lt;/span>&lt;span style="color:#000;font-weight:bold">([(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;test1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">123&lt;/span>&lt;span style="color:#000;font-weight:bold">)],&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;name&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">])&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">df&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">write&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">format&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;delta&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">options&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">path&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;s3a://test/data/&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">mode&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;append&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">partitionBy&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;key&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">saveAsTable&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;db1.table1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># insert data via &amp;#39;INSERT&amp;#39; query&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">spark&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sql&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;INSERT INTO db1.table1 (name, key) VALUES (&amp;#39;test2&amp;#39;, 456)&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># get and print results, to run assertions further below&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">spark&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">sql&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;SELECT * FROM db1.table1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;SQL result:&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">result&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">toJSON&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">collect&lt;/span>&lt;span style="color:#000;font-weight:bold">())&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now run the following commands to create and start the Glue job:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp job.py s3://test/job.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue create-job --name job1 --role arn:aws:iam::000000000000:role/test \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --glue-version 4.0 --command &amp;#39;{&amp;#34;Name&amp;#34;: &amp;#34;pythonshell&amp;#34;, &amp;#34;ScriptLocation&amp;#34;: &amp;#34;s3://test/job.py&amp;#34;}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal glue start-job-run --job-name job1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;JobRunId&amp;#34;: &amp;#34;c9471f40&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The execution of the Glue job can take a few moments - once the job has finished executing, you should see a log line with the query results in the LocalStack container logs, similar to the output below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>2023-10-17 12:59:20,088 INFO scheduler.DAGScheduler: Job 15 finished: collect at /private/tmp/script-90e5371e.py:28, took 0,158257 s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>SQL result: [&amp;#39;{&amp;#34;name&amp;#34;:&amp;#34;test1&amp;#34;,&amp;#34;key&amp;#34;:123}&amp;#39;, &amp;#39;{&amp;#34;name&amp;#34;:&amp;#34;test2&amp;#34;,&amp;#34;key&amp;#34;:456}&amp;#39;]
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>In order to see the logs above, make sure to enable &lt;code>DEBUG=1&lt;/code> in the LocalStack container environment.
Alternatively, you can also retrieve the job logs programmatically via the CloudWatch Logs API - for example, using the job run ID &lt;code>c9471f40&lt;/code> from above:
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal logs get-log-events --log-group-name /aws-glue/jobs/logs-v2 --log-stream-name c9471f40
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{ &amp;#34;events&amp;#34;: [ ... ] }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/p>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for Glue.
You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>Glue&lt;/strong> under the &lt;strong>Analytics&lt;/strong> section.&lt;/p>
&lt;img src="glue-resource-browser.png" alt="Glue Resource Browser" title="Glue Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Manage Databases&lt;/strong>: Create, view, and delete databases in your Glue catalog &lt;strong>Databases&lt;/strong> tab.&lt;/li>
&lt;li>&lt;strong>Manage Tables&lt;/strong>: Create, view, edit, and delete tables in a database in your Glue catalog clicking on the &lt;strong>Tables&lt;/strong> tab.&lt;/li>
&lt;li>&lt;strong>Manage Connections&lt;/strong>: Create, view, and delete Connections in your Glue catalog by clicking on the &lt;strong>Connections&lt;/strong> tab.&lt;/li>
&lt;li>&lt;strong>Manage Crawlers&lt;/strong>: Create, view, and delete Crawlers in your Glue catalog by clicking on the &lt;strong>Crawlers&lt;/strong> tab.&lt;/li>
&lt;li>&lt;strong>Manage Jobs&lt;/strong>: Create, view, and delete Jobs in your Glue catalog by clicking on the &lt;strong>Jobs&lt;/strong> tab.&lt;/li>
&lt;li>&lt;strong>Manage Schema Registries&lt;/strong>: Create, view, and delete Schema Registries in your Glue catalog by clicking on the &lt;strong>Schema Registries&lt;/strong> tab.&lt;/li>
&lt;li>&lt;strong>Manage Schemas&lt;/strong>: Create, view, and delete Schemas in your Glue catalog by clicking on the &lt;strong>Schemas&lt;/strong> tab.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following Developer Hub applications are using Glue:
&lt;div class="row">
&lt;div
class='entry application-card filters-card col-xs-12 col-sm-6 col-lg-4 service-s3 service-ath service-glu service-clf deployment-awscli level-intermediate'
data-services='s3,ath,glu,clf'
data-deployments='awscli'
data-platforms=''
data-levels='intermediate'
data-slug="query-data-in-s3-bucket-with-amazon-athena-glue-catalog-cloudformation"
>
&lt;div class="card h-100">
&lt;div>
&lt;img src="https://raw.githubusercontent.com/localstack/query-data-s3-athena-glue-sample/main/images/architecture.png" >
&lt;/div>
&lt;div class="card-body">
&lt;h5 class="card-title d-flex align-items-center">
&lt;a class="mr-2" href="https://github.com/localstack/query-data-s3-athena-glue-sample">
Query data in S3 Bucket with Amazon Athena, Glue Catalog &amp;amp; CloudFormation
&lt;/a>
&lt;/h5>
&lt;div>
&lt;img
src="/images/services/s3.svg"
class="application-icon" data-toggle="tooltip" data-placement="top"
title="S3" aria-label="S3"
/>
&lt;img
src="/images/services/ath.svg"
class="application-icon" data-toggle="tooltip" data-placement="top"
title="Athena" aria-label="Athena"
/>
&lt;img
src="/images/services/glu.svg"
class="application-icon" data-toggle="tooltip" data-placement="top"
title="Glue" aria-label="Glue"
/>
&lt;img
src="/images/services/clf.svg"
class="application-icon" data-toggle="tooltip" data-placement="top"
title="CloudFormation" aria-label="CloudFormation"
/>
&lt;img
src="/images/pro-badge.png" class="application-icon" data-toggle="tooltip"
data-placement="top" title="Localstack Pro" aria-label="Localstack Pro"
/>
&lt;/div>
&lt;div>
&lt;a class="badge badge-primary no-text-decoration" target="_blank" style="font-weight: normal;" href="/tags/big-data">big-data&lt;/a>
&lt;a class="badge badge-primary no-text-decoration" target="_blank" style="font-weight: normal;" href="/tags/data-analytics">data-analytics&lt;/a>
&lt;/div>
&lt;br>
&lt;p class="card-text" style="font-weight: normal;">Leverage Amazon Athena to run standard SQL to analyze a large amount of data in Amazon S3 buckets deployed using CloudFormation on LocalStack&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="no-results" class="col-xs-12 col-sm-12 flex-grow-1 text-center" style="display: none;">
No applications available with the selected filters.
&lt;a href="javascript:void(0)" class="clear-filters-btn" >Clear filters&lt;/a>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>The following tutorials are using Glue:
&lt;div class="row">
&lt;div class="entry col-12 col-sm-6 col-lg-4 filters-card service-msk service-glu deployment-awscli platform-java"
data-services='msk,glu'
data-deployments='awscli'
data-platforms='java'
>
&lt;div class="card h-100">
&lt;div>
&lt;img class="card-img" src="/tutorials/schema-evolution-glue-msk/schema-evolution-glue-msk-featured-image.png"/>
&lt;/div>
&lt;div class="card-body d-flex flex-column">
&lt;h5>
&lt;a href="/tutorials/schema-evolution-glue-msk/">Schema Evolution with Glue Schema Registry and Managed Streaming for Kafka (MSK) using LocalStack&lt;/a>
&lt;/h5>
&lt;p>Find incompatibilities early or even avoid them altogether when developing Kafka producers or consumers! Learn how to test data schema evolution by using Managed Streaming for Kafka (MSK) with the Glue Schema Registry in LocalStack.&lt;/p>
&lt;div class="reading-time-in-card text-muted mt-auto">
&lt;p class="reading-time">&lt;i class="fa-solid fa-clock" aria-hidden="true">&lt;/i>&amp;nbsp; 21 minute read &amp;nbsp;&lt;/p>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div id="no-results" class="col-xs-12 flex-grow-1 text-center" style="display: none;">
No tutorials available with the selected filters.
&lt;a href="javascript:void(0)" class="clear-filters-btn" >Clear filters&lt;/a>
&lt;/div>
&lt;/div>&lt;/p>
&lt;p>The following code snippets and sample applications provide practical examples of how to use Glue in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/glue-etl-jobs">localstack-pro-samples/glue-etl-jobs&lt;/a>
&lt;ul>
&lt;li>Simple demo application illustrating the use of the Glue API to run local ETL jobs using LocalStack.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/glue-redshift-crawler">localstack-pro-samples/glue-redshift-crawler&lt;/a>
&lt;ul>
&lt;li>Simple demo application illustrating the use of AWS Glue Crawler to populate the Glue metastore from a Redshift database.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;h2 id="further-reading">Further Reading&lt;/h2>
&lt;p>The AWS Glue API is a fairly comprehensive service - more details can be found in the official &lt;a href="https://docs.aws.amazon.com/glue/latest/dg/what-is-glue.html">AWS Glue Developer Guide&lt;/a>.&lt;/p>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;p>Support for triggers is currently limited - the basic API endpoints are implemented, but triggers are currently still under development (more details coming soon).&lt;/p></description></item><item><title>User-Guide: Identity and Access Management (IAM)</title><link>/user-guide/aws/iam/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/iam/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Identity and Access Management (IAM) is a web service provided by Amazon Web Services (AWS) that enables users to control access to AWS resources securely. IAM allows organizations to create and manage AWS users, groups, and roles, defining granular permissions to access specific AWS services and resources. By centralizing access control, administrators can enforce the principle of least privilege, ensuring users have only the necessary permissions for their tasks.&lt;/p>
&lt;p>LocalStack allows you to use the IAM APIs in your local environment to create and manage users, groups, and roles, granting permissions that adhere to the principle of least privilege. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_iam/">API coverage page&lt;/a>, which provides information on the extent of IAM&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to IAM and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how you can create a new user named &lt;code>test&lt;/code>, create an access key pair for the user, and assert that the user is recognized after the access keys are configured in the environment.&lt;/p>
&lt;p>By default, in the absence of custom credentials configuration, all requests to LocalStack run under the administrative root user. Run the following command to use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/sts/get-caller-identity.html">&lt;code>GetCallerIdentity&lt;/code>&lt;/a> API to confirm that the request is running under the root user:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sts get-caller-identity&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can see an output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;UserId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;AKIAIOSFODNN7EXAMPLE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Account&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;000000000000&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Arn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:root&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now create a new user named &lt;code>test&lt;/code> using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/iam/create-user.html">&lt;code>CreateUser&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-user --user-name test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now create an access key pair for the user using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/iam/create-access-key.html">&lt;code>CreateAccessKey&lt;/code>&lt;/a> API. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iam create-access-key --user-name test&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can see an output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AccessKey&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;UserName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;AccessKeyId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;LKIAQAAAAAAAGFWKCM5F&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Status&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Active&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;SecretAccessKey&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;DUulXk2N2yD6rgoBBR9A/5iXa6dBcLyDknr925Q5&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreateDate&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2023-07-25T09:36:51+00:00&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can save the &lt;code>AccessKeyId&lt;/code> and &lt;code>SecretAccessKey&lt;/code> values, and export them in the environment to run commands under the &lt;code>test&lt;/code> user. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export AWS_ACCESS_KEY_ID=LKIAQAAAAAAAGFWKCM5F AWS_SECRET_ACCESS_KEY=DUulXk2N2yD6rgoBBR9A/5iXa6dBcLyDknr925Q5
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sts get-caller-identity
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;UserId&amp;#34;: &amp;#34;b2yxf5g824zklfx5ry8o&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Account&amp;#34;: &amp;#34;000000000000&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Arn&amp;#34;: &amp;#34;arn:aws:iam::000000000000:user/test&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can see that the request is now running under the &lt;code>test&lt;/code> user.&lt;/p>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing IAM users, groups, and roles. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>IAM&lt;/strong> under the &lt;strong>Security Identity Compliance&lt;/strong> section.&lt;/p>
&lt;img src="iam-resource-browser.png" alt="IAM Resource Browser" title="IAM Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create User, Group, Role, and Policy&lt;/strong>: Create a new IAM user, group, or role by clicking the top-level &lt;strong>Create&lt;/strong> button and filling out the form.&lt;/li>
&lt;li>&lt;strong>View User, Group, Role, and Policy Details&lt;/strong>: Click on any of the listed resources to view its details by clicking on the desired User, Group, Role, or Policy.&lt;/li>
&lt;li>&lt;strong>Edit User, Group, Role, and Policy Details&lt;/strong>: Click on any listed resources to edit its details by clicking on the desired User, Group, Role, or Policy.&lt;/li>
&lt;li>&lt;strong>Delete User, Group, Role, and Policy&lt;/strong>: Select any listed resources to delete them by clicking the &lt;strong>Actions&lt;/strong> button and selecting &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="supported-apis">Supported APIs&lt;/h2>
&lt;p>IAM security enforcement is comprehensively available for all AWS APIs in LocalStack and has undergone thorough testing across multiple services. The services that have been rigorously tested include:&lt;/p>
&lt;ul>
&lt;li>ACM&lt;/li>
&lt;li>API Gateway&lt;/li>
&lt;li>CloudFormation&lt;/li>
&lt;li>CloudWatch (metrics/events/logs)&lt;/li>
&lt;li>DynamoDB&lt;/li>
&lt;li>DynamoDB Streams&lt;/li>
&lt;li>Elasticsearch Service&lt;/li>
&lt;li>EventBus, Kinesis&lt;/li>
&lt;li>KMS&lt;/li>
&lt;li>Lambda&lt;/li>
&lt;li>Redshift&lt;/li>
&lt;li>S3&lt;/li>
&lt;li>SecretsManager&lt;/li>
&lt;li>SNS&lt;/li>
&lt;li>SQS&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use IAM in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/serverless-api-ecs-apigateway-sample">Serverless Container-based APIs with Amazon ECS &amp;amp; API Gateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/event-driven-architecture-with-amazon-sns-fifo">Event-driven architecture with Amazon SNS FIFO, DynamoDB, Lambda, and S3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/shipment-list-demo">Full-Stack application with AWS Lambda, DynamoDB &amp;amp; S3 for shipment validation&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/iam-policy-enforcement">Enforcement of IAM policies when working with local cloud APIs&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Identity Store</title><link>/user-guide/aws/identitystore/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/identitystore/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Identity Store is a managed service that enables the creation and management of groups within your AWS environment. Groups are used to manage access to AWS resources, and Identity Store provides a central location to create and manage groups across your AWS accounts.&lt;/p>
&lt;p>LocalStack allows you to use the Identity Store APIs to create and manage groups in your local environment. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_identitystore/">API Coverage Page&lt;/a>, which provides information on the extent of Identity Store integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is aimed at users who are familiar with the AWS CLI and &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script. It will walk you through the basics of setting up and managing groups within the AWS Identity Store using LocalStack.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. This guide will demonstrate how to create a group within Identity Store, list all groups, and describe a specific group.&lt;/p>
&lt;h3 id="create-a-group-in-identity-store">Create a Group in Identity Store&lt;/h3>
&lt;p>You can create a new group in the Identity Store using the &lt;a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_CreateGroup.html">&lt;code>CreateGroup&lt;/code>&lt;/a> API. Execute the following command to create a group with an identity store ID of &lt;code>testls&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal identitystore create-group --identity-store-id testls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;GroupId&amp;#34;: &amp;#34;38cec731-de22-45bf-9af7-b74457bba884&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;IdentityStoreId&amp;#34;: &amp;#34;testls&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Copy the &lt;code>GroupId&lt;/code> value from the output, as it will be needed in subsequent steps.&lt;/p>
&lt;h3 id="list-all-groups-in-identity-store">List all Groups in Identity Store&lt;/h3>
&lt;p>After creating groups, you might want to list all groups within the Identity Store to manage or review them. Run the following command to list all groups using the &lt;a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_ListGroups.html">&lt;code>ListGroups&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal identitystore list-groups --identity-store-id testls
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Groups&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;GroupId&amp;#34;: &amp;#34;38cec731-de22-45bf-9af7-b74457bba884&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ExternalIds&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;IdentityStoreId&amp;#34;: &amp;#34;testls&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This command returns a list of all groups, including the group you created in the previous step.&lt;/p>
&lt;h3 id="describe-a-group-in-identity-store">Describe a Group in Identity Store&lt;/h3>
&lt;p>To view details about a specific group, use the &lt;a href="https://docs.aws.amazon.com/singlesignon/latest/IdentityStoreAPIReference/API_DescribeGroup.html">&lt;code>DescribeGroup&lt;/code>&lt;/a> API. Run the following command to describe the group you created in the previous step:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal describe-group --identity-store-id testls --group-id 38cec731-de22-45bf-9af7-b74457bba884
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;GroupId&amp;#34;: &amp;#34;38cec731-de22-45bf-9af7-b74457bba884&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ExternalIds&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;IdentityStoreId&amp;#34;: &amp;#34;testls&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This command provides detailed information about the specific group, including its ID and any external IDs associated with it.&lt;/p></description></item><item><title>User-Guide: IoT</title><link>/user-guide/aws/iot/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/iot/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>AWS IoT provides cloud services to manage IoT fleet and integrate them with other AWS services&lt;/p>
&lt;p>LocalStack Pro supports IoT Core, IoT Data, IoT Analytics and related APIs as well as an in-built MQTT broker.
Common operations for creating and updating things, groups, policies, certificates and other entities are implemented with full CloudFormation support.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_iot/">API coverage page&lt;/a>.&lt;/p>
&lt;h2 id="getting-started">Getting Started&lt;/h2>
&lt;p>This guide is for users that are new to IoT and assumes a basic knowledge of the AWS CLI and LocalStack &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper.&lt;/p>
&lt;p>Start LocalStack using your preferred method.&lt;/p>
&lt;p>LocalStack ships an Message Queuing Telemetry Transport (MQTT) broker powered by &lt;a href="https://mosquitto.org/">Mosquitto&lt;/a> which supports both pure MQTT and MQTT-over-WSS (WebSockets Secure) protocols.
To retrieve the MQTT endpoint, use the &lt;a href="https://docs.aws.amazon.com/iot/latest/apireference/API_DescribeEndpoint.html">&lt;code>DescribeEndpoint&lt;/code>&lt;/a> operation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iot describe-endpoint
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endpointAddress&amp;#34;: &amp;#34;000000000000.iot.eu-central-1.localhost.localstack.cloud:4510&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-success" role="alert">
&lt;h4 class="alert-heading">Hint&lt;/h4>
LocalStack lazy-loads services by default.
The MQTT broker may not be automatically available on a fresh launch of LocalStack.
You should make a &lt;code>DescribeEndpoint&lt;/code> call to ensure the broker is running and identify the port.
&lt;/div>
&lt;p>This endpoint can then be used with any MQTT client to publish and subscribe to topics.
In this example, we will use the &lt;a href="https://hivemq.github.io/mqtt-cli/docs/installation/">Hive MQTT CLI&lt;/a>.&lt;/p>
&lt;p>Run the following command to subscribe to an MQTT topic.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mqtt subscribe \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --host 000000000000.iot.eu-central-1.localhost.localstack.cloud \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --port 4510 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --topic climate&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In another terminal, publish a message to this topic.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mqtt publish \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --host 000000000000.iot.eu-central-1.localhost.localstack.cloud \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --port 4510 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --topic climate \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -m &amp;#34;temperature=30°C;humidity=60%&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This message will be pushed to all subscribers of this topic, including the one in the first terminal.&lt;/p>
&lt;h2 id="authentication">Authentication&lt;/h2>
&lt;p>LocalStack IoT maintains its own root certificate authority which is regenerated at every run.
The root CA certificate can be retrieved from &lt;a href="http://localhost.localstack.cloud:4566/_aws/iot/LocalStackIoTRootCA.pem">http://localhost.localstack.cloud:4566/_aws/iot/LocalStackIoTRootCA.pem&lt;/a>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
AWS provides its root CA certificate at &lt;a href="https://www.amazontrust.com/repository/AmazonRootCA1.pem">https://www.amazontrust.com/repository/AmazonRootCA1.pem&lt;/a>.
For more information, see &lt;a href="https://docs.aws.amazon.com/iot/latest/developerguide/server-authentication.html#server-authentication-certs">this&lt;/a>.
&lt;/div>
&lt;p>When connecting to the endpoints, you will need to provide this root CA certificate for authentication.
This is illustrated below with Python &lt;a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-sdks.html">AWS IoT SDK&lt;/a>,&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-py" data-lang="py">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">awscrt&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">boto3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">from&lt;/span> &lt;span style="color:#000">awsiot&lt;/span> &lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">mqtt_connection_builder&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">region&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;eu-central-1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">iot_client&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">boto3&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">client&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;iot&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">region&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">region&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">endpoint&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">aws_client&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">iot&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">describe_endpoint&lt;/span>&lt;span style="color:#000;font-weight:bold">()[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;endpointAddress&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">endpoint&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">port&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">endpoint&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">split&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;:&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">event_loop_group&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">io&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">EventLoopGroup&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">host_resolver&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">io&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">DefaultHostResolver&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event_loop_group&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">client_bootstrap&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">io&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">ClientBootstrap&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event_loop_group&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">host_resolver&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">credentials_provider&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">awscrt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">auth&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">AwsCredentialsProvider&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">new_default_chain&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">client_bootstrap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">client_bootstrap&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">client_id&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;example-client&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Path to root CA certificate downloaded from `/_aws/iot/LocalStackIoTRootCA.pem`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">ca_filepath&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;...&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">mqtt_over_wss&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mqtt_connection_builder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">websockets_with_default_aws_signing&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">region&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">region&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">credentials_provider&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">credentials_provider&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">client_bootstrap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">client_bootstrap&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">client_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">client_id&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">endpoint&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">endpoint&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">port&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">port&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ca_filepath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">ca_filepath&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">mqtt_over_wss&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">connect&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">result&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">mqtt_over_wss&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">subscribe&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you are using pure MQTT, you also need to set the client-side X509 certificates and Application Layer Protocol Negotiation (ALPN) for a successful mutual TLS (mTLS) authentication.
This is not required for MQTT-over-WSS since it does not use mTLS.&lt;/p>
&lt;p>AWS IoT SDKs automatically set the ALPN when the endpoint port is 443.
However, because LocalStack does not use this port, this must be done manually.
For details on how ALPN works with AWS, see &lt;a href="https://docs.aws.amazon.com/iot/latest/developerguide/protocols.html">this page&lt;/a>.&lt;/p>
&lt;p>The client certificate and key can be retrieved using &lt;code>CreateKeysAndCertificate&lt;/code> operation.
The certificate is signed by the LocalStack root CA.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-py" data-lang="py">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">result&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">iot_client&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">create_keys_and_certificate&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">setAsActive&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">True&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Path to file with saved content `result[&amp;#34;certificatePem&amp;#34;]`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">cert_file&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;...&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Path to file with saved content `result[&amp;#34;keyPair&amp;#34;][&amp;#34;PrivateKey&amp;#34;]`&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">priv_key_file&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;...&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">tls_ctx_options&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">awscrt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">io&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">TlsContextOptions&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">create_client_with_mtls_from_path&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">cert_file&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">priv_key_file&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">tls_ctx_options&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">alpn_list&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;x-amzn-mqtt-ca&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">mqtt&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">mqtt_connection_builder&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">_builder&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">tls_ctx_options&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">cert_filepath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">cert_file&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">pri_key_filepath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">priv_key_file&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">client_bootstrap&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">client_bootstrap&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">client_id&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">client_id&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">endpoint&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">endpoint&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">port&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">port&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ca_filepath&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">ca_filepath&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">mqtt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">connect&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">result&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">mqtt&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">subscribe&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">...&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="lifecycle-events">Lifecycle Events&lt;/h2>
&lt;p>LocalStack publishes the &lt;a href="https://docs.aws.amazon.com/iot/latest/developerguide/life-cycle-events.html">lifecycle events&lt;/a> to the standard endpoints.&lt;/p>
&lt;ul>
&lt;li>&lt;code>$aws/events/presence/connected/clientId&lt;/code>: when a client connects&lt;/li>
&lt;li>&lt;code>$aws/events/presence/disconnected/clientId&lt;/code>: when a client disconnects&lt;/li>
&lt;li>&lt;code>$aws/events/subscriptions/subscribed/clientId&lt;/code>: when a client subscribes to a topic&lt;/li>
&lt;li>&lt;code>$aws/events/subscriptions/unsubscribed/clientId&lt;/code>: when a client unsubscribes from a topic&lt;/li>
&lt;/ul>
&lt;p>Currently the &lt;code>principalIdentifier&lt;/code> and &lt;code>sessionIdentifier&lt;/code> fields in event payload contain dummy values.&lt;/p>
&lt;h2 id="registry-events">Registry Events&lt;/h2>
&lt;p>LocalStack can publish the &lt;a href="https://docs.aws.amazon.com/iot/latest/developerguide/registry-events.html">registry events&lt;/a>, if &lt;a href="https://docs.aws.amazon.com/iot/latest/developerguide/iot-events.html#iot-events-enable">you enable it&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal iot update-event-configurations \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --event-configurations &amp;#39;{&amp;#34;THING&amp;#34;:{&amp;#34;Enabled&amp;#34;: true}}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can then subscribe or use topic rules on the follow topics:&lt;/p>
&lt;ul>
&lt;li>&lt;code>$aws/events/thing/&amp;lt;thingName&amp;gt;/created&lt;/code>: when a new thing is created&lt;/li>
&lt;li>&lt;code>$aws/events/thing/&amp;lt;thingName&amp;gt;/updated&lt;/code>: when a thing is updated&lt;/li>
&lt;li>&lt;code>$aws/events/thing/&amp;lt;thingName&amp;gt;/deleted&lt;/code>: when a thing is deleted&lt;/li>
&lt;/ul>
&lt;h2 id="topic-rules">Topic Rules&lt;/h2>
&lt;p>It is possible to use actions with SQL queries for IoT Topic Rules.&lt;/p>
&lt;p>For example, you can use the &lt;a href="https://docs.aws.amazon.com/iot/latest/apireference/API_CreateTopicRule.html">&lt;code>CreateTopicRule&lt;/code>&lt;/a> operation to define a topic rule with a SQL query &lt;code>SELECT * FROM 'my/topic' where attr=123&lt;/code> which will execute a trigger whenever a message with attribute &lt;code>attr=123&lt;/code> is received on the MQTT topic &lt;code>my/topic&lt;/code>.&lt;/p>
&lt;p>Supported triggers include Kinesis, Lambda, SQS, Firehose and DynamoDB v2.&lt;/p>
&lt;h2 id="device-shadows">Device Shadows&lt;/h2>
&lt;p>LocalStack supports both unnamed (classic) and named device shadows.&lt;/p>
&lt;p>You can use AWS CLI and &lt;a href="https://docs.aws.amazon.com/iot/latest/developerguide/device-shadow-mqtt.html">MQTT topics&lt;/a> to get, update or delete device shadow state information.&lt;/p>
&lt;p>The endpoint as returned by &lt;code>DescribeEndpoint&lt;/code> currently does not support the &lt;a href="https://docs.aws.amazon.com/iot/latest/developerguide/device-shadow-rest-api.html#API_GetThingShadow">device shadow REST API&lt;/a>&lt;/p>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;p>LocalStack MQTT broker does not support multi-account/multi-region namespacing.
Internally, the MQTT messages are not routed to the appropriate account ID/region even though the endpoint URL may suggest otherwise.
All messages will be routed to the &lt;code>000000000000&lt;/code> account and the &lt;code>us-east-1&lt;/code> region.
This prevents features such as topic rules from working properly when not using the this account ID or region.&lt;/p></description></item><item><title>User-Guide: Key Management Service (KMS)</title><link>/user-guide/aws/kms/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/kms/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Key Management Service (KMS) is a managed service that allows users to handle encryption keys within the Amazon Web Services ecosystem. KMS allows users to create, control, and utilize keys to encrypt and decrypt data, as well as to sign and verify messages. KMS allows you to create, delete, list, and update aliases, friendly names for your KMS keys, and tag them for identification and automation. You can check &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/concepts.html">the official AWS documentation&lt;/a> to understand the basic terms and concepts used in the KMS.&lt;/p>
&lt;p>LocalStack allows you to use the KMS APIs in your local environment to create, edit, and view symmetric and asymmetric KMS keys, including HMAC keys. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_kms/">API coverage page&lt;/a>, which provides information on the extent of KMS&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to KMS and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create a simple symmetric encryption key and use it to encrypt/decrypt data.&lt;/p>
&lt;h3 id="create-a-key">Create a key&lt;/h3>
&lt;p>To generate a new key within the KMS, you can use the &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_CreateKey.html">&lt;code>CreateKey&lt;/code>&lt;/a> API. Execute the following command to create a new key:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms create-key&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>By default, this command generates a symmetric encryption key, eliminating the need for any additional arguments. You can take a look at the &lt;code>KeyId&lt;/code> of the freshly generated key in the output, and save it for future use.&lt;/p>
&lt;p>In case the key ID is misplaced, it is possible to retrieve a comprehensive list of IDs and &lt;a href="https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html">Amazon Resource Names&lt;/a> (ARNs) for all available keys through the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms list-keys&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Additionally, if needed, you can obtain extensive details about a specific key by providing its key ID or ARN using the subsequent command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms describe-key --key-id &amp;lt;KEY_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="encrypt-the-data">Encrypt the data&lt;/h3>
&lt;p>You can now leverage the generated key for encryption purposes. For instance, let&amp;rsquo;s consider encrypting &amp;ldquo;&lt;em>some important stuff&lt;/em>&amp;rdquo;. To do so, you can use the &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Encrypt.html">&lt;code>Encrypt&lt;/code>&lt;/a> API. Execute the following command to encrypt the data:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms encrypt \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --key-id 010a4301-4205-4df8-ae52-4c2895d47326 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --plaintext &amp;#34;some important stuff&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --output text \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --query CiphertextBlob \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | base64 --decode &amp;gt; my_encrypted_data&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You will notice that a new file named &lt;code>my_encrypted_data&lt;/code> has been created in your current directory. This file contains the encrypted data, which can be decrypted using the same key.&lt;/p>
&lt;h3 id="decrypt-the-data">Decrypt the data&lt;/h3>
&lt;p>To decrypt the data, you can use the &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_Decrypt.html">&lt;code>Decrypt&lt;/code>&lt;/a> API. You don&amp;rsquo;t need to specify the &lt;code>KEY_ID&lt;/code> while decrypting the file, since AWS includes the Key ID into the encrypted data. However, with asymmetric keys the &lt;code>KEY_ID&lt;/code> has to be specified.&lt;/p>
&lt;p>Execute the following command to decrypt the data:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms decrypt \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --ciphertext-blob fileb://my_encrypted_data \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --output text \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --query Plaintext \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> | base64 --decode&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Similar to the previous &lt;code>Encrypt&lt;/code> operation, to retrieve the actual data, it&amp;rsquo;s necessary to decode the Base64-encoded output. To achieve this, employ the &lt;code>output&lt;/code> and &lt;code>query&lt;/code> parameters along with the &lt;code>base64&lt;/code> tool as before. Upon successful execution, the output will correspond to our original text:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>some important stuff
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing KMS keys. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>KMS&lt;/strong> under the &lt;strong>Security Identity Compliance&lt;/strong> section.&lt;/p>
&lt;img src="kms-resource-browser.png" alt="KMS Resource Browser" title="KMS Resource Browser" width="900" />
&lt;br>
&lt;br>
The Resource Browser allows you to perform the following actions:
&lt;ul>
&lt;li>&lt;strong>Create Key&lt;/strong>: Create a new KMS key by specifying the &lt;strong>Policy&lt;/strong>, &lt;strong>Key Usage&lt;/strong>, &lt;strong>Tags&lt;/strong>, &lt;strong>Multi Region&lt;/strong>, &lt;strong>Customer Master Key Spec&lt;/strong>, and more.&lt;/li>
&lt;li>&lt;strong>Edit Key&lt;/strong>: Edit an existing KMS key by specifying the &lt;strong>Description&lt;/strong>, after clicking the key in the list and clicking &lt;strong>EDIT KEY&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>View Key&lt;/strong>: View the details of an existing KMS key by clicking the key in the list.&lt;/li>
&lt;li>&lt;strong>Enable &amp;amp; Disable Key&lt;/strong>: Select any listed keys to enable or disable them by clicking the &lt;strong>Actions&lt;/strong> button and select &lt;strong>Enable Selected&lt;/strong> or &lt;strong>Disable Selected&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Delete Key&lt;/strong>: Select any listed keys to delete them by clicking the &lt;strong>Actions&lt;/strong> button and selecting &lt;strong>Schedule Deletion&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="custom-ids-for-kms-keys-via-tags">Custom IDs for KMS keys via tags&lt;/h2>
&lt;p>You can assign custom IDs to KMS keys using the &lt;code>_custom_id_&lt;/code> tag during key creation. This can be useful to pre-seed a test environment and use a static &lt;code>KeyId&lt;/code> for your keys.&lt;/p>
&lt;p>Below is a simple example to create a key with a custom &lt;code>KeyId&lt;/code> (note that the &lt;code>KeyId&lt;/code> should have the format of a UUID):&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kms create-key --tags &amp;#39;[{&amp;#34;TagKey&amp;#34;:&amp;#34;_custom_id_&amp;#34;,&amp;#34;TagValue&amp;#34;:&amp;#34;00000000-0000-0000-0000-000000000001&amp;#34;}]&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KeyMetadata&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AWSAccountId&amp;#34;: &amp;#34;000000000000&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;KeyId&amp;#34;: &amp;#34;00000000-0000-0000-0000-000000000001&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;h3 id="encryption-data-format">Encryption data format&lt;/h3>
&lt;p>In LocalStack&amp;rsquo;s KMS implementation, the encryption process is uniformly symmetric, even when an asymmetric key is requested. Furthermore, LocalStack utilizes an encrypted data format distinct from that employed by AWS.&lt;/p>
&lt;p>This could lead to decryption failures if a key is manually generated outside the local KMS environment, imported to KMS using the &lt;a href="https://docs.aws.amazon.com/kms/latest/APIReference/API_ImportKeyMaterial.html">ImportKeyMaterial&lt;/a> API, utilized for encryption within local KMS, and later decryption is attempted externally using the self-generated key. However, conventional setups are likely to function seamlessly.&lt;/p>
&lt;h3 id="key-states">Key states&lt;/h3>
&lt;p>In AWS KMS, cryptographic keys exhibit &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/key-state.html">multiple states&lt;/a>. However, LocalStack&amp;rsquo;s KMS implementation provides only a subset of these states&lt;/p>
&lt;ul>
&lt;li>&lt;code>Enabled&lt;/code>&lt;/li>
&lt;li>&lt;code>Disabled&lt;/code>&lt;/li>
&lt;li>&lt;code>Creating&lt;/code>&lt;/li>
&lt;li>&lt;code>PendingImport&lt;/code>&lt;/li>
&lt;li>&lt;code>PendingDeletion&lt;/code>&lt;/li>
&lt;/ul>
&lt;h3 id="multi-region-keys">Multi-region keys&lt;/h3>
&lt;p>LocalStack&amp;rsquo;s KMS implementation is equipped to facilitate &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/multi-region-keys-overview.html">multi-region keys&lt;/a>, but there&amp;rsquo;s a distinct behavior compared to AWS KMS. Unlike AWS KMS, the replication of multi-region key replicas in LocalStack KMS isn&amp;rsquo;t automatically synchronized with their corresponding primary key. Consequently, adjustments made to the primary key&amp;rsquo;s settings won&amp;rsquo;t propagate automatically to the replica.&lt;/p>
&lt;h3 id="key-aliases">Key aliases&lt;/h3>
&lt;p>While AWS KMS conveniently establishes &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/kms-alias.html">aliases&lt;/a>, LocalStack follows suit by supporting these pre-configured aliases. However, it&amp;rsquo;s important to note that in LocalStack, these aliases come into picture after the initial access attempt. Until that point, they are not visible.&lt;/p>
&lt;h3 id="key-specs">Key specs&lt;/h3>
&lt;p>In AWS KMS, &lt;a href="https://docs.aws.amazon.com/kms/latest/developerguide/asymmetric-key-specs.html#key-spec-sm:~:text=the%20message%20digest.-,SM2%20key%20spec%20(China%20Regions%20only),-The%20SM2%20key">SM2&lt;/a> is a supported key spec for asymmetric keys. However, LocalStack&amp;rsquo;s KMS implementation doesn&amp;rsquo;t support this key spec.&lt;/p></description></item><item><title>User-Guide: Kinesis</title><link>/user-guide/aws/kinesis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/kinesis/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Kinesis is a platform provided by Amazon Web Services (AWS) that enables your application to ingest, buffer, and process data in real-time. Kinesis is suitable for applications that require processing and deriving insights from data streams such as logs, metrics, user interactions, and IoT sensor readings. Kinesis offers three main services: Kinesis Data Streams, Kinesis Data Firehose, and Kinesis Data Analytics. In this page, we take a look at Kinesis Data Streams which allows you to capture and store real-time data streams.&lt;/p>
&lt;p>LocalStack allows you to use the Kinesis APIs in your local environment from setting up data streams and configuring data processing to building real-time analytics applications. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_kinesis/">API coverage page&lt;/a>, which provides information on the extent of Kinesis&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Kinesis and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create a Lambda function to consume events from a Kinesis stream with the AWS CLI.&lt;/p>
&lt;h3 id="create-a-lambda-function">Create a Lambda function&lt;/h3>
&lt;p>You need to create a Lambda function that receives a Kinesis event input and processes the messages that it contains. Create a file named &lt;code>index.mjs&lt;/code> with the following content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">console&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;Loading function&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">export&lt;/span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">context&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Records&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">forEach&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">record&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">let&lt;/span> &lt;span style="color:#000">payload&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">Buffer&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">from&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">record&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">kinesis&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;base64&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">).&lt;/span>&lt;span style="color:#000">toString&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;ascii&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">console&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">log&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;Decoded payload:&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">payload&lt;/span>&lt;span style="color:#000;font-weight:bold">);&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">});&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can create a Lambda function using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html">&lt;code>CreateFunction&lt;/code>&lt;/a> API. Run the following command to create a Lambda function named &lt;code>ProcessKinesisRecords&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>zip function.zip index.mjs
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name ProcessKinesisRecords \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb://function.zip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler index.handler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime nodejs18.x \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::000000000000:role/lambda-kinesis-role&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;FunctionName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ProcessKinesisRecords&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;FunctionArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:lambda:us-east-1:000000000000:function:ProcessKinesisRecords&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Runtime&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;nodejs18.x&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Role&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:role/lambda-kinesis-role&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Handler&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;index.handler&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="invoke-the-lambda-function">Invoke the Lambda function&lt;/h3>
&lt;p>Create a file named &lt;code>input.txt&lt;/code> with the following JSON content:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Records&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;kinesis&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;kinesisSchemaVersion&amp;#34;: &amp;#34;1.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;partitionKey&amp;#34;: &amp;#34;1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;sequenceNumber&amp;#34;: &amp;#34;49590338271490256608559692538361571095921575989136588898&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;data&amp;#34;: &amp;#34;SGVsbG8sIHRoaXMgaXMgYSB0ZXN0Lg==&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;approximateArrivalTimestamp&amp;#34;: 1545084650.987
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;eventSource&amp;#34;: &amp;#34;aws:kinesis&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;eventVersion&amp;#34;: &amp;#34;1.0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;eventID&amp;#34;: &amp;#34;shardId-000000000006:49590338271490256608559692538361571095921575989136588898&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;eventName&amp;#34;: &amp;#34;aws:kinesis:record&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;invokeIdentityArn&amp;#34;: &amp;#34;arn:aws:iam::000000000000:role/lambda-kinesis-role&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;awsRegion&amp;#34;: &amp;#34;us-east-1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;eventSourceARN&amp;#34;: &amp;#34;arn:aws:kinesis:us-east-1:000000000000:stream/lambda-stream&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The JSON contains a sample Kinesis event. You can use the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html">&lt;code>Invoke&lt;/code>&lt;/a> API to invoke the Lambda function with the Kinesis event as input. Execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda invoke \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name ProcessKinesisRecords \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --payload file://input.txt outputfile.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-a-kinesis-stream">Create a Kinesis Stream&lt;/h3>
&lt;p>You can create a Kinesis Stream using the &lt;a href="https://docs.aws.amazon.com/kinesis/latest/APIReference/API_CreateStream.html">&lt;code>CreateStream&lt;/code>&lt;/a> API. Run the following command to create a Kinesis Stream named &lt;code>lambda-stream&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis create-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stream-name lambda-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --shard-count 1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can retrieve the Stream ARN using the &lt;a href="https://docs.aws.amazon.com/kinesis/latest/APIReference/API_DescribeStream.html">&lt;code>DescribeStream&lt;/code>&lt;/a> API. Execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis describe-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stream-name lambda-stream&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;StreamDescription&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;Shards&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ShardId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;shardId-000000000000&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;HashKeyRange&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;StartingHashKey&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;0&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EndingHashKey&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;340282366920938463463374607431768211455&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a40000">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a40000">]&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;StreamARN&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:kinesis:us-east-1:000000000000:stream/lambda-stream&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;StreamName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;lambda-stream&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;StreamStatus&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ACTIVE&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a40000">...&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can save the &lt;code>StreamARN&lt;/code> value for later use.&lt;/p>
&lt;h3 id="add-an-event-source-in-lambda">Add an Event Source in Lambda&lt;/h3>
&lt;p>You can add an Event Source to your Lambda function using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_CreateEventSourceMapping.html">&lt;code>CreateEventSourceMapping&lt;/code>&lt;/a> API. Run the following command to add the Kinesis Stream as an Event Source to your Lambda function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-event-source-mapping \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name ProcessKinesisRecords \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --event-source arn:aws:kinesis:us-east-1:000000000000:stream/lambda-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --batch-size 100 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --starting-position LATEST&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="test-the-event-source-mapping">Test the Event Source mapping&lt;/h3>
&lt;p>You can test the event source mapping by adding a record to the Kinesis Stream using the &lt;a href="https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html">&lt;code>PutRecord&lt;/code>&lt;/a> API. Run the following command to add a record to the Kinesis Stream:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis put-record \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stream-name lambda-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --partition-key 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data &amp;#34;Hello, this is a test.&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can fetch the CloudWatch logs for your Lambda function reading records from the stream, using AWS CLI or LocalStack Resource Browser.&lt;/p>
&lt;h2 id="configuration">Configuration&lt;/h2>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>Variable&lt;/th>
&lt;th>Description&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>&lt;code>KINESIS_ERROR_PROBABILITY&lt;/code>&lt;/td>
&lt;td>Decimal value between &lt;code>0.0&lt;/code> (default) and &lt;code>1.0&lt;/code>. This environment variable enables you to inject &lt;code>ProvisionedThroughputException&lt;/code> at random intervals in your application. While this won&amp;rsquo;t provide insight into your application&amp;rsquo;s overall throughput handling, it aids in testing your application&amp;rsquo;s exception-handling capabilities.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>KINESIS_SHARD_LIMIT&lt;/code>&lt;/td>
&lt;td>Integer value (default: &lt;code>100&lt;/code>) or &lt;code>Infinity&lt;/code> (to disable). Use this variable to assess whether your application conforms to the assigned shard limit. Disabling this behavior requires explicitly setting &lt;code>KINESIS_SHARD_LIMIT=Infinity&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>KINESIS_LATENCY&lt;/code>&lt;/td>
&lt;td>Integer value in milliseconds (default: &lt;code>500&lt;/code>) or &lt;code>0&lt;/code> (to disable). Particularly useful for testing latency-sensitive applications. Since local Kinesis service lacks latency simulation, you can introduce artificial latency into your AWS calls using this variable. To disable this behavior, set &lt;code>KINESIS_LATENCY=0&lt;/code>.&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>&lt;code>KINESIS_INITIALIZE_STREAMS&lt;/code>&lt;/td>
&lt;td>&lt;strong>Deprecated.&lt;/strong> Comma-delimited string with stream names, corresponding shard counts, and an optional region for initialization during startup. If no region is provided, the default region is used. For example, &lt;code>KINESIS_INITIALIZE_STREAMS=my-first-stream:1,my-other-stream:2:us-west-2,my-last-stream:1&lt;/code>. In multi-account setups, the specified streams will be created for all accounts.&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing Kinesis Streams &amp;amp; Kafka Clusters. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>Kinesis&lt;/strong> under the &lt;strong>Analytics&lt;/strong> section.&lt;/p>
&lt;img src="kinesis-resource-browser.png" alt="Kinesis Resource Browser" title="Kinesis Resource Browser" width="900" />
&lt;br>
&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Stream&lt;/strong>: Create a Kinesis Stream by specifying the &lt;strong>Stream Name&lt;/strong>, &lt;strong>Shard Count&lt;/strong>, and &lt;strong>Stream Mode&lt;/strong>.&lt;/li>
&lt;li>&lt;strong>Create Cluster&lt;/strong>: Create a Kafka Cluster by specifying the &lt;strong>Cluster Name&lt;/strong>, &lt;strong>Kafka Version&lt;/strong>, &lt;strong>Number Of Broker Nodes&lt;/strong>, &lt;strong>Instance Type&lt;/strong>, and more.&lt;/li>
&lt;li>&lt;strong>View Streams &amp;amp; Clusters&lt;/strong>: Click on any of the listed resources to view its details by clicking on the desired Stream &amp;amp; Cluster.&lt;/li>
&lt;li>&lt;strong>Edit Streams &amp;amp; Clusters&lt;/strong>: Click on any listed resources to edit its details by clicking on the desired Stream &amp;amp; Cluster.&lt;/li>
&lt;li>&lt;strong>Delete Streams &amp;amp; Clusters&lt;/strong>: Select any listed resources to delete them by clicking the &lt;strong>Actions&lt;/strong> button and selecting &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use Kinesis in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/sample-fuzzy-movie-search-lambda-kinesis-elasticsearch">Search application with Lambda, Kinesis, Firehose, ElasticSearch, S3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/serverless-streaming-data-pipeline">Streaming Data Pipeline with Kinesis, Tinybird, CloudWatch, Lambda&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;p>In multi-account setups, each AWS account launches a separate instance of Kinesis Mock, which is very resource intensive when a large number of AWS accounts are used. An &lt;a href="https://github.com/etspaceman/kinesis-mock/issues/377">open Kinesis Mock issue&lt;/a> is being used to keep track of this feature.&lt;/p></description></item><item><title>User-Guide: Kinesis Data Analytics</title><link>/user-guide/aws/kinesisanalytics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/kinesisanalytics/</guid><description>
&lt;p>Kinesis Data Analytics is a service offered by Amazon Web Services (AWS) that enables you to process and analyze streaming data in real-time.
Kinesis Data Analytics allows you to apply transformations, filtering, and enrichment to streaming data using standard SQL syntax.
You can also run Java or Scala programs against streaming sources to perform various operations on the data using Apache Flink.&lt;/p>
&lt;p>LocalStack allows you to use the Kinesis Data Analytics APIs in your local environment to run continuous SQL queries directly over your Kinesis data streams.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_kinesisanalyticsv2/">API coverage page&lt;/a>, which provides information on the extent of Kinesis Data Analytics integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Kinesis Data Analytics and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.
We will demonstrate how to create a Kinesis Analytics application for Apache Flink and the DataStream API using AWS CLI.&lt;/p>
&lt;h3 id="create-amazon-kinesis-data-streams">Create Amazon Kinesis Data Streams&lt;/h3>
&lt;p>Before creating a Kinesis Data Analytics application, you need to create two Kinesis Data Streams.
You can create the streams using the &lt;a href="https://docs.aws.amazon.com/kinesis/latest/APIReference/API_CreateStream.html">&lt;code>CreateStream&lt;/code>&lt;/a> API.
Execute the following command to create the streams:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis create-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stream-name ExampleInputStream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --shard-count 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region us-west-2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis create-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stream-name ExampleOutputStream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --shard-count 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region us-west-2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="download-apache-flink-streaming-java-code">Download Apache Flink Streaming Java Code&lt;/h3>
&lt;p>To create a Kinesis Data Analytics application, you need to download the Java application code for Apache Flink.
You can find the code in the &lt;a href="https://github.com/aws-samples/amazon-kinesis-data-analytics-java-examples">Kinesis Data Analytics for Apache Flink GitHub repository&lt;/a>.
Clone it on your local machine using &lt;a href="https://git-scm.com/docs/git-clone">&lt;code>git clone&lt;/code>&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>git clone https://github.com/aws-samples/amazon-kinesis-data-analytics-java-examples&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can navigate to the &lt;code>amazon-kinesis-data-analytics-java-examples/GettingStarted&lt;/code> directory to find the Java code for the Kinesis Data Analytics application.
The application creates source and sink connectors to access external resources using a &lt;code>StreamExecutionEnvironment&lt;/code> object.&lt;/p>
&lt;p>You can now compile the project using Apache Maven and the Java Development Kit (JDK) to create a JAR file.
Run the following command to compile and package the application into a JAR file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mvn package -Dflink.version=1.15.3&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After the application is compiled successfully, you can find the JAR file in the &lt;code>target/aws-kinesis-analytics-java-apps-1.0.jar&lt;/code> directory.&lt;/p>
&lt;h3 id="upload-the-apache-flink-streaming-java-code">Upload the Apache Flink Streaming Java Code&lt;/h3>
&lt;p>You can now create an S3 bucket to upload the JAR file.
Create an S3 bucket using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3/mb.html">&lt;code>mb&lt;/code>&lt;/a> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://ka-app-code-kafka --region us-west-2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now upload the JAR file to the S3 bucket using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3/cp.html">&lt;code>cp&lt;/code>&lt;/a> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp ./target/aws-kinesis-analytics-java-apps-1.0.jar s3://ka-app-code-kafka --region us-west-2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-a-kinesis-data-analytics-application">Create a Kinesis Data Analytics Application&lt;/h3>
&lt;p>You can now use the AWS CLI to create the Kinesis Data Analytics application.
Create a JSON file named &lt;code>create_request.json&lt;/code>, and upload the following code to the file:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ApplicationName&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;test&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ApplicationDescription&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;my java test app&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;RuntimeEnvironment&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;FLINK-1_15&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ServiceExecutionRole&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam::000000000000:role/KA-stream-rw-role&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ApplicationConfiguration&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ApplicationCodeConfiguration&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CodeContent&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;S3ContentLocation&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;BucketARN&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:s3:::ka-app-code-kafka&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;FileKey&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;aws-kinesis-analytics-java-apps-1.0.jar&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;CodeContentType&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ZIPFILE&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;EnvironmentProperties&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;PropertyGroups&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;PropertyGroupId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ProducerConfigProperties&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;PropertyMap&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;flink.stream.initpos&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;LATEST&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;aws.region&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;us-east-1&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;AggregationEnabled&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;false&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;PropertyGroupId&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ConsumerConfigProperties&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;PropertyMap&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;aws.region&amp;#34;&lt;/span> &lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;us-east-1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now create the Kinesis Data Analytics application using the &lt;a href="https://docs.aws.amazon.com/kinesisanalytics/latest/apiv2/API_CreateApplication.html">&lt;code>CreateApplication&lt;/code>&lt;/a> API.
Execute the following command to create the application:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesisanalyticsv2 create-application \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cli-input-json file://create_request.json \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --region us-west-2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The application is now created.
You can now go ahead and run the application!&lt;/p>
&lt;h3 id="writing-sample-data-to-the-input-stream">Writing sample data to the input stream&lt;/h3>
&lt;p>You can now write sample data to the input stream using the following Python script, named &lt;code>script.py&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python3" data-lang="python3">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">datetime&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">json&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">random&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">boto3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">STREAM_NAME&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;ExampleInputStream&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">endpoint_url&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;http://localhost.localstack.cloud:4566&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">get_data&lt;/span>&lt;span style="color:#000;font-weight:bold">():&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#39;event_time&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">datetime&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">now&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">isoformat&lt;/span>&lt;span style="color:#000;font-weight:bold">(),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#39;ticker&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000">random&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">choice&lt;/span>&lt;span style="color:#000;font-weight:bold">([&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;AAPL&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;AMZN&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;MSFT&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;INTC&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;TBV&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">]),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#39;price&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#204a87">round&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">random&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">random&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">100&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">2&lt;/span>&lt;span style="color:#000;font-weight:bold">)}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">def&lt;/span> &lt;span style="color:#000">generate&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">stream_name&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">kinesis_client&lt;/span>&lt;span style="color:#000;font-weight:bold">):&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">while&lt;/span> &lt;span style="color:#204a87;font-weight:bold">True&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">data&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">get_data&lt;/span>&lt;span style="color:#000;font-weight:bold">()&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">kinesis_client&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">put_record&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">StreamName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">stream_name&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">Data&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">json&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">dumps&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">data&lt;/span>&lt;span style="color:#000;font-weight:bold">),&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">PartitionKey&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;partitionkey&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">if&lt;/span> &lt;span style="color:#000">__name__&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">==&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;__main__&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">generate&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">STREAM_NAME&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">boto3&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">client&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;kinesis&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">endpoint_url&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">endpoint_url&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">region_name&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;us-west-2&amp;#39;&lt;/span>&lt;span style="color:#000;font-weight:bold">))&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the following command to execute the script:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>python3 script.py&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Kinesis Data Firehose</title><link>/user-guide/aws/firehose/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/firehose/</guid><description>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Amazon recently renamed Kinesis Data Firehose to Data Firehose.
&lt;/div>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Kinesis Data Firehose is a service provided by AWS that allows you to extract, transform and load streaming data into various destinations, such as Amazon S3, Amazon Redshift, and Elasticsearch. With Kinesis Data Firehose, you can ingest and deliver real-time data from different sources as it automates data delivery, handles buffering and compression, and scales according to the data volume.&lt;/p>
&lt;p>LocalStack allows you to use the Kinesis Data Firehose APIs in your local environment to load and transform real-time data. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_firehose/">API coverage page&lt;/a>, which provides information on the extent of Kinesis Data Firehose&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Kinesis Data Firehouse and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to use Firehose to load Kinesis data into Elasticsearch with S3 Backup with the AWS CLI.&lt;/p>
&lt;h3 id="create-an-elasticsearch-domain">Create an Elasticsearch domain&lt;/h3>
&lt;p>You can create an Elasticsearch domain using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/es/create-elasticsearch-domain.html">&lt;code>create-elasticsearch-domain&lt;/code>&lt;/a> command. Execute the following command to create a domain named &lt;code>es-local&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es create-elasticsearch-domain --domain-name es-local&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Save the value of the &lt;code>Endpoint&lt;/code> field from the response, as it will be required further down to confirm the setup.&lt;/p>
&lt;h3 id="create-the-source-kinensis-stream">Create the source Kinensis stream&lt;/h3>
&lt;p>Now let us create our target S3 bucket and our source Kinesis stream:&lt;/p>
&lt;p>Before creating the stream, we need to create an S3 bucket to store our backup data. You can do this using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3/mb.html">&lt;code>mb&lt;/code>&lt;/a> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://kinesis-activity-backup-local&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can now use the &lt;a href="https://docs.aws.amazon.com/kinesis/latest/APIReference/API_CreateStream.html">&lt;code>CreateStream&lt;/code>&lt;/a> API to create a Kinesis stream named &lt;code>kinesis-es-local-stream&lt;/code> with two shards:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis create-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stream-name kinesis-es-local-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --shard-count 2&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-a-firehouse-delivery-stream">Create a Firehouse delivery stream&lt;/h3>
&lt;p>You can now create the Firehose delivery stream. In this configuration, Elasticsearch serves as the destination, while S3 serves as the repository for our AllDocuments backup. Within the &lt;code>kinesis-stream-source-configuration&lt;/code>, it is required to specify the ARN of our Kinesis stream and the role that will allow you the access to the stream.&lt;/p>
&lt;p>The &lt;code>elasticsearch-destination-configuration&lt;/code> sets vital parameters, which includes the access role, &lt;code>DomainARN&lt;/code> of the Elasticsearch domain where you wish to publish, and the settings including the &lt;code>IndexName&lt;/code> and &lt;code>TypeName&lt;/code> for the Elasticsearch setup. Additionally to backup all documents to S3, the &lt;code>S3BackupMode&lt;/code> parameter is set to &lt;code>AllDocuments&lt;/code>, which is accompanied by &lt;code>S3Configuration&lt;/code>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Within LocalStack&amp;rsquo;s default configuration, IAM roles remain unverified and no strict validation is applied on ARNs. However, when operating within the AWS environment, you need to check the access rights of the specified role for the task.
&lt;/div>
&lt;p>You can use the &lt;a href="https://docs.aws.amazon.com/firehose/latest/APIReference/API_CreateDeliveryStream.html">&lt;code>CreateDeliveryStream&lt;/code>&lt;/a> API to create a Firehose delivery stream named &lt;code>activity-to-elasticsearch-local&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal firehose create-delivery-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --delivery-stream-name activity-to-elasticsearch-local \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --delivery-stream-type KinesisStreamAsSource \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --kinesis-stream-source-configuration &amp;#34;KinesisStreamARN=arn:aws:kinesis:us-east-1:000000000000:stream/kinesis-es-local-stream,RoleARN=arn:aws:iam::000000000000:role/Firehose-Reader-Role&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --elasticsearch-destination-configuration &amp;#34;RoleARN=arn:aws:iam::000000000000:role/Firehose-Reader-Role,DomainARN=arn:aws:es:us-east-1:000000000000:domain/es-local,IndexName=activity,TypeName=activity,S3BackupMode=AllDocuments,S3Configuration={RoleARN=arn:aws:iam::000000000000:role/Firehose-Reader-Role,BucketARN=arn:aws:s3:::kinesis-activity-backup-local}&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>On successful execution, the command will return the &lt;code>DeliveryStreamARN&lt;/code> of the created delivery stream:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;DeliveryStreamARN&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:firehose:us-east-1:000000000000:deliverystream/activity-to-elasticsearch-local&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="testing-the-setup">Testing the setup&lt;/h3>
&lt;p>Before testing the integration, it&amp;rsquo;s necessary to confirm if the local Elasticsearch cluster is up. You can use the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/es/describe-elasticsearch-domain.html">&lt;code>describe-elasticsearch-domain&lt;/code>&lt;/a> command to check the status of the Elasticsearch cluster. Run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal es describe-elasticsearch-domain \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --domain-name es-local | jq &amp;#34;.DomainStatus.Processing&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the command returns &lt;code>false&lt;/code>, you can move forward with data ingestion. The data can be added to the source Kinesis stream or directly to the Firehose delivery stream.&lt;/p>
&lt;p>You can add data to the Kinesis stream using the &lt;a href="https://docs.aws.amazon.com/kinesis/latest/APIReference/API_PutRecord.html">&lt;code>PutRecord&lt;/code>&lt;/a> API. The following command adds a record to the stream:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis put-record \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stream-name kinesis-es-local-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data &amp;#39;{ &amp;#34;target&amp;#34;: &amp;#34;barry&amp;#34; }&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --partition-key partition&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
For users using AWS CLI v2, consider adding &lt;code>--cli-binary-format raw-in-base64-out&lt;/code> to the command mentioned above.
&lt;/div>
&lt;p>You can use the &lt;a href="https://docs.aws.amazon.com/firehose/latest/APIReference/API_PutRecord.html">&lt;code>PutRecord&lt;/code>&lt;/a> API to add data to the Firehose delivery stream. The following command adds a record to the stream:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal firehose put-record \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --delivery-stream-name activity-to-elasticsearch-local \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --record &amp;#39;{ &amp;#34;Data&amp;#34;: &amp;#34;eyJ0YXJnZXQiOiAiSGVsbG8gd29ybGQifQ==&amp;#34; }&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To review the entries in Elasticsearch, you can employ &lt;code>cURL&lt;/code> for simplicity. Remember to replace the URL with the &lt;code>Endpoint&lt;/code> field from the initial &lt;code>create-elasticsearch-domain&lt;/code> operation.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -s http://es-local.us-east-1.es.localhost.localstack.cloud:443/activity/_search | jq &amp;#39;.hits.hits&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You will get an output similar to the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_index&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;activity&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;activity&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;f38e2c49-d101-46aa-9ce2-0d2ea8fcd133&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_score&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_source&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;target&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;Hello world&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">},&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_index&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;activity&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_type&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;activity&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_id&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;d2f1c125-b3b0-4c7c-ba90-8acf4075a682&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_score&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;_source&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;target&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;barry&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you receive a comparable output, your Firehose delivery stream setup is accurate! Additionally, take a look at the designated S3 bucket to ensure the backup process is functioning correctly.&lt;/p>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use Kinesis Data Firehose in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/sample-fuzzy-movie-search-lambda-kinesis-elasticsearch">Search application with Lambda, Kinesis, Firehose, ElasticSearch, S3&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/serverless-streaming-data-pipeline">Streaming Data Pipeline with Kinesis, Tinybird, CloudWatch, Lambda&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Lambda</title><link>/user-guide/aws/lambda/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/lambda/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>AWS Lambda is a Serverless Function as a Service (FaaS) platform that lets you run code in your preferred programming language on the AWS ecosystem. AWS Lambda automatically scales your code to meet demand and handles server provisioning, management, and maintenance. AWS Lambda allows you to break down your application into smaller, independent functions that integrate seamlessly with AWS services.&lt;/p>
&lt;p>LocalStack allows you to use the Lambda APIs to create, deploy, and test your Lambda functions. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_lambda/">Lambda coverage page&lt;/a>, which provides information on the extent of Lambda&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Lambda and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create a Lambda function with a Function URL. With the Function URL property, you can call a Lambda Function via an HTTP API call.&lt;/p>
&lt;h3 id="create-a-lambda-function">Create a Lambda function&lt;/h3>
&lt;p>To create a new Lambda function, create a new file called &lt;code>index.js&lt;/code> with the following code:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-javascript" data-lang="javascript">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">exports&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">handler&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87;font-weight:bold">async&lt;/span> &lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span> &lt;span style="color:#000;font-weight:bold">=&amp;gt;&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">let&lt;/span> &lt;span style="color:#000">body&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">JSON&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">parse&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">event&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">body&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000">product&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">num1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">*&lt;/span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">num2&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">const&lt;/span> &lt;span style="color:#000">response&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">statusCode&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;The product of &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">num1&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34; and &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">body&lt;/span>&lt;span style="color:#000;font-weight:bold">.&lt;/span>&lt;span style="color:#000">num2&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#4e9a06">&amp;#34; is &amp;#34;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">+&lt;/span> &lt;span style="color:#000">product&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">return&lt;/span> &lt;span style="color:#000">response&lt;/span>&lt;span style="color:#000;font-weight:bold">;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">};&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Enter the following command to create a new Lambda function:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>zip function.zip index.js
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name localstack-lambda-url-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime nodejs18.x \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb://function.zip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler index.handler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::000000000000:role/lambda-role&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
In the old Lambda provider, you could create a function with any arbitrary string as the role, such as &lt;code>r1&lt;/code>. However, the new provider requires the role ARN to be in the format &lt;code>arn:aws:iam::000000000000:role/lambda-role&lt;/code> and validates it using an appropriate regex. However, it currently does not check whether the role exists.
&lt;/div>
&lt;h3 id="invoke-the-function">Invoke the Function&lt;/h3>
&lt;p>To invoke the Lambda function, you can use the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html">&lt;code>Invoke&lt;/code> API&lt;/a>. Run the following command to invoke the function:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-2" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active"
id="tabs-02-00-tab" data-toggle="tab" href="#tabs-02-00" role="tab"
aria-controls="tabs-02-00" aria-selected="false">
AWS CLI v1
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link"
id="tabs-02-01-tab" data-toggle="tab" href="#tabs-02-01" role="tab"
aria-controls="tabs-02-01" aria-selected="false">
AWS CLI v2
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-2-content">
&lt;div class="tab-body tab-pane fade show active"
id="tabs-02-00" role="tabpanel" aria-labelled-by="tabs-02-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda invoke --function-name localstack-lambda-url-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --payload &amp;#39;{&amp;#34;body&amp;#34;: &amp;#34;{\&amp;#34;num1\&amp;#34;: \&amp;#34;10\&amp;#34;, \&amp;#34;num2\&amp;#34;: \&amp;#34;10\&amp;#34;}&amp;#34; }&amp;#39; output.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-body tab-pane fade"
id="tabs-02-01" role="tabpanel" aria-labelled-by="tabs-02-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda invoke --function-name localstack-lambda-url-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cli-binary-format raw-in-base64-out \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --payload &amp;#39;{&amp;#34;body&amp;#34;: &amp;#34;{\&amp;#34;num1\&amp;#34;: \&amp;#34;10\&amp;#34;, \&amp;#34;num2\&amp;#34;: \&amp;#34;10\&amp;#34;}&amp;#34; }&amp;#39; output.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;h3 id="create-a-function-url">Create a Function URL&lt;/h3>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-response-streaming.html">Response streaming&lt;/a> is currently not supported, so it will still return a synchronous/full response instead.
&lt;/div>
&lt;p>With the Function URL property, there is now a new way to call a Lambda Function via HTTP API call using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunctionUrlConfig.html">&lt;code>CreateFunctionURLConfig&lt;/code> API&lt;/a>. To create a URL for invoking the function, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function-url-config \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name localstack-lambda-url-example \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --auth-type NONE&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This will generate a HTTP URL that can be used to invoke the Lambda function. The URL will be in the format &lt;code>http://&amp;lt;XXXXXXXX&amp;gt;.lambda-url.us-east-1.localhost.localstack.cloud:4566&lt;/code>.&lt;/p>
&lt;h3 id="trigger-the-lambda-function-url">Trigger the Lambda function URL&lt;/h3>
&lt;p>You can now trigger the Lambda function by sending a HTTP POST request to the URL using &lt;code>cURL&lt;/code> or your REST HTTP client:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl -X POST \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#39;http://&amp;lt;XXXXXXXX&amp;gt;.lambda-url.us-east-1.localhost.localstack.cloud:4566/&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -H &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -d &amp;#39;{&amp;#34;num1&amp;#34;: &amp;#34;10&amp;#34;, &amp;#34;num2&amp;#34;: &amp;#34;10&amp;#34;}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>The product of &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> and &lt;span style="color:#0000cf;font-weight:bold">10&lt;/span> is 100%
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="lambda-event-source-mappings">Lambda Event Source Mappings&lt;/h2>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Information&lt;/h4>
LocalStack now supports a new event rule engine for &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventfiltering.html">Lambda event filtering&lt;/a>.
You can &lt;a href="/references/configuration/">configure&lt;/a> &lt;code>EVENT_RULE_ENGINE=java&lt;/code> (preview) to use the AWS &lt;a href="https://github.com/aws/event-ruler">event-ruler&lt;/a>, which offers better parity.
&lt;/div>
&lt;p>&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/invocation-eventsourcemapping.html">Lambda event source mappings&lt;/a> allows you to connect Lambda functions to other AWS services. The following event sources are supported in LocalStack:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/with-ddb.html">DynamoDB&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/with-kinesis.html">Kinesis&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/with-msk.html">Managed Streaming for Apache Kafka (MSK)&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/with-sqs.html">Simple Queue Service (SQS)&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="lambda-layers-pro">Lambda Layers (Pro)&lt;/h2>
&lt;p>&lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/configuration-layers.html">Lambda layers&lt;/a> lets you include additional code and dependencies in your Lambda functions. LocalStack Pro image allows you to deploy Lambda Layers locally to streamline your development and testing process.
However, the layers are not applied when invoking a Lambda function.&lt;/p>
&lt;h3 id="creating-and-using-a-lambda-layer-locally">Creating and using a Lambda Layer Locally&lt;/h3>
&lt;p>To create a Lambda Layer locally, you can use the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_PublishLayerVersion.html">&lt;code>PublishLayerVersion&lt;/code> API&lt;/a> in LocalStack. Here&amp;rsquo;s a simple example using Python:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>mkdir -p /tmp/python/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39;def util():&amp;#39; &amp;gt; /tmp/python/testlayer.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39; print(&amp;#34;Output from Lambda layer util function&amp;#34;)&amp;#39; &amp;gt;&amp;gt; /tmp/python/testlayer.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>(cd /tmp; zip -r testlayer.zip python)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>LAYER_ARN=$(awslocal lambda publish-layer-version --layer-name layer1 --zip-file fileb:///tmp/testlayer.zip | jq -r .LayerVersionArn)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Next, define a Lambda function that uses our layer:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39;def handler(*args, **kwargs):&amp;#39; &amp;gt; /tmp/testlambda.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39; import testlayer; testlayer.util()&amp;#39; &amp;gt;&amp;gt; /tmp/testlambda.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#39; print(&amp;#34;Debug output from Lambda function&amp;#34;)&amp;#39; &amp;gt;&amp;gt; /tmp/testlambda.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>(cd /tmp; zip testlambda.zip testlambda.py)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-function \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name func1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --runtime python3.8 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --role arn:aws:iam::000000000000:role/lambda-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --handler testlambda.handler \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --timeout 30 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zip-file fileb:///tmp/testlambda.zip \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --layers $LAYER_ARN&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Here, we&amp;rsquo;ve defined a Lambda function called &lt;code>handler()&lt;/code> that imports the &lt;code>util()&lt;/code> function from our &lt;code>layer1&lt;/code> Lambda Layer. We then used the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html">&lt;code>CreateFunction&lt;/code> API&lt;/a> to create this Lambda function in LocalStack, specifying the &lt;code>layer1&lt;/code> Lambda Layer as a dependency.&lt;/p>
&lt;p>To test our Lambda function and see the output from the Lambda Layer, we can invoke the function and check the logs (with &lt;code>DEBUG=1&lt;/code> enabled). Here&amp;rsquo;s an example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>&amp;gt; START RequestId: a8bc4ce6-e2e8-189e-cf58-c2eb72827c23 Version: &lt;span style="color:#000">$LATEST&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Output from Lambda layer util &lt;span style="color:#204a87;font-weight:bold">function&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; Debug output from Lambda &lt;span style="color:#204a87;font-weight:bold">function&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;gt; END RequestId: a8bc4ce6-e2e8-189e-cf58-c2eb72827c23
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="referencing-lambda-layers-from-aws">Referencing Lambda layers from AWS&lt;/h3>
&lt;p>If your Lambda function references a layer in real AWS, you can integrate it into your local dev environment by making it accessible to the &lt;code>886468871268&lt;/code> AWS account ID. This account is managed by LocalStack on AWS.&lt;/p>
&lt;p>To grant access to your layer, run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>aws lambda add-layer-version-permission \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --layer-name test-layer \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --version-number 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --statement-id layerAccessFromLocalStack \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --principal 886468871268 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --action lambda:GetLayerVersion&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace &lt;code>test-layer&lt;/code> and &lt;code>1&lt;/code> with the name and version number of your layer, respectively.&lt;/p>
&lt;p>After granting access, the next time you reference the layer in one of your local Lambda functions using the AWS Lambda layer ARN, the layer will be automatically pulled down and integrated into your local dev environment.&lt;/p>
&lt;h2 id="special-tools">Special Tools&lt;/h2>
&lt;p>LocalStack provides various tools to help you develop, debug, and test your AWS Lambda functions more efficiently.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Hot reloading&lt;/strong>: With Lambda hot reloading, you can continuously apply code changes to your Lambda functions without needing to redeploy them manually. To learn more about how to use hot reloading with LocalStack, check out our &lt;a href="/user-guide/lambda-tools/hot-reloading/">hot reloading documentation&lt;/a>.&lt;/li>
&lt;li>&lt;strong>Remote debugging&lt;/strong>: LocalStack&amp;rsquo;s remote debugging functionality allows you to attach a debugger to your Lambda function using your preferred IDE. To get started with remote debugging in LocalStack, see our &lt;a href="/user-guide/lambda-tools/debugging/">debugging documentation&lt;/a>.&lt;/li>
&lt;li>&lt;strong>Lambda VS Code Extension&lt;/strong>: LocalStack&amp;rsquo;s Lambda VS Code Extension supports deploying and invoking Python Lambda functions through AWS SAM or AWS CloudFormation. To get started with the Lambda VS Code Extension, see our &lt;a href="/user-guide/lambda-tools/vscode-extension/">Lambda VS Code Extension documentation&lt;/a>.&lt;/li>
&lt;li>&lt;strong>API for querying Lambda runtimes&lt;/strong>: LocalStack offers a metadata API to query the list of Lambda runtimes via &lt;code>GET http://localhost.localstack.cloud:4566/_aws/lambda/runtimes&lt;/code>. It returns the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/lambda-runtimes.html">Supported Runtimes&lt;/a> matching AWS parity (i.e., excluding deprecated runtimes) and offers additional filters for &lt;code>deprecated&lt;/code> runtimes and &lt;code>all&lt;/code> runtimes (&lt;code>GET /_aws/lambda/runtimes?filter=all&lt;/code>).&lt;/li>
&lt;/ul>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a &lt;a href="https://docs.localstack.cloud/user-guide/web-application/resource-browser/">Resource Browser&lt;/a> for managing Lambda resources. You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>Lambda&lt;/strong> under the &lt;strong>Compute&lt;/strong> section.&lt;/p>
&lt;p>The Resource Browser displays &lt;a href="https://app.localstack.cloud/resources/lambda/functions">Functions&lt;/a> and &lt;a href="https://app.localstack.cloud/resources/lambda/layers">Layers&lt;/a> resources. You can click on individual resources to view their details.&lt;/p>
&lt;img src="lambda-resource-browser.png" alt="Lambda Resource Browser" title="Lambda Resource Browser" width="900" />
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Functions &amp;amp; Layers&lt;/strong>: Create a new &lt;a href="https://app.localstack.cloud/resources/lambda/functions/new">Lambda function&lt;/a> or a new &lt;a href="https://app.localstack.cloud/resources/lambda/layers/new">Lambda Layer&lt;/a> by clicking on &lt;strong>Create API&lt;/strong> button on top-right and creating a new configuration by clicking on &lt;strong>Submit&lt;/strong> button.&lt;/li>
&lt;li>&lt;strong>View Function &amp;amp; Layer Details&lt;/strong>: Click on any function or layer to view detailed information such as the resource&amp;rsquo;s name, ARN, runtime, handler, and more. You can also navigate across different versions of the resource.&lt;/li>
&lt;li>&lt;strong>Delete Functions &amp;amp; Layers&lt;/strong>: To delete a function or layer, select the resource from the Resource Browser, click on the &lt;strong>Remove Selected&lt;/strong> button at the top-right of the screen, and confirm the deletion by clicking on the &lt;strong>Continue&lt;/strong> button.&lt;/li>
&lt;/ul>
&lt;h2 id="migrating-to-lambda-v2">Migrating to Lambda v2&lt;/h2>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The legacy Lambda implementation has been removed since LocalStack 3.0 (Docker &lt;code>latest&lt;/code> since 2023-11-09).
&lt;/div>
&lt;p>As part of the &lt;a href="https://discuss.localstack.cloud/t/new-lambda-implementation-in-localstack-2-0/258">LocalStack 2.0 release&lt;/a>, the Lambda provider has been migrated to &lt;code>v2&lt;/code> (formerly known as &lt;code>asf&lt;/code>).
With the new implementation, the following changes have been introduced:&lt;/p>
&lt;ul>
&lt;li>To run Lambda functions in LocalStack, mount the Docker socket into the LocalStack container. Add the following Docker volume mount to your LocalStack startup configuration: &lt;code>/var/run/docker.sock:/var/run/docker.sock&lt;/code>. You can find an example of this configuration in our official &lt;a href="https://docs.localstack.cloud/getting-started/installation/#starting-localstack-with-docker-compose">&lt;code>docker-compose.yml&lt;/code> file&lt;/a>.&lt;/li>
&lt;li>The &lt;code>v2&lt;/code> provider discontinues Lambda Executor Modes such as &lt;code>LAMBDA_EXECUTOR=local&lt;/code>. Previously, this mode was used as a fallback when the Docker socket was unavailable in the LocalStack container, but many users unintentionally used it instead of the configured &lt;code>LAMBDA_EXECUTOR=docker&lt;/code>. The new provider now behaves similarly to the old &lt;code>docker-reuse&lt;/code> executor and does not require such configuration.&lt;/li>
&lt;li>The Lambda containers are now reused between invocations. The changes made to the filesystem (such as in &lt;code>/tmp&lt;/code>) will persist between subsequent invocations if the function is dispatched to the same container. This is known as a &lt;strong>warm start&lt;/strong> (see &lt;a href="https://aws.amazon.com/blogs/compute/operating-lambda-performance-optimization-part-1/">Operating Lambda&lt;/a> for more information). To ensure that each invocation starts with a fresh container, you can set the &lt;code>LAMBDA_KEEPALIVE_MS&lt;/code> configuration option to 0 milliseconds, to force &lt;strong>cold starts&lt;/strong>.&lt;/li>
&lt;li>The platform uses &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-images.html">official Docker base images&lt;/a> pulled from &lt;code>public.ecr.aws/lambda/&lt;/code>, instead of &lt;code>lambci&lt;/code>, and supports both &lt;code>arm64&lt;/code> and &lt;code>x86_64&lt;/code> architectures. The Lambda functions filesystem now matches the AWS Lambda production environment. The ARM containers for compatible runtimes are based on Amazon Linux 2, and ARM-compatible hosts can create functions with the &lt;code>arm64&lt;/code> architecture.&lt;/li>
&lt;li>Lambda functions in LocalStack resolve AWS domains, such as &lt;code>s3.amazonaws.com&lt;/code>, to the LocalStack container. This domain resolution is DNS-based and can be disabled by setting &lt;code>DNS_ADDRESS=0&lt;/code>. For more information, refer to &lt;a href="/user-guide/tools/transparent-endpoint-injection/">Transparent Endpoint Injection&lt;/a>. Previously, LocalStack provided patched AWS SDKs to redirect AWS API calls transparently to LocalStack.&lt;/li>
&lt;li>The new provider may generate more exceptions due to invalid input. For instance, while the old provider accepted arbitrary strings (such as &lt;code>r1&lt;/code>) as Lambda roles when creating a function, the new provider validates role ARNs using a regular expression that requires them to be in the format &lt;code>arn:aws:iam::000000000000:role/lambda-role&lt;/code>. However, it currently does not verify whether the role actually exists.&lt;/li>
&lt;li>The new Lambda provider now follows the &lt;a href="https://aws.amazon.com/blogs/compute/tracking-the-state-of-lambda-functions/">AWS Lambda state model&lt;/a>, while creating and updating Lambda functions, which allows for asynchronous processing. Functions are always created in the &lt;code>Pending state&lt;/code> and move to &lt;code>Active&lt;/code> once they are ready to accept invocations. Previously, the functions were created synchronously by blocking until the function state was active. The configuration &lt;code>LAMBDA_SYNCHRONOUS_CREATE=1&lt;/code> can force synchronous function creation, but it is not recommended.&lt;/li>
&lt;li>LocalStack&amp;rsquo;s Lambda implementation, allows you to customize the Lambda execution environment using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/runtimes-extensions-api.html">Lambda Extensions API&lt;/a>. This API allows for advanced monitoring, observability, or developer tooling, providing greater control and flexibility over your Lambda functions. Lambda functions can also be run on hosts with &lt;a href="https://docs.localstack.cloud/references/arm64-support/#lambda-multi-architecture-support">multi-architecture support&lt;/a>, allowing you to leverage LocalStack&amp;rsquo;s Lambda API to develop and test Lambda functions with high parity.&lt;/li>
&lt;/ul>
&lt;p>The following configuration options from the old provider are discontinued in the new provider:&lt;/p>
&lt;ul>
&lt;li>The &lt;code>LAMBDA_EXECUTOR&lt;/code> and specifically, the &lt;code>LAMBDA_EXECUTOR=local&lt;/code> options are no longer supported.&lt;/li>
&lt;li>The &lt;code>LAMBDA_STAY_OPEN_MODE&lt;/code> is now the default behavior and can be removed. Instead, use the &lt;code>LAMBDA_KEEPALIVE_MS&lt;/code> option to configure how long containers should be kept running in between invocations.&lt;/li>
&lt;li>The &lt;code>LAMBDA_REMOTE_DOCKER&lt;/code> option is not used anymore since the new provider automatically copies zip files and configures hot reloading.&lt;/li>
&lt;li>The &lt;code>LAMBDA_CODE_EXTRACT_TIME&lt;/code> option is no longer used because function creation is now asynchronous.&lt;/li>
&lt;li>The &lt;code>LAMBDA_FALLBACK_URL&lt;/code>, &lt;code>SYNCHRONOUS_KINESIS_EVENTS&lt;/code>, &lt;code>SYNCHRONOUS_SNS_EVENTS&lt;/code> and &lt;code>LAMBDA_FORWARD_URL&lt;/code> options are currently not supported.&lt;/li>
&lt;li>The &lt;code>LAMBDA_CONTAINER_REGISTRY&lt;/code> option is not used anymore. Instead, use the more flexible &lt;code>LAMBDA_RUNTIME_IMAGE_MAPPING&lt;/code> option to customize individual runtimes.&lt;/li>
&lt;li>The &lt;code>LAMBDA_XRAY_INIT&lt;/code> option is no longer needed because the X-Ray daemon is always initialized.&lt;/li>
&lt;/ul>
&lt;p>However, the new provider still supports the following configuration options:&lt;/p>
&lt;ul>
&lt;li>The &lt;code>BUCKET_MARKER_LOCAL&lt;/code> option has a new default value, &lt;code>hot-reload&lt;/code>. The former default value &lt;code>__local__&lt;/code> is an invalid bucket name.&lt;/li>
&lt;li>The &lt;code>LAMBDA_TRUNCATE_STDOUT&lt;/code> option.&lt;/li>
&lt;li>The &lt;code>LAMBDA_DOCKER_NETWORK&lt;/code> option.&lt;/li>
&lt;li>The &lt;code>LAMBDA_DOCKER_FLAGS&lt;/code> option.&lt;/li>
&lt;li>The &lt;code>LAMBDA_REMOVE_CONTAINERS&lt;/code> option.&lt;/li>
&lt;li>The &lt;code>LAMBDA_DOCKER_DNS&lt;/code> option since LocalStack 2.2.&lt;/li>
&lt;li>The &lt;code>HOSTNAME_FROM_LAMBDA&lt;/code> option since LocalStack 3.0.&lt;/li>
&lt;/ul>
&lt;h2 id="examples">Examples&lt;/h2>
&lt;p>The following code snippets and sample applications provide practical examples of how to use Lambda in LocalStack for various use cases:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-hot-reloading">Lambda Hot Reloading&lt;/a> shows how to use hot reloading to update function code and layers without having to redeploy them.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-mounting-and-debugging">Lambda Code Mounting and Debugging&lt;/a> demonstrates how to debug Lambda functions locally using code mounting.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack-samples/localstack-pro-samples/tree/master/lambda-function-urls-javascript">Lambda Function URL&lt;/a> shows how to use HTTP to invoke a Lambda function via its Function URL.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/blob/master/serverless-lambda-layers">Lambda Layers&lt;/a> demonstrates how to use Lambda layers, which are reusable packages of code that can be shared across multiple functions.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-php-bref-cdk-app">Lambda PHP/Bref&lt;/a> shows how to use PHP/Bref with and without fpm, using the Serverless framework and AWS CDK.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-container-image">Lambda Container Images&lt;/a> demonstrates how to use Lambda functions packaged as container images, which can be built using Docker and pushed to a local ECR registry.&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack/localstack-pro-samples/tree/master/lambda-xray">Lambda X-Ray&lt;/a> shows how to instrument Lambda functions for X-Ray using Powertools and the X-Ray SDK.&lt;/li>
&lt;/ul>
&lt;h2 id="troubleshooting">Troubleshooting&lt;/h2>
&lt;h3 id="docker-not-available">Docker not available&lt;/h3>
&lt;p>In the old Lambda provider, Lambda functions were executed within the LocalStack container using the local executor mode. This mode was used as a fallback if the Docker socket was unavailable in the LocalStack container. However, many users inadvertently used the local executor mode instead of the intended Docker executor mode, which caused unexpected behavior.&lt;/p>
&lt;p>If you encounter the following error message, you may be using the local executor mode:&lt;/p>
&lt;ul class="nav nav-tabs" id="tabs-15" role="tablist">
&lt;li class="nav-item">
&lt;a class="nav-link active persistLang-shell"
id="tabs-15-00-tab" data-toggle="tab" href="#tabs-15-00" role="tab"
onclick="persistLang(&amp;#34;shell&amp;#34;);"aria-controls="tabs-15-00" aria-selected="false">
LocalStack Logs
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link"
id="tabs-15-01-tab" data-toggle="tab" href="#tabs-15-01" role="tab"
aria-controls="tabs-15-01" aria-selected="false">
AWS CLI
&lt;/a>
&lt;/li>&lt;li class="nav-item">
&lt;a class="nav-link"
id="tabs-15-02-tab" data-toggle="tab" href="#tabs-15-02" role="tab"
aria-controls="tabs-15-02" aria-selected="false">
SAM
&lt;/a>
&lt;/li>
&lt;/ul>
&lt;div class="tab-content" id="tabs-15-content">
&lt;div class="tab-pane fade show active"
id="tabs-15-00" role="tabpanel" aria-labelled-by="tabs-15-00-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>Lambda &lt;span style="color:#4e9a06">&amp;#39;arn:aws:lambda:us-east-1:000000000000:function:my-function:$LATEST&amp;#39;&lt;/span> changed to failed. Reason: Docker not available
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>raise DockerNotAvailable&lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Docker not available&amp;#34;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-15-01" role="tabpanel" aria-labelled-by="tabs-15-01-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>An error occurred &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ResourceConflictException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span> when calling the Invoke operation &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>reached max retries: 0&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>: The operation cannot be performed at this time. The &lt;span style="color:#204a87;font-weight:bold">function&lt;/span> is currently in the following state: Failed&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;div class="tab-pane fade"
id="tabs-15-02" role="tabpanel" aria-labelled-by="tabs-15-02-tab">
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-shell" data-lang="shell">&lt;span style="display:flex;">&lt;span>Error: Failed to create/update the stack: sam-app, Waiter StackCreateComplete failed: Waiter encountered a terminal failure state: For expression &lt;span style="color:#4e9a06">&amp;#34;Stacks[].StackStatus&amp;#34;&lt;/span> we matched expected path: &lt;span style="color:#4e9a06">&amp;#34;CREATE_FAILED&amp;#34;&lt;/span> at least once&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;/div>
&lt;p>To fix this issue, add the Docker volume mount &lt;code>/var/run/docker.sock:/var/run/docker.sock&lt;/code> to your LocalStack startup. Refer to our &lt;a href="https://github.com/localstack/localstack/blob/master/docker-compose.yml">sample &lt;code>docker-compose.yml&lt;/code> file&lt;/a> as an example.&lt;/p>
&lt;h3 id="function-in-pending-state">Function in Pending state&lt;/h3>
&lt;p>If you receive a &lt;code>ResourceConflictException&lt;/code> when trying to invoke a function, it is currently in a &lt;code>Pending&lt;/code> state and cannot be executed yet. To wait until the function becomes &lt;code>active&lt;/code>, you can use the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda get-function --function-name my-function
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>An error occurred (ResourceConflictException) when calling the Invoke operation (reached max retries: 0):
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The operation cannot be performed at this time.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>The function is currently in the following state: Pending
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda wait function-active-v2 --function-name my-function&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Alternatively, you can check the function state using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_GetFunction.html">&lt;code>GetFunction&lt;/code> API&lt;/a>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda get-function --function-name my-function
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Configuration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RevisionId&amp;#34;: &amp;#34;c61d6139-1441-4ad5-983a-5a1cec7a1847&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;Pending&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;StateReason&amp;#34;: &amp;#34;The function is being created.&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;StateReasonCode&amp;#34;: &amp;#34;Creating&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda get-function --function-name my-function
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Configuration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RevisionId&amp;#34;: &amp;#34;c6633a28-b8d2-40f7-b8e1-02f6f32e8473&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;State&amp;#34;: &amp;#34;Active&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;LastUpdateStatus&amp;#34;: &amp;#34;Successful&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If the function is still in the &lt;code>Pending&lt;/code> state, the output will include a &lt;code>&amp;quot;State&amp;quot;: &amp;quot;Pending&amp;quot;&lt;/code> field and a &lt;code>&amp;quot;StateReason&amp;quot;: &amp;quot;The function is being created.&amp;quot;&lt;/code> message. Once the function is active, the &lt;code>&amp;quot;State&amp;quot;&lt;/code> field will change to &lt;code>&amp;quot;Active&amp;quot;&lt;/code> and the &lt;code>&amp;quot;LastUpdateStatus&amp;quot;&lt;/code> field will indicate the status of the last update.&lt;/p>
&lt;h3 id="not-implemented-error">Not implemented error&lt;/h3>
&lt;p>If you are using LocalStack versions prior to 2.0, and encounter a &lt;code>NotImplementedError&lt;/code> in the LocalStack logs and an &lt;code>InternalFailure (501) error&lt;/code> in the client while creating a Lambda function using the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_CreateFunction.html">&lt;code>CreateFunction&lt;/code> API&lt;/a>, check your &lt;code>PROVIDER_OVERRIDE_LAMBDA&lt;/code> configuration. You might encounter this error if it is set to &lt;code>legacy&lt;/code>.&lt;/p></description></item><item><title>User-Guide: Managed Blockchain (AMB)</title><link>/user-guide/aws/managedblockchain/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/managedblockchain/</guid><description>
&lt;p>Managed Blockchain (AMB) is a managed service that enables the creation and management of blockchain networks, such as Hyperledger Fabric, Bitcoin, Polygon and Ethereum. Blockchain enables the development of applications in which multiple entities can conduct transactions and exchange data securely and transparently, eliminating the requirement for a central, trusted authority.&lt;/p>
&lt;p>LocalStack allows you to use the AMB APIs to develop and deploy decentralized applications in your local environment. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_managedblockchain/">API Coverage Page&lt;/a>, which provides information on the extent of AMB integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to AMB and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to create a blockchain network, a node, and a proposal.&lt;/p>
&lt;h3 id="create-a-blockchain-network">Create a blockchain network&lt;/h3>
&lt;p>You can create a blockchain network using the &lt;a href="https://docs.aws.amazon.com/managed-blockchain/latest/APIReference/API_CreateNetwork.html">&lt;code>CreateNetwork&lt;/code>&lt;/a> API. Run the following command to create a network named &lt;code>OurBlockchainNet&lt;/code> which uses the Hyperledger Fabric with the following configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal managedblockchain create-network \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cli-input-json &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;OurBlockchainNet&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Description&amp;#34;: &amp;#34;OurBlockchainNetDesc&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Framework&amp;#34;: &amp;#34;HYPERLEDGER_FABRIC&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;FrameworkVersion&amp;#34;: &amp;#34;1.2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;FrameworkConfiguration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Fabric&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Edition&amp;#34;: &amp;#34;STARTER&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;VotingPolicy&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ApprovalThresholdPolicy&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ThresholdPercentage&amp;#34;: 50,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ProposalDurationInHours&amp;#34;: 24,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ThresholdComparator&amp;#34;: &amp;#34;GREATER_THAN&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;MemberConfiguration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;org1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Description&amp;#34;: &amp;#34;Org1 first member of network&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;FrameworkConfiguration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Fabric&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AdminUsername&amp;#34;: &amp;#34;MyAdminUser&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AdminPassword&amp;#34;: &amp;#34;Password123&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;LogPublishingConfiguration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Fabric&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CaLogs&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Cloudwatch&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;NetworkId&amp;#34;: &amp;#34;n-X24AF1AK2GC6MDW11HYW5I5DQC&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;MemberId&amp;#34;: &amp;#34;m-6VWBWHP2Y15F7TQ2DS093RTCW2&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Copy the &lt;code>NetworkId&lt;/code> and &lt;code>MemberId&lt;/code> values from the output of the above command, as we will need them in the next step.&lt;/p>
&lt;h3 id="create-a-node">Create a node&lt;/h3>
&lt;p>You can create a node using the &lt;a href="https://docs.aws.amazon.com/managed-blockchain/latest/APIReference/API_CreateNode.html">&lt;code>CreateNode&lt;/code>&lt;/a> API. Run the following command to create a node with the following configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal managedblockchain create-node \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --node-configuration &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;InstanceType&amp;#34;: &amp;#34;bc.t3.small&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AvailabilityZone&amp;#34;: &amp;#34;us-east-1a&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;LogPublishingConfiguration&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Fabric&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ChaincodeLogs&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Cloudwatch&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;PeerLogs&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Cloudwatch&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Enabled&amp;#34;: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --network-id n-X24AF1AK2GC6MDW11HYW5I5DQC \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --member-id m-6VWBWHP2Y15F7TQ2DS093RTCW2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;NodeId&amp;#34;: &amp;#34;nd-77K8AI0O5BEQD1IW4L8OGKMXV7&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace the &lt;code>NetworkId&lt;/code> and &lt;code>MemberId&lt;/code> values in the above command with the values you copied in the previous step.&lt;/p>
&lt;h3 id="create-a-proposal">Create a proposal&lt;/h3>
&lt;p>You can create a proposal using the &lt;a href="https://docs.aws.amazon.com/managed-blockchain/latest/APIReference/API_CreateProposal.html">&lt;code>CreateProposal&lt;/code>&lt;/a> API. Run the following command to create a proposal with the following configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal managedblockchain create-proposal \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --actions &amp;#34;Invitations=[{Principal=000000000000}]&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --network-id n-X24AF1AK2GC6MDW11HYW5I5DQC \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --member-id m-6VWBWHP2Y15F7TQ2DS093RTCW2
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ProposalId&amp;#34;: &amp;#34;p-NK0PSLDPETJQX01Q4OLBRHP8CZ&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace the &lt;code>NetworkId&lt;/code> and &lt;code>MemberId&lt;/code> values in the above command with the values you copied in the previous step.&lt;/p></description></item><item><title>User-Guide: Managed Streaming for Kafka (MSK)</title><link>/user-guide/aws/msk/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/msk/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Managed Streaming for Apache Kafka (MSK) is a fully managed Apache Kafka service that allows you to build and run applications that process streaming data. MSK offers a centralized platform to facilitate seamless communication between various AWS services and applications through event-driven architectures, facilitating data ingestion, processing, and analytics for various applications. MSK also features automatic scaling and built-in monitoring, allowing users to build robust, high-throughput data pipelines.&lt;/p>
&lt;p>LocalStack allows you to use the MSK APIs in your local environment to spin up Kafka clusters on the local machine, create topics for exchanging messages, and define event source mappings that trigger Lambda functions when messages are received on a certain topic. The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_kafka/">API coverage page&lt;/a>, which provides information on the extent of MSK&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Managed Streaming for Kafka and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how to configure an MSK Cluster locally, create a Kafka topic, and produce and consume messages.&lt;/p>
&lt;h3 id="create-a-local-msk-cluster">Create a local MSK Cluster&lt;/h3>
&lt;p>To set up a local MSK (Managed Streaming for Apache Kafka) cluster, you can use the &lt;a href="https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#CreateCluster">&lt;code>CreateCluster&lt;/code>&lt;/a> API to create a cluster named &lt;code>EventsCluster&lt;/code> with three broker nodes.&lt;/p>
&lt;p>In this process, you&amp;rsquo;ll need a JSON file named &lt;code>brokernodegroupinfo.json&lt;/code> which specifies the three subnets where you want your local Amazon MSK to distribute the broker nodes. Create the file and add the following content to it:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-json" data-lang="json">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;InstanceType&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;kafka.m5.xlarge&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;BrokerAZDistribution&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;DEFAULT&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87;font-weight:bold">&amp;#34;ClientSubnets&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;subnet-0123456789111abcd&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;subnet-0123456789222abcd&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;subnet-0123456789333abcd&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the following command to create the cluster:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kafka create-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cluster-name &amp;#34;EventsCluster&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --broker-node-group-info file://brokernodegroupinfo.json \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --kafka-version &amp;#34;2.8.0&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --number-of-broker-nodes 3&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output of the command looks similar to this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ClusterArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:kafka:us-east-1:000000000000:cluster/EventsCluster/b154d18a-8ecb-4691-96b2-50348357fc2f-25&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ClusterName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;EventsCluster&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;State&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;CREATING&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The cluster creation process might take a few minutes. You can describe the cluster using the &lt;a href="https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#DescribeCluster">&lt;code>DescribeCluster&lt;/code>&lt;/a> API. Run the following command, replacing &lt;code>ClusterArn&lt;/code> with the Amazon Resource Name (ARN) you obtained above when you created cluster.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kafka describe-cluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cluster-arn &amp;#34;arn:aws:kafka:us-east-1:000000000000:cluster/EventsCluster/b154d18a-8ecb-4691-96b2-50348357fc2f-25&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The output of the command looks similar to this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ClusterInfo&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;BrokerNodeGroupInfo&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;BrokerAZDistribution&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;DEFAULT&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ClientSubnets&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;subnet-01&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;subnet-02&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;subnet-03&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;InstanceType&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;kafka.m5.xlarge&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ClusterArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:kafka:us-east-1:000000000000:cluster/EventsCluster/b154d18a-8ecb-4691-96b2-50348357fc2f-25&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ClusterName&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;EventsCluster&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CreationTime&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2022-06-29T02:45:16.848000Z&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CurrentBrokerSoftwareInfo&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;KafkaVersion&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2.5.0&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;CurrentVersion&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;K5OWSPKW0IK7LM&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;NumberOfBrokerNodes&amp;#34;&lt;/span>: 3,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;State&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;ACTIVE&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ZookeeperConnectString&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;localhost:4510&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="create-a-kafka-topic">Create a Kafka topic&lt;/h3>
&lt;p>To use LocalStack MSK, you can download and utilize the Kafka command line interface (CLI) to create a topic for producing and consuming data.&lt;/p>
&lt;p>To download Apache Kafka, execute the following commands.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>wget https://archive.apache.org/dist/kafka/2.8.0/kafka_2.12-2.8.0.tgz
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>tar -xzf kafka_2.12-2.8.0.tgz&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Navigate to the &lt;strong>kafka_2.12-2.8.0&lt;/strong> directory. Execute the following command, replacing &lt;code>ZookeeperConnectString&lt;/code> with the value you saved after running the &lt;a href="https://docs.aws.amazon.com/msk/1.0/apireference/clusters.html#DescribeCluster">&lt;code>DescribeCluster&lt;/code>&lt;/a> API:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>bin/kafka-topics.sh \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --create \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --zookeeper localhost:4510 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --replication-factor 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --partitions 1 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --topic LocalMSKTopic&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After executing the command, your output should resemble the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Created topic LocalMSKTopic.
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="interacting-with-the-topic">Interacting with the topic&lt;/h3>
&lt;p>You can now utilize the JVM truststore to establish communication with the MSK cluster. Create a folder named &lt;code>/tmp&lt;/code> on the client machine, and navigate to the bin folder of the Apache Kafka installation.&lt;/p>
&lt;p>Run the following command, replacing &lt;code>java_home&lt;/code> with the path of your &lt;code>java_home&lt;/code>. For this instance, the java_home path is &lt;code>/Library/Internet\ Plug-Ins/JavaAppletPlugin.plugin/Contents/Home&lt;/code>.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
The following step is optional and may not be required, depending on the operating system environment being used.
&lt;/div>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cp java_home/lib/security/cacerts /tmp/kafka.client.truststore.jks&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>While you are still in the &lt;code>bin&lt;/code> folder of the Apache Kafka installation on the client machine, create a text file named &lt;code>client.properties&lt;/code> with the following contents:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>ssl.truststore.location=/tmp/kafka.client.truststore.jks
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Run the following command, replacing &lt;code>ClusterArn&lt;/code> with the Amazon Resource Name (ARN) you have.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kafka get-bootstrap-brokers \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --cluster-arn ClusterArn&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To proceed with the following commands, save the value associated with the string named &lt;code>BootstrapBrokerStringTls&lt;/code> from the JSON result obtained from the previous command. It should look like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;BootstrapBrokerString&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;localhost:4511&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Now, navigate to the bin folder and run the next command, replacing &lt;code>BootstrapBrokerStringTls&lt;/code> with the value you obtained:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>./kafka-console-producer.sh \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --broker-list BootstrapBrokerStringTls \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --producer.config client.properties \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --topic LocalMSKTopic&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To send messages to your Apache Kafka cluster, enter any desired message and press Enter. You can repeat this process twice or thrice, sending each line as a separate message to the Kafka cluster.&lt;/p>
&lt;p>Keep the connection to the client machine open, and open a separate connection to the same machine in a new window.&lt;/p>
&lt;p>In this new connection, navigate to the &lt;code>bin&lt;/code> folder and run a command, replacing &lt;code>BootstrapBrokerStringTls&lt;/code> with the value you saved earlier. This command will allow you to interact with the Apache Kafka cluster using the saved value for secure communication.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>./kafka-console-consumer.sh \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --bootstrap-server BootstrapBrokerStringTls \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --consumer.config client.properties \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --topic LocalMSKTopic \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --from-beginning&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You should start seeing the messages you entered earlier when you used the console producer command. These messages are TLS encrypted in transit. Enter more messages in the producer window, and watch them appear in the consumer window.&lt;/p>
&lt;h3 id="adding-a-local-msk-trigger">Adding a local MSK trigger&lt;/h3>
&lt;p>You can add a Lambda Event Source Mapping API to create a mapping between a Lambda function, named &lt;code>my-kafka-function&lt;/code>, and a Kafka topic called &lt;code>LocalMSKTopic&lt;/code>. The configuration for this mapping sets the starting position of the topic to &lt;code>LATEST&lt;/code>.&lt;/p>
&lt;p>Run the following command to use the &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/API_CreateEventSourceMapping.html">&lt;code>CreateEventSourceMapping&lt;/code>&lt;/a> API by specifying the Event Source ARN, the topic name, the starting position, and the Lambda function name.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal lambda create-event-source-mapping \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --event-source-arn arn:aws:kafka:us-east-1:000000000000:cluster/EventsCluster \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --topics LocalMSKTopic \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --starting-position LATEST \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --function-name my-kafka-function&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Upon successful completion of the operation to create the Lambda Event Source Mapping, you can expect the following response:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;UUID&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;9c353a2b-bc1a-48b5-95a6-04baf67f01e4&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;StartingPosition&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;LATEST&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;BatchSize&amp;#34;&lt;/span>: 100,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;ParallelizationFactor&amp;#34;&lt;/span>: 1,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;EventSourceArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:kafka:us-east-1:000000000000:cluster/EventsCluster&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;FunctionArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:lambda:us-east-1:000000000000:function:my-kafka-function&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;LastModified&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;2021-11-21T20:55:49.438914+01:00&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;LastProcessingResult&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;OK&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;State&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Enabled&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;StateTransitionReason&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;User action&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Topics&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;LocalMSKTopic&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>With the event source mapping feature, LocalStack offers an automated process for spawning Lambda functions whenever a message is published to the designated Kafka topic.&lt;/p>
&lt;p>You can use the &lt;code>kafka-console-producer.sh&lt;/code> client script to publish messages to the topic. By doing so, you can closely monitor the execution of Lambda functions within Docker containers as new messages arrive by simply observing the LocalStack log output.&lt;/p>
&lt;h2 id="delete-the-local-msk-cluster">Delete the local MSK cluster&lt;/h2>
&lt;p>You can delete the local MSK cluster using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/kafka/delete-cluster.html">&lt;code>DeleteCluster&lt;/code>&lt;/a> API. To do so, you must first obtain the ARN of the cluster you want to delete. Run the following command to list all the clusters in the region:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kafka list-clusters --region us-east-1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To initiate the deletion of a cluster, select the corresponding &lt;code>ClusterARN&lt;/code> from the list of clusters, and then execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>awslocal kafka delete-cluster --cluster-arn ClusterArn&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing MSK clusters.
You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resources&lt;/strong> section, and then clicking on &lt;strong>Kafka&lt;/strong> under the &lt;strong>Analytics&lt;/strong> section.&lt;/p>
&lt;img src="msk-resource-browser.png" alt="MSK Resource Browser" title="MSK Resource Browser" width="900" />
&lt;br>
&lt;br>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Cluster&lt;/strong>: Create a new MSK cluster by clicking on the &lt;strong>Create Cluster&lt;/strong> button and specifying the required parameters.&lt;/li>
&lt;li>&lt;strong>View Cluster&lt;/strong>: View the details of an existing MSK cluster by clicking on the cluster name.&lt;/li>
&lt;li>&lt;strong>Edit Cluster&lt;/strong>: Edit the configuration of an existing MSK cluster by clicking on the &lt;strong>Edit&lt;/strong> button in the cluster details page.&lt;/li>
&lt;li>&lt;strong>Delete Cluster&lt;/strong>: Delete an existing MSK cluster by selecting the cluster name and clicking on the &lt;strong>Actions&lt;/strong> dropdown menu, then selecting &lt;strong>Remove Selected&lt;/strong>.&lt;/li>
&lt;/ul></description></item><item><title>User-Guide: Managed Workflows for Apache Airflow (MWAA)</title><link>/user-guide/aws/mwaa/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/aws/mwaa/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Managed Workflows for Apache Airflow (MWAA) is a fully managed service by AWS that simplifies the deployment, management, and scaling of Apache Airflow workflows in the cloud.
MWAA leverages the familiar Airflow features and integrations while integrating with S3, Glue, Redshift, Lambda, and other AWS services to build data pipelines and orchestrate data processing workflows in the cloud.&lt;/p>
&lt;p>LocalStack allows you to use the MWAA APIs in your local environment to allow the setup and operation of data pipelines.
The supported APIs are available on our &lt;a href="https://docs.localstack.cloud/references/coverage/coverage_mwaa/">API coverage page&lt;/a>, which provides information on the extent of MWAA&amp;rsquo;s integration with LocalStack.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Managed Workflows for Apache Airflow and assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method.
We will demonstrate how to create an Airflow environment and access the Airflow UI.&lt;/p>
&lt;h3 id="create-a-s3-bucket">Create a S3 bucket&lt;/h3>
&lt;p>Create a S3 bucket that will be used for Airflow resources.
Run the following command to create a bucket using the &lt;a href="https://docs.aws.amazon.com/cli/latest/reference/s3/mb.html">&lt;code>mb&lt;/code>&lt;/a> command.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://my-mwaa-bucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="create-an-airflow-environment">Create an Airflow environment&lt;/h3>
&lt;p>You can now create an Airflow environment, using the &lt;a href="https://docs.aws.amazon.com/mwaa/latest/API/API_CreateEnvironment.html">&lt;code>CreateEnvironment&lt;/code>&lt;/a> API.
Run the following command, by specifying the bucket ARN we created earlier:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal mwaa create-environment --dag-s3-path /dags \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --execution-role-arn arn:aws:iam::000000000000:role/airflow-role \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --network-configuration {} \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --source-bucket-arn arn:aws:s3:::my-mwaa-bucket \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --airflow-version 2.2.2 \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --airflow-configuration-options agent.code=007,agent.name=bond \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --name my-mwaa-env&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="access-the-airflow-ui">Access the Airflow UI&lt;/h3>
&lt;p>The Airflow UI can be accessed via the URL in the &lt;code>WebserverUrl&lt;/code> attribute of the response of the &lt;code>GetEnvironment&lt;/code> operation.
The username and password are always set to &lt;code>localstack&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal mwaa get-environment --name my-mwaa-env --query Environment.WebserverUrl
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&amp;#34;http://localhost.localstack.cloud:4510&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>LocalStack also prints this information in the logs:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2024-03-06T14:54:47.070 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>functhread10&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> l.services.mwaa.provider : Airflow environment &lt;span style="color:#4e9a06">&amp;#39;my-mwaa-env&amp;#39;&lt;/span> available at http://localhost.localstack.cloud:4510 with username &lt;span style="color:#4e9a06">&amp;#39;localstack&amp;#39;&lt;/span> and password &lt;span style="color:#4e9a06">&amp;#39;localstack&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="airflow-versions">Airflow versions&lt;/h2>
&lt;p>LocalStack supports the following versions of Apache Airflow:&lt;/p>
&lt;ul>
&lt;li>&lt;code>1.10.12&lt;/code> (deprecated)&lt;/li>
&lt;li>&lt;code>2.0.2&lt;/code> (deprecated)&lt;/li>
&lt;li>&lt;code>2.2.2&lt;/code> (deprecated)&lt;/li>
&lt;li>&lt;code>2.4.3&lt;/code>&lt;/li>
&lt;li>&lt;code>2.5.1&lt;/code>&lt;/li>
&lt;li>&lt;code>2.6.3&lt;/code>&lt;/li>
&lt;li>&lt;code>2.7.2&lt;/code>&lt;/li>
&lt;li>&lt;code>2.8.1&lt;/code> (default)&lt;/li>
&lt;/ul>
&lt;h2 id="airflow-configuration-options">Airflow configuration options&lt;/h2>
&lt;p>To configure Airflow environments effectively, you can utilize the &lt;code>AirflowConfigurationOptions&lt;/code> argument.
These options are transformed into corresponding environment variables and passed to Airflow.
For instance:&lt;/p>
&lt;ul>
&lt;li>&lt;code>agent.code&lt;/code>:&lt;code>007&lt;/code> is transformed into &lt;code>AIRFLOW__AGENT__CODE:007&lt;/code>.&lt;/li>
&lt;li>&lt;code>agent.name&lt;/code>:&lt;code>bond&lt;/code> is transformed into &lt;code>AIRFLOW__AGENT__NAME:bond&lt;/code>.&lt;/li>
&lt;/ul>
&lt;p>This transformation process ensures that your configuration settings are easily applied within the Airflow environment.&lt;/p>
&lt;h2 id="adding-or-updating-dags">Adding or updating DAGs&lt;/h2>
&lt;p>When it comes to adding or updating DAGs in Airflow, the process is simple and efficient.
Just upload your DAGs to the designated S3 bucket path, configured by the &lt;code>DagS3Path&lt;/code> argument.&lt;/p>
&lt;p>Follow this example command to upload a sample DAG named &lt;code>sample_dag.py&lt;/code> to your S3 bucket named &lt;code>my-mwaa-bucket&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp sample_dag.py s3://my-mwaa-bucket/dags&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="installing-custom-plugins">Installing custom plugins&lt;/h2>
&lt;p>You can extend the capabilities of Airflow by incorporating custom plugins, which introduce new operators, interfaces, or hooks.
LocalStack seamlessly supports plugins packaged according to &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/configuring-dag-import-plugins.html#configuring-dag-plugins-test-create">AWS specifications&lt;/a>.&lt;/p>
&lt;p>To integrate your custom plugins into the MWAA environment, upload the packaged &lt;code>plugins.zip&lt;/code> file to the designated S3 bucket path:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp plugins.zip s3://my-mwaa-bucket/plugins.zip&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="installing-python-dependencies">Installing Python dependencies&lt;/h2>
&lt;p>LocalStack streamlines the process of installing Python dependencies for Apache Airflow within your environments.
To get started, create a &lt;code>requirements.txt&lt;/code> file that lists the required dependencies.
For example:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-txt" data-lang="txt">&lt;span style="display:flex;">&lt;span>boto3==1.17.54
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>boto==2.49.0
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>botocore==1.20.54
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Once you have your &lt;code>requirements.txt&lt;/code> file ready, upload it to the designated S3 bucket, configured for use by the MWAA environment.
Make sure to upload the file to &lt;code>/requirements.txt&lt;/code> in the bucket:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp requirements.txt s3://my-mwaa-bucket/requirements.txt&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After the upload, the environment will be automatically updated, and your Apache Airflow setup will be equipped with the new dependencies.
It is important to note that, unlike &lt;a href="https://docs.aws.amazon.com/mwaa/latest/userguide/connections-packages.html">AWS&lt;/a>, LocalStack does not install any provider packages by default.
Therefore, you must follow the above steps to install any required provider packages.&lt;/p>
&lt;h2 id="connections">Connections&lt;/h2>
&lt;p>When incorporating connections to other AWS services within your DAGs, it is crucial to specify either the internal Docker IP address of the LocalStack container or utilize &lt;code>host.docker.internal&lt;/code>.
LocalStack currently does not use the credentials and region from &lt;code>aws_conn_id&lt;/code>.
This information must be explicitly passed in operators, hooks, and sensors.&lt;/p>
&lt;h2 id="resource-browser">Resource Browser&lt;/h2>
&lt;p>The LocalStack Web Application provides a Resource Browser for managing MWAA Environments.
You can access the Resource Browser by opening the LocalStack Web Application in your browser, navigating to the &lt;strong>Resource Browser&lt;/strong> section, and then clicking on &lt;strong>MWAA&lt;/strong> under the &lt;strong>App Integration&lt;/strong> section.&lt;/p>
&lt;p>
&lt;img src="mwaa-resource-browser.png" alt="MWAA Resource Browser" title="MWAA Resource Browser" width="900" />
&lt;/p>
&lt;p>The Resource Browser allows you to perform the following actions:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Create Environment&lt;/strong>: Create a new MWAA environment by clicking on the &lt;strong>Create Environment&lt;/strong> button and providing the required parameters.&lt;/li>
&lt;li>&lt;strong>View Environment&lt;/strong>: View details of an existing MWAA environment by clicking on the environment name.&lt;/li>
&lt;li>&lt;strong>Edit Environment&lt;/strong>: Edit an existing MWAA environment by clicking on the &lt;strong>Edit&lt;/strong> button after clicking on the environment name.&lt;/li>
&lt;li>&lt;strong>Delete Environment&lt;/strong>: Select the environment name and click on the &lt;strong>Actions&lt;/strong> button followed by &lt;strong>Remove Selected&lt;/strong> button.&lt;/li>
&lt;/ul></description></item></channel></rss>