<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs – Cloud Pods</title><link>/user-guide/cloud-pods/</link><description>Recent content in Cloud Pods on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/user-guide/cloud-pods/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Guide: Getting started</title><link>/user-guide/cloud-pods/getting-started/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/cloud-pods/getting-started/</guid><description>
&lt;p>Using the LocalStack Cloud Pods command-line interface (CLI) via the &lt;code>pod&lt;/code> command enables you to create and manage cloud pods directly from your terminal. The Cloud Pods CLI is particularly useful in these scenarios:&lt;/p>
&lt;ul>
&lt;li>Saving a snapshot of your active and running LocalStack instance.&lt;/li>
&lt;li>Sharing your snapshots with teams using LocalStack&amp;rsquo;s collaboration features.&lt;/li>
&lt;li>Pulling snapshots to a running instance without needing to restart it.&lt;/li>
&lt;/ul>
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>The LocalStack Cloud Pods CLI is included in the &lt;a href="https://docs.localstack.cloud/getting-started/installation/#localstack-cli">LocalStack CLI installation&lt;/a>, so there&amp;rsquo;s no need for additional installations to begin using it. If you&amp;rsquo;re a licensed user, we suggest setting the &lt;code>LOCALSTACK_AUTH_TOKEN&lt;/code> as an environment variable. This enables you to access the complete range of LocalStack Cloud Pods features.&lt;/p>
&lt;p>You can access the Cloud Pods CLI by running the &lt;code>pod&lt;/code> command from your terminal.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod --help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: localstack pod [OPTIONS] COMMAND [ARGS]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Manage the state of your instance via Cloud Pods.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h, --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete Delete a Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inspect
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list List all available Cloud Pods
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> load
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote Manage cloud pod remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> save Create a new Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to Cloud Pods and assumes basic knowledge of the LocalStack CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;p>Start your LocalStack container using your preferred method. We will demonstrate how you can save a snapshot of your active LocalStack instance into your LocalStack account, and pull it to a running instance.&lt;/p>
&lt;h3 id="create-aws-resources">Create AWS resources&lt;/h3>
&lt;p>You can use the &lt;code>awslocal&lt;/code> CLI to create new AWS resources within your active LocalStack instance. For example, you can create an S3 bucket and add data to it using the &lt;code>awslocal&lt;/code> CLI:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>echo &amp;#34;hello world&amp;#34; &amp;gt; /tmp/hello-world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp /tmp/hello-world s3://test/hello-world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 ls s3://test/&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="save-your-cloud-pod-state">Save your Cloud Pod state&lt;/h3>
&lt;p>You can now your Pod state using the &lt;code>save&lt;/code> command, specifying the desired Cloud Pod name as the first argument. This action will save the pod and register it with the LocalStack Web Application:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save s3-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cloud Pod `s3-test` successfully created ✅
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Version: 1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Remote: platform
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Services: s3
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Optionally, you can include a message with the saved Cloud Pod using the &lt;code>--message&lt;/code> flag.&lt;/p>
&lt;p>You can access the list of available Cloud Pods for both you and your organization by utilizing the &lt;code>list&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod list
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>┏━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━┳━━━━━━━━━━━━━┓
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>┃ Name ┃ Max Version ┃ Last Change ┃
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>┡━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━╇━━━━━━━━━━━━━┩
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│ s3-test │ 1 │ n/a │
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>└───────────────────────────┴─────────────┴─────────────┘
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="inspect-the-contents-of-a-cloud-pod">Inspect the contents of a Cloud Pod&lt;/h3>
&lt;p>You can inspect the contents of a Cloud Pod using the &lt;code>inspect&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod inspect s3-test --format json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;000000000000&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S3&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;global&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;listBuckets&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Buckets&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;test&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;CreationDate&amp;#34;: &amp;#34;2023-10-03T07:19:31.000Z&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="pull-your-pod-state">Pull your Pod state&lt;/h3>
&lt;p>On a separate machine, start LocalStack while ensuring the auth token is properly configured. Then, retrieve the previously created Cloud Pod by employing the &lt;code>load&lt;/code> command, specifying the Cloud Pod name as the first argument:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod load s3-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cloud Pod s3-test successfully loaded
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can examine the S3 buckets within the Cloud Pod:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 ls s3://test/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2022-10-04 22:33:54 12 hello-world
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>For comprehensive instructions, navigate to our &lt;a href="/user-guide/cloud-pods/pods-cli/">Command-Line Interface (CLI) Guide&lt;/a>. To access your Cloud Pods through the LocalStack Web Application, navigate to the &lt;a href="https://app.localstack.cloud/pods">Cloud Pods browser&lt;/a>.&lt;/p></description></item><item><title>User-Guide: CLI command reference</title><link>/user-guide/cloud-pods/pods-cli/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/cloud-pods/pods-cli/</guid><description>
&lt;p>This reference provides descriptions and example commands for LocalStack Cloud Pods CLI (&lt;code>pod&lt;/code>) commands.&lt;/p>
&lt;h2 id="syntax">Syntax&lt;/h2>
&lt;p>Use the following syntax to run &lt;code>localstack pod&lt;/code> commands from your terminal window:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod [OPTIONS] COMMAND [ARGS]...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the above syntax:&lt;/p>
&lt;ul>
&lt;li>&lt;code>COMMAND&lt;/code> specifies the operation you want to perform with your Cloud Pods (&lt;code>save&lt;/code> or &lt;code>load&lt;/code>).&lt;/li>
&lt;li>&lt;code>OPTIONS&lt;/code> specifies the optional flags.&lt;/li>
&lt;li>&lt;code>ARGS&lt;/code> specifies the command arguments.&lt;/li>
&lt;/ul>
&lt;h2 id="commands">Commands&lt;/h2>
&lt;p>The following section lists the available commands for the Cloud Pods CLI.
You can have an overview of these command by typing &lt;code>localstack pod --help&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod [OPTIONS] COMMAND [ARGS]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Manage the state of your instance via Cloud Pods.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete Delete a Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> inspect Inspect the contents of a Cloud Pod This command shows the...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list List all available Cloud Pods
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> load Load the state of a Cloud Pod into the application runtime/...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remote Manage cloud pod remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> save Create a new Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> versions List all available versions for a Cloud Pod This command lists...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="save">&lt;code>save&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod save [OPTIONS] NAME [REMOTE]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Save the current state of the LocalStack container in a Cloud Pod.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A Cloud Pod can be registered and saved with different storage options,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> called remotes. By default, Cloud Pods are hosted in the LocalStack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> platform. However, users can decide to store their Cloud Pods in other
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> remotes, such as AWS S3 buckets or ORAS registries.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> An optional message can be attached to any Cloud Pod. Furthermore, one
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> could decide to export only a subset of services with the optional
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --service option.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> To use the LocalStack platform for storage, the desired Cloud Pod&amp;#39;s name will suffice, e.g.:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localstack pod save &amp;lt;pod_name&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Please be aware that each following save invocation with the same name
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> will result in a new version being created.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> To save a local copy of your state, you can use the &amp;#39;localstack state export&amp;#39; command.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -m, --message TEXT Add a comment describing this Cloud Pod&amp;#39;s
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -s, --services TEXT Comma-delimited list of services to push in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> the Cloud Pod (all by default)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --visibility [public|private] Set the visibility of the Cloud Pod [`public`
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> or `private`]. Does not create a new version
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [json] The formatting style for the save command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>save&lt;/code> command allows you to save a new version of a Cloud Pod targeting a specific remote.
To save and load the state locally, you can use the command in the &lt;code>localstack state&lt;/code> group.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save my-pod&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command generates a new version of &lt;code>my-pod&lt;/code> and uploads it on the LocalStack platform.
When pushing an already existing pod, a new version is created and subsequently uploaded to the platform.&lt;/p>
&lt;p>Users also have the option to select a specific subset of AWS services they want to include in the new Cloud Pod version using the &lt;code>--services&lt;/code> option.&lt;/p>
&lt;p>Users who want to make a Cloud Pod accessible outside their organization can mark it as &lt;strong>public&lt;/strong> with the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save --name my-pod --visibility public&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The above command does not create a new version and requires a version already registered with the platform. The CLI manual for the &lt;code>save&lt;/code> command is as follows:&lt;/p>
&lt;h3 id="load">&lt;code>load&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod load [OPTIONS] NAME [REMOTE]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Load the state of a Cloud Pod into the application runtime/ Users can
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> import Cloud Pods from different remotes, with the LocalStack platform
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> being the default one.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Loading the state of a Cloud Pod into LocalStack might cause some
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> conflicts with the current state of the container. By default, LocalStack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> will attempt a best-effort merging strategy between the current state and
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> the one from the Cloud Pod. For a service X present in both the current
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> state and the Cloud Pod, we will attempt to merge states across different
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> accounts and regions. If the service X has a state for the same account
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> and region both in the running container and the Cloud Pod, the latter
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> will be used. If a service Y is present in the running container but not
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> in the Cloud Pod, it will be left untouched. With `--merge overwrite`, the
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> state of the Cloud Pod will completely replace the state of the running
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> container.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> To load a local copy of a LocalStack state, you can use the &amp;#39;localstack state import&amp;#39; command.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --merge [overwrite|merge] The merge strategy to adopt when loading the
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -y, --yes Automatic yes to prompts. Assume a positive
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> answer to all prompts and run non-interactively
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>load&lt;/code> command is the inverse operation of &lt;code>save&lt;/code>.
It retrieves the content of a previously stored Cloud Pod a remote (by default, theLocalStack platform) and injects it into the LocalStack container.&lt;/p>
&lt;h3 id="delete">&lt;code>delete&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod delete [OPTIONS] NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Delete a Cloud Pod registered on the remote LocalStack platform.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This command will remove all the versions of a Cloud Pod, and the
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> operation is not reversible.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>delete&lt;/code> command let users delete a Cloud Pod stored in the remote platform.
The CLI manual for the &lt;code>delete&lt;/code> command is as follows:&lt;/p>
&lt;h3 id="inspect">&lt;code>inspect&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod inspect [OPTIONS] NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Inspect the contents of a Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This command shows the content of a Cloud Pod. By default, it starts a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> curses interface which allows an interactive inspection of the contents in
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> the Cloud Pod.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [curses|rich|json]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> The formatting style for the inspect command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>inspect&lt;/code> command simply lets the user inspect the content of a Cloud Pod.&lt;/p>
&lt;h3 id="list">&lt;code>list&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>```
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod list [OPTIONS] [REMOTE]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List all the Cloud Pods available for a single user, or for an entire
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> organization, if the user is part of one.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> With the --public flag, it lists the all the available public Cloud Pods.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A public Cloud Pod is available across the boundary of a user ond/or
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> organization. In other words, any public Cloud Pod can be injected by any
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> other user holding a LocalStack Pro (or above) license.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -p, --public List all the available public Cloud Pods
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [table|json] The formatting style for the list pods command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>list&lt;/code> command lists all of the available Cloud Pods.
It shows all the pods available for a single user and its organization by default.&lt;/p>
&lt;h3 id="versions">&lt;code>versions&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod versions [OPTIONS] NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> List all available versions for a Cloud Pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This command lists the versions available for a Cloud Pod. Each invocation
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> of the save command is going to create a new version for a named Cloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pod, if a Pod with such name already does exist in the LocalStack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> platform.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [table|json] The formatting style for the version command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The &lt;code>versions&lt;/code> command lists all the available versions of a Cloud Pod.
The CLI manual for the &lt;code>version&lt;/code> command is as follows:&lt;/p>
&lt;h3 id="remote">&lt;code>remote&lt;/code>&lt;/h3>
&lt;p>The &lt;code>remote&lt;/code> command group lets you manage custom Cloud Pod remotes, to enable alternative storage backends in addition to the default LocalStack managed platform.
It offers 3 commands: &lt;code>add&lt;/code>, &lt;code>delete&lt;/code>, and &lt;code>list&lt;/code>.&lt;/p>
&lt;p>For more info about remote usage, check our &lt;a href="https://docs.localstack.cloud/user-guide/cloud-pods/remotes/">documentation&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod remote [OPTIONS] COMMAND [ARGS]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Manage cloud pod remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add Add a remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete Delete a remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list Lists the available remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h4 id="remote-add">&lt;code>remote add&lt;/code>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod remote add [OPTIONS] NAME URL
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Add a new remote for Cloud Pods.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> A remote is the place where your Cloud Pods are stored. By default, Cloud
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Pods are store in the LocalStack platform.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h4 id="remote-delete">&lt;code>remote delete&lt;/code>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod remote delete [OPTIONS] NAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Remove a remote for Cloud Pods.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h4 id="remote-list">&lt;code>remote list&lt;/code>&lt;/h4>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: pod remote list [OPTIONS]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [table|json] The formatting style for the remotes command
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;hr>
&lt;h1 id="local-commands">Local Commands&lt;/h1>
&lt;p>In addition to the commands in the &lt;code>pod&lt;/code> group, we also offer a simple alternative to save and load the LocalStack state.
The &lt;code>state&lt;/code> group offers two commands to export and import the state of the LocalStack container to/from a zip file from the host machine.&lt;/p>
&lt;h2 id="state-syntax">&lt;code>state&lt;/code> syntax&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: state [OPTIONS] COMMAND [ARGS]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> (Beta) Manage and manipulate the localstack state.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> The state command group allows you to interact with LocalStack&amp;#39;s state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> backend.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Read more: https://docs.localstack.cloud/references/persistence-mechanism/#snapshot-based-persistence
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export Export the state of LocalStack services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> import Import the state of LocalStack services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> reset Reset the state of LocalStack services
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="state-export">&lt;code>state export&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: state export [OPTIONS] [DESTINATION]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Save the current state of the LocalStack container to a file on the local
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> disk. This file can be restored at any point in time using the `localstack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> state import` command. Please be aware that this might not be possible
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> when importing the state with a different version of LocalStack.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> If you are looking for a managed solution to handle the state of your
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LocalStack container, please check out the Cloud Pods feature:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> https://docs.localstack.cloud/user-guide/tools/cloud-pods/
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Use the DESTINATION argument to specify an absolute path for the exported
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> file or a filename in current working directory. If no destination is
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> specified, a file named `ls-state-export` will be saved in the current
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> working directory.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Examples:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localstack state export my-state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localstack state export /home/johndoe/my-state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> You can also specify a subset of services to export. By default, the state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> of all running services is exported.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -s, --services TEXT Comma-delimited list of services to reset. By default,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> the state of all running services is exported.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -f, --format [json] The formatting style for the save command output.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="state-import">&lt;code>state import&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: state import [OPTIONS] SOURCE
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Load the state of LocalStack from a file into the running container. The
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> SOURCE file must have been generated from a previous `localstack state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> export` command. Please be aware that it might not be possible to import a
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> state generated from a different version of LocalStack.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Examples:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localstack state import my-state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> localstack state import /home/johndoe/my-state
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="state-reset">&lt;code>state reset&lt;/code>&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: state reset [OPTIONS]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Reset the service states of the current LocalStack runtime.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This command invokes a reset of services in the currently running
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> LocalStack container. By default, all services are rest. The `services`
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> options allows to select a subset of services which should be reset.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> This command tries to automatically discover the running LocalStack
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> instance. If LocalStack has not been started with `localstack start` (and
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> is not automatically discoverable), please set `LOCALSTACK_HOST`.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -s, --services TEXT Comma-delimited list of services to reset. By default,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> the state of all running services is reset.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Remotes</title><link>/user-guide/cloud-pods/remotes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/cloud-pods/remotes/</guid><description>
&lt;p>A remote is the location where Cloud Pods are stored. By default, Cloud Pod artifacts are stored in the LocalStack platform. However, if your organization&amp;rsquo;s data regulations or sovereignty requirements prohibit storing Cloud Pod assets in a remote storage infrastructure, you have the option to persist Cloud Pods in an on-premises storage location under your complete control.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Beta&lt;/h4>
Cloud Pod Remotes is a beta feature exclusively accessible within the Team product tier.
&lt;/div>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>LocalStack provides two types of alternative remotes:&lt;/p>
&lt;ul>
&lt;li>S3 bucket remote storage.&lt;/li>
&lt;li>&lt;a href="https://oras.land/">ORAS&lt;/a> (OCI Registry as Storage) remote storage.&lt;/li>
&lt;/ul>
&lt;p>Cloud Pods command-line interface (CLI) allows you to create, delete, and list remotes.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod remote --help
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Usage: localstack pod remote [OPTIONS] COMMAND [ARGS]...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Manage cloud pod remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Options:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> -h, --help Show this message and exit.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Commands:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> add Add a remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> delete Delete a remote
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> list List the available remotes
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="s3-bucket-remote-storage">S3 bucket remote storage&lt;/h2>
&lt;p>The S3 remote enables you to store Cloud Pod assets in an existing S3 bucket within an actual AWS account. The initial step is to export the necessary AWS credentials within the terminal session.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">AWS_ACCESS_KEY_ID&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">AWS_SECRET_ACCESS_KEY&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>A possible option is to obtain credentials via &lt;a href="https://github.com/synfinatic/aws-sso-cli">AWS SSO CLI&lt;/a>.&lt;/p>
&lt;p>Next, we establish a new remote specifically designed for an S3 bucket. By running the following command, we create a remote named &lt;code>s3-storage-aws&lt;/code> responsible for storing Cloud Pod artifacts in an S3 bucket called &lt;code>ls-pods-bucket-test&lt;/code>.&lt;/p>
&lt;p>The &lt;code>access_key_id&lt;/code> and &lt;code>secret_access_key&lt;/code> placeholders ensure the correct transmission of AWS credentials to the container.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod remote add s3-storage-aws &amp;#39;s3://ls-pods-bucket-test/?access_key_id={access_key_id}&amp;amp;secret_access_key={secret_access_key}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Lastly, you can utilize the standard &lt;code>pod&lt;/code> CLI command to generate a new Cloud Pod that points to the previously established remote.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save my-pod s3-storage-aws&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the command has been executed, you can confirm the presence of Cloud Pod artifacts in the S3 bucket by simply running:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>aws s3 ls s3://ls-pods-bucket-test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-09-27 13:50:10 &lt;span style="color:#0000cf;font-weight:bold">83650&lt;/span> localstack-pod-my-pod-state-1.zip
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-09-27 13:50:11 &lt;span style="color:#0000cf;font-weight:bold">85103&lt;/span> localstack-pod-my-pod-version-1.zip
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can use the &lt;code>pod load&lt;/code> command to load the same pod that was previously saved in this remote:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod load my-pod s3-storage-aws&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="oras-remote-storage">ORAS remote storage&lt;/h2>
&lt;p>The ORAS remote enables users to store Cloud Pods in OCI-compatible registries like Docker Hub, Nexus, or ECS registries. ORAS stands for &amp;ldquo;OCI Registry as Service,&amp;rdquo; and you can find additional information about this standard &lt;a href="https://oras.land/">on the official website&lt;/a>.&lt;/p>
&lt;p>For example, let&amp;rsquo;s illustrate how you can utilize Docker Hub to store and retrieve Cloud Pods.&lt;/p>
&lt;p>To begin, you must configure the new remote using the LocalStack CLI. You&amp;rsquo;ll need to export two essential environment variables, &lt;code>ORAS_USERNAME&lt;/code> and &lt;code>ORAS_PASSWORD&lt;/code>, which are necessary for authenticating with Docker Hub.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ORAS_USERNAME&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>docker_hub_id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87">export&lt;/span> &lt;span style="color:#000">ORAS_PASSWORD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ILoveLocalStack1!
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can now use the CLI to create a new remote called &lt;code>oras-remote&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod remote add oras-remote &amp;#39;oras://{oras_username}:{oras_password}@registry.hub.docker.com/&amp;lt;docker_hub_id&amp;gt;&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Lastly, you can store a pod using the newly configured remote, where &lt;code>my-pod&lt;/code> represents the Cloud Pod&amp;rsquo;s name, and &lt;code>oras-remote&lt;/code> is the remote&amp;rsquo;s name.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save my-pod oras-remote&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Likewise, you can execute the reverse operation to load a Cloud Pod from &lt;code>oras-remote&lt;/code> using the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod load my-pod oras-remote&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="miscellaneous">Miscellaneous&lt;/h3>
&lt;p>Unless explicitly specified, all Cloud Pods commands default to targeting the LocalStack Platform as the storage remote. It&amp;rsquo;s important to note that the CLI must be authenticated correctly with our Platform, and a Team/Enterprise subscription is mandatory.&lt;/p>
&lt;p>Custom remote configurations are stored within the &lt;a href="https://docs.localstack.cloud/references/filesystem/#localstack-volume-directory">LocalStack volume directory&lt;/a> and are managed by the LocalStack container. Consequently, when sharing Cloud Pods among your team using a custom remote, each team member must define the identical remote configuration. Once added, a remote persists even after LocalStack restarts.&lt;/p></description></item><item><title>User-Guide: Launchpad</title><link>/user-guide/cloud-pods/launchpad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/cloud-pods/launchpad/</guid><description>
&lt;p>The LocalStack Cloud Pods Launchpad enables you to easily share and inject Cloud Pods into a LocalStack instance.&lt;/p>
&lt;h2 id="creating-your-sharable-link">Creating your sharable link&lt;/h2>
&lt;p>You can visit &lt;a href="https://app.localstack.cloud/launchpad">Cloud Pods launchpad&lt;/a> to generate a shareable link for your pods.&lt;/p>
&lt;p>&lt;img src="link-generator.png" alt="Cloud Pods Launchpad Link Generator">&lt;/p>
&lt;p>Enter a public URL to your pod Cloud Pod the first input field, then click &lt;strong>Generate Link&lt;/strong>. You can copy the resulting link and share it with others. Additionally, you have the option to copy a markdown snippet for quickly adding a badge to your repository.&lt;/p>
&lt;div class="alert alert-warning" role="alert">
&lt;h4 class="alert-heading">Warning&lt;/h4>
&lt;p>The Launchpad accepts any URL as input and directly passes it to your LocalStack instance for Cloud Pod injection. As a result, this process may carry the risk of unintended side effects, as there is no validation applied to the URL provided to the launchpad.&lt;/p>
&lt;p>Furthermore, it&amp;rsquo;s essential to exercise caution and only use URLs that you trust when utilizing the launchpad, as the URL is displayed in the user interface.&lt;/p>
&lt;/div>
&lt;h2 id="adding-a-badge-to-your-repository">Adding a badge to your repository&lt;/h2>
&lt;p>To add a badge to your README that links to the Cloud Pod Launchpad, you can include the following markdown snippet:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-markdown" data-lang="markdown">&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#204a87;font-weight:bold">![Launch LocalStack Cloudpod&lt;/span>](&lt;span style="color:#c4a000">https://localstack.cloud/gh/launch-pod-badge.svg&lt;/span>)](https://app.localstack.cloud/launchpad?url=url_of_your_pod)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>&lt;img src="badge-demo.png" alt="Cloud Pods Badge Demonstration">&lt;/p>
&lt;p>You need to include the &lt;code>url_of_your_pod&lt;/code> as the &lt;code>url&lt;/code> query parameter in the URL. For instance, if your Cloud Pod is hosted within the same repository, simply use the URL that directs to the raw Cloud Pod file.&lt;/p>
&lt;p>Additionally, you can utilize the &lt;a href="#creating-your-sharable-link">Link Generator&lt;/a> to generate a sharable link for your pod and copy the corresponding markdown snippet for your repository. Check out a proper example &lt;a href="https://github.com/localstack/cloud-pod-badge" target="_blank">on th Cloud Pod badge GitHub repository&lt;/a>.&lt;/p>
&lt;h2 id="troubleshooting-common-problems">Troubleshooting common problems&lt;/h2>
&lt;p>In this section we present an overview of common problems and how to solve them.&lt;/p>
&lt;h3 id="localstack-is-not-running">LocalStack is not running&lt;/h3>
&lt;p>If your LocalStack instance is not running, you will encounter the following error message:&lt;/p>
&lt;p>&lt;img src="ls-not-running.png" alt="Cloud Pods Launchpad Error LocalStack not running">&lt;/p>
&lt;p>Start your LocalStack instance and attempt the operation once more. For detailed instructions on starting LocalStack, refer to the &lt;a href="/user-guide/cloud-pods/getting-started/">Getting Started&lt;/a> section.&lt;/p>
&lt;h3 id="failed-to-load-metadata">Failed to load metadata&lt;/h3>
&lt;p>If the launchpad encounters difficulties while loading the metadata of your pod, you will receive the following error message:&lt;/p>
&lt;p>&lt;img src="metadata-load-failed.png" alt="Cloud Pods Launchpad Error failed to load metadata">&lt;/p>
&lt;p>This can occur when the pod is no longer accessible or if the URL provided is invalid. Review the URL and attempt the operation once more.&lt;/p>
&lt;h3 id="failed-to-inject-pod">Failed to inject pod&lt;/h3>
&lt;p>If the launchpad is unable to successfully inject the pod into your LocalStack instance, you will encounter a &lt;code>Pod injection failed&lt;/code> message in the log. This issue may arise from various factors, such as version disparities. For further insights and information, please review your LocalStack logs.&lt;/p></description></item><item><title>User-Guide: Auto-Load</title><link>/user-guide/cloud-pods/auto-load/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/cloud-pods/auto-load/</guid><description>
&lt;p>Apart from loading Cloud Pods via either the &lt;a href="/user-guide/cloud-pods/pods-cli/">Command-Line Interface (CLI)&lt;/a> or the web UI, you have the option to automatically load one or more Cloud Pods when the LocalStack container starts.&lt;/p>
&lt;h2 id="using-environmental-variables">Using environmental variables&lt;/h2>
&lt;p>The simplest way to load a Cloud Pod automatically at startup time is to use the &lt;code>AUTO_LOAD_POD&lt;/code> &lt;a href="https://docs.localstack.cloud/references/configuration/">configuration variable&lt;/a>.
For instance, to load a Cloud Pod named &lt;code>foo-pod&lt;/code>, you can start LocalStack as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>AUTO_LOAD_POD=foo-pod localstack start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>&lt;code>AUTO_LOAD_POD&lt;/code> accepts a comma-separated list of Cloud Pod names.
Therefore, we also support the auto-load of multiple Cloud Pods, e.g.;&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>AUTO_LOAD_POD=foo-pod,bar-pod localstack start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Note that pods are loaded in the same order as given to &lt;code>AUTO_LOAD_POD&lt;/code>.
When loading multiple Cloud Pods, the ones loaded last might overwrite the previous ones if they contain a state for the same service under the same account and region.&lt;/p>
&lt;p>In a docker-compose file, this would look something like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;3.8&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">services&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">container_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;localstack-main&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack/localstack-pro&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;127.0.0.1:4566:4566&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;127.0.0.1:4510-4559:4510-4559&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN:?}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">DEBUG=1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">AUTO_LOAD_POD=foo-pod,bar-pod&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;./volume:/var/lib/localstack&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;/var/run/docker.sock:/var/run/docker.sock&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="configuration-file">Configuration file&lt;/h2>
&lt;p>LocalStack also supports configuration files to automatically load Cloud Pods at startup time.&lt;/p>
&lt;p>Inside the container, LocalStack will iterate over the content of the &lt;code>/etc/localstack/init-pod.d&lt;/code> folder looking for two kinds of files:
&lt;code>zip&lt;/code> files exported with the &lt;code>localstack state export&lt;/code> &lt;a href="/user-guide/cloud-pods/pods-cli/">command&lt;/a>,
&lt;code>txt&lt;/code> files in which each line correspond to the name of a Cloud Pod.&lt;/p>
&lt;p>As example, let us assume the following project layout:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-console" data-lang="console">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">.
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">├── docker-compose.yml
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic">└── init-pods.d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic"> ├── pod-list.txt
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000;font-style:italic"> └── my-state.pod.zip
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>where the content of &lt;code>pod-list.txt&lt;/code> is the following:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>foo-pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>bar-pod
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>When mounting &lt;code>init-pods.d&lt;/code> in the right location, LocalStack will first load &lt;code>foo-pod&lt;/code> and &lt;code>bar-pod&lt;/code> from &lt;code>pod-list.txt&lt;/code>, followed finally by &lt;code>my-state.pod.zip&lt;/code>.&lt;/p>
&lt;p>To correctly mount &lt;code>init-pods.d&lt;/code>, the docker compose file will look something like this:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">version&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;3.8&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">services&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">localstack&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">container_name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#4e9a06">&amp;#34;localstack-main&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">image&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack/localstack-pro&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">ports&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;127.0.0.1:4566:4566&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;127.0.0.1:4510-4559:4510-4559&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">environment&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">LOCALSTACK_AUTH_TOKEN=${LOCALSTACK_AUTH_TOKEN:?}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#000">DEBUG=1&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">volumes&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;./volume:/var/lib/localstack&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#4e9a06">&amp;#34;./init-pods.d:/etc/localstack/init-pods.d&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Community Cloud Pods</title><link>/user-guide/cloud-pods/community/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/cloud-pods/community/</guid><description>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
With the release of LocalStack 2.3, we have officially marked Community Cloud Pods as &lt;strong>deprecated&lt;/strong>. In our upcoming 3.0 release, we will be removing Community Cloud Pods entirely. Moving forward, Cloud Pods will only be accessible to Pro/Team users. We understand this may affect some users and we are open to feedback, through our &lt;a href="https://github.com/localstack/localstack">GitHub Issues&lt;/a> or &lt;a href="https://discuss.localstack.cloud/">Discuss Forum&lt;/a>.
&lt;/div>
&lt;p>LocalStack supports Community Cloud Pods to give our community users a limited Cloud Pods experience. Using Community Cloud Pods, you get two commands: &lt;code>save&lt;/code> and &lt;code>load&lt;/code> to save the container state in a Cloud Pod and dump it into their running LocalStack container at any given time, respectively.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>In this getting started guide, we will demonstrate how community users can leverage Community Cloud Pods to save the state of their running LocalStack instance permanently. To get started, you would only need &lt;code>awscli&lt;/code> installed. We intend this feature to be open to community users; hence no &lt;code>LOCALSTACK_API_KEY&lt;/code> is required.&lt;/p>
&lt;p>Let us start by creating some AWS resources in LocalStack. Just a mere example, let us create a S3 bucket and a SQS queue:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://test
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal sqs create-queue --queue-name test-queue&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Let us dump such a simple state into a Cloud Pod using the &lt;code>save&lt;/code> command. This command takes a file URI as an argument and creates a ZIP file in the specified directory. Assuming we want to create a pod named &lt;code>awesome-pod&lt;/code> in our Desktop folder, we will run the below commands to save an &lt;code>awesome-pod&lt;/code> in your Desktop directory:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod save file:///Users/&amp;lt;my_username&amp;gt;/Desktop/awesome-pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cloud Pods file:///Users/&amp;lt;my_username&amp;gt;/Desktop/awesome-pod successfully exported&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This exported ZIP file now contains the state we previously created, and we can restore it at any time with the inverse command, i.e., &lt;code>load&lt;/code>. For instance, the following command will restore the same state of a fresh instance of LocalStack:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod load file:///Users/&amp;lt;my_username&amp;gt;/Desktop/awesome-pod
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Cloud Pods file:///Users/&amp;lt;my_username&amp;gt;/Desktop/awesome-pod successfully loaded&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>It is worth noting that the &lt;code>load&lt;/code> command also allows loading a Cloud Pod stored at a given URL. We also provide a short-hand option to load Cloud Pods saved in a public GitHub repository. To showcase this possibility, we opened a new public repository at &lt;a href="https://github.com/localstack/cloud-pods">localstack/cloud-pods&lt;/a>, where we started storing several Cloud Pods for demonstration purposes.&lt;/p>
&lt;p>For example, we uploaded a Cloud Pod named &lt;code>s3-trigger-thumbnail&lt;/code> based on an &lt;a href="https://docs.aws.amazon.com/lambda/latest/dg/with-s3-tutorial.html">official AWS documentation tutorial&lt;/a>. This Cloud Pod stores a simple application consisting of two S3 buckets and a Lambda function. For each &lt;code>jpg&lt;/code> image uploaded in one of the buckets, the Lamda function will create a thumbnail of it and store it in the other bucket.&lt;/p>
&lt;p>To load this Cloud Pod, you can run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod load git://localstack/cloud-pods/s3-trigger-thumbnail&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
&lt;p>The above command is equivalent to:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack pod load https://raw.githubusercontent.com/localstack/cloud-pods/main/s3-trigger-thumbnail&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/div>
&lt;p>To test the loaded pod, you can run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 cp &amp;lt;path_to_file&amp;gt;.jpg s3://img-bucket&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To check the content of the destination bucket run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 ls s3://img-bucket-resized&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h2 id="limitations">Limitations&lt;/h2>
&lt;p>Community Cloud Pods have some limitations:&lt;/p>
&lt;ul>
&lt;li>Only Community-available AWS services can be saved and loaded in a Community Cloud Pod.&lt;/li>
&lt;li>Users are responsible for storing their saved states. Pro users can use our Cloud Pods platform to make storing and sharing their saved states easier.&lt;/li>
&lt;li>Cloud Pods for Community users do not support versioning out of the box.&lt;/li>
&lt;/ul></description></item></channel></rss>