<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs â€“ LocalStack Web Application</title><link>/user-guide/web-application/</link><description>Recent content in LocalStack Web Application on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/user-guide/web-application/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Guide: Stack Insights</title><link>/user-guide/web-application/stack-insights/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/stack-insights/</guid><description>
&lt;p>Stack Insights enable LocalStack users to report AWS API usage telemetry of LocalStack runs to their LocalStack account. You can see which APIs are being used, which clients of integrations use particular services and API operations, which services cause the most API errors, and much more using Stack Insights. The Stacks widget and detailed Stack information is part of our Pro plan, while the graphical representation currently falls under our Team preview.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;img src="stack-insights-getting-started.png" width="600px" alt="Stack Insights">
&lt;p>To get started with this feature, log in to your &lt;a href="https://app.localstack.cloud/">LocalStack account&lt;/a> and start a &lt;a href="/getting-started/api-key/">LocalStack instance on your local machine&lt;/a>. The LocalStack Dashboard will show the Stacks widget, which holds most of the vital information of recent and currently running stacks.&lt;/p>
&lt;p>The Stack widget will also display the number of API calls, services employed and the runtime duration for each spin-up. All the spin-ups are timestamped; hence you can easily navigate the stacks and check the number of API calls that succeeded and failed.&lt;/p>
&lt;h2 id="detailed-stack-information">Detailed Stack information&lt;/h2>
&lt;img src="detailed-stack-information.png" width="600px" alt="Detailed Stack Insights">
&lt;p>You can click on the individual stack to display detailed information. This includes the number of API calls, service invocations, the user agent (&lt;code>aws-cli&lt;/code>, &lt;code>terraform&lt;/code> etc.) and the particular service called in the specific spin-up. You can also use the slide toggle to pick up a particular time duration during which the user made specific API calls.&lt;/p>
&lt;h2 id="list-of-events-during-stack-lifetime">List of events during Stack lifetime&lt;/h2>
&lt;img src="stack-lifetime-events.png" width="600px" alt="Stack Lifetime Events">
&lt;p>You can also check the list of events during the entire Stack life-time, which includes the Service, operation, Status Code, Server time and the User-agent.&lt;/p></description></item><item><title>User-Guide: Custom local endpoint</title><link>/user-guide/web-application/custom-local-endpoint/custom-local-endpoint/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/custom-local-endpoint/custom-local-endpoint/</guid><description>
&lt;p>You can configure the local endpoint URL under which LocalStack is accessible from the LocalStack Web UI. To configure your local endpoint URL, navigate to your &lt;a href="https://app.localstack.cloud/account/settings">Account settings&lt;/a>, to configure the local endpoint URL (defaults to &lt;a href="https://localhost.localstack.cloud">https://localhost.localstack.cloud&lt;/a>). Additionally, you can configure the local endpoint URL to view your resources if you are running LocalStack on a different machine (see instructions below).&lt;/p>
&lt;h2 id="connecting-to-a-localstack-instance-on-a-different-machine">Connecting to a LocalStack instance on a different machine&lt;/h2>
&lt;p>To ensure that the Web user interface can connect with your running LocalStck instance, you would need to configure the endpoint URL so that the server&amp;rsquo;s SSL certificate matches the hostname/IP address of the endpoint URL. This situation arises when users configure the endpoint URL to be something like &lt;code>https://myhost:4566&lt;/code> or use an IP address like &lt;code>https://1.2.3.4:4566&lt;/code>. Websites with an &lt;code>https://...&lt;/code> URL can only request other endpoints using HTTPS (i.e., not on &lt;code>http://&lt;/code>). Additionally, while requesting an HTTPS page, the SSL certificate must match the hostname (i.e., &lt;code>localhost.localstack.cloud&lt;/code> in our case).&lt;/p>
&lt;p>To navigate this, we recommend you create a local TCP proxy server. The proxy server could listen on &lt;code>127.0.0.1:4566&lt;/code> and forward all requests to your target endpoint where the LocalStack instance is running. You could leave the configuration in the Web user interface to use the default value, &lt;code>https://localhost.localstack.cloud:4566&lt;/code>. We recommend &lt;a href="https://manpages.ubuntu.com/manpages/trusty/man1/simpleproxy.1.html">simpleproxy&lt;/a> or &lt;a href="https://github.com/abhinavsingh/proxy.py">proxy.py&lt;/a> as a way to implement this.&lt;/p>
&lt;p>An alternate workaround would be to re-point &lt;code>localhost.localstack.cloud&lt;/code> to the IP address of your target machine by adding an entry to &lt;code>/etc/hosts&lt;/code>. This is especially useful if you&amp;rsquo;re accessing the LocalStack Web UI on a macOS/Linux-based machine.&lt;/p></description></item></channel></rss>