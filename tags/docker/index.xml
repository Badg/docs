<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs â€“ docker</title><link>/tags/docker/</link><description>Recent content in docker on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/tags/docker/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Guide: Docker Desktop Extension</title><link>/user-guide/tools/docker-desktop-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/tools/docker-desktop-extension/</guid><description>
&lt;p>The LocalStack Extension for Docker Desktop enables developers working with LocalStack to operate their LocalStack instance via Docker Desktop, including checking service status, instance logs, and configure profiles. To install the LocalStack Extension for Docker Desktop, you just need to have &lt;a href="https://www.docker.com/products/docker-desktop">Docker Desktop installed on your machine&lt;/a>.&lt;/p>
&lt;img src="localstack-docker-extension.png" alt="LocalStack Extension for Docker Desktop" title="LocalStack Extension for Docker Desktop" width="800" />
&lt;h2 id="installation">Installation&lt;/h2>
&lt;p>You can install the LocalStack Extension for Docker Desktop via pulling our public Docker image from Docker Hub:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker extension install localstack/localstack-docker-desktop:0.1.0&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To setup the Docker Extension by building the image locally, you can clone our &lt;a href="https://github.com/localstack/localstack-docker-extension">Docker Desktop extension&lt;/a> repository, and run the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>make install-extension&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>It will build the Docker image and install the extension on your Docker Desktop application.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;em>Note&lt;/em>: The LocalStack Extension for Docker Desktop is not yet verified and available on Docker Desktop marketplace. The current features are experimental in nature, and are subject to change in future iterations.
&lt;/div>
&lt;h2 id="features">Features&lt;/h2>
&lt;p>Currently, the LocalStack Extension for Docker Desktop supports the following features:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Control LocalStack&lt;/strong>: Start, stop, and restart LocalStack from the Docker Desktop. You can also see the current status of your LocalStack instance and navigate to LocalStack Web Application.&lt;/li>
&lt;li>&lt;strong>LocalStack insights&lt;/strong>: You can see the log information of the LocalStack instance and all the available services and their status on the service page.&lt;/li>
&lt;li>&lt;strong>LocalStack configurations&lt;/strong>: You can manage and use your profiles via configurations and create new configurations for your LocalStack instance.&lt;/li>
&lt;/ul>
&lt;p>We also recommend you to add add &lt;code>/tmp&lt;/code> to your shared files on Docker Desktop under &lt;strong>Settings&lt;/strong> &amp;gt; &lt;strong>Resources&lt;/strong> &amp;gt; &lt;strong>File sharing&lt;/strong>. It is a temporary solution since it&amp;rsquo;s where the LocalStack volume directory mounts.&lt;/p></description></item><item><title>References: Podman</title><link>/references/podman/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/references/podman/</guid><description>
&lt;h2 id="overview">Overview&lt;/h2>
&lt;p>By default, the LocalStack CLI starts the LocalStack runtime inside a Docker container.
Docker may not be available on your system, and a popular alternative is &lt;a href="https://podman.io/getting-started/">Podman&lt;/a> which you can use to run LocalStack.
Podman support is still experimental, and the following docs give you an overview of the current state.&lt;/p>
&lt;p>From the Podman docs:&lt;/p>
&lt;blockquote>
&lt;p>Podman is a daemonless, open source, Linux native tool designed to make it easy to find, run, build, share and deploy applications using Open Containers Initiative (OCI) Containers and Container Images. Podman provides a command line interface (CLI) familiar to anyone who has used the Docker Container Engine. Most users can simply alias Docker to Podman (&lt;code>alias docker=podman&lt;/code>) without any problems.&lt;/p>
&lt;/blockquote>
&lt;h2 id="options">Options&lt;/h2>
&lt;p>To run &lt;code>localstack&lt;/code>, simply aliasing &lt;code>alias docker=podman&lt;/code> is not enough, for the following reasons:&lt;/p>
&lt;ul>
&lt;li>&lt;code>localstack&lt;/code> is using &lt;a href="https://pypi.org/project/docker/">docker-py&lt;/a> which requires a connection to &lt;code>/var/run/docker.sock&lt;/code>&lt;/li>
&lt;li>&lt;code>LAMBDA_EXECUTOR=docker&lt;/code> requires mounting &lt;code>/var/run/docker.sock&lt;/code> into the container&lt;/li>
&lt;/ul>
&lt;p>Here are several options on running LocalStack using podman:&lt;/p>
&lt;h3 id="podman-docker">podman-docker&lt;/h3>
&lt;p>The package &lt;code>podman-docker&lt;/code> emulates the Docker CLI using podman. It creates the following links:&lt;/p>
&lt;ul>
&lt;li>&lt;code>/usr/bin/docker -&amp;gt; /usr/bin/podman&lt;/code>&lt;/li>
&lt;li>&lt;code>/var/run/docker.sock -&amp;gt; /run/podman/podman.sock&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>This package is available for some distros:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://archlinux.org/packages/community/x86_64/podman-docker/">https://archlinux.org/packages/community/x86_64/podman-docker/&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://packages.ubuntu.com/impish/podman-docker">https://packages.ubuntu.com/impish/podman-docker&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://packages.debian.org/sid/podman-docker">https://packages.debian.org/sid/podman-docker&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="rootfull-podman-with-podman-docker">Rootfull Podman with podman-docker&lt;/h3>
&lt;p>The simplest option is to run &lt;code>localstack&lt;/code> using &lt;code>podman&lt;/code> by having &lt;code>podman-docker&lt;/code> and running &lt;code>localstack start&lt;/code> as root&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># you have to start the podman socket first&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl start podman
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># then&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sh -c &lt;span style="color:#4e9a06">&amp;#39;DEBUG=1 localstack start&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="rootfull-podman-without-podman-docker">Rootfull Podman without podman-docker&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># you still have to start the podman socket first&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo systemctl start podman
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># you have to pass a bunch of env variables&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>sudo sh -c &lt;span style="color:#4e9a06">&amp;#39;DEBUG=1 DOCKER_CMD=podman DOCKER_HOST=unix://run/podman/podman.sock DOCKER_SOCK=/run/podman/podman.sock localstack start&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="rootless-podman">Rootless Podman&lt;/h3>
&lt;p>You have to prepare your environment first:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://wiki.archlinux.org/title/Podman#Rootless_Podman">https://wiki.archlinux.org/title/Podman#Rootless_Podman&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/containers/podman/blob/main/docs/tutorials/rootless_tutorial.md">https://github.com/containers/podman/blob/main/docs/tutorials/rootless_tutorial.md&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.redhat.com/sysadmin/rootless-podman">https://www.redhat.com/sysadmin/rootless-podman&lt;/a>&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># again, you have to start the podman socket first&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>systemctl --user start podman.service
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># and then localstack&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">DEBUG&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000">DOCKER_CMD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;podman&amp;#34;&lt;/span> &lt;span style="color:#000">DOCKER_SOCK&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$XDG_RUNTIME_DIR&lt;/span>/podman/podman.sock &lt;span style="color:#000">DOCKER_HOST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>unix://&lt;span style="color:#000">$XDG_RUNTIME_DIR&lt;/span>/podman/podman.sock localstack start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>If you have problems with &lt;a href="https://wiki.archlinux.org/title/Podman#Set_subuid_and_subgid">subuid and subgid&lt;/a>, you could try to use &lt;a href="https://www.redhat.com/sysadmin/controlling-access-rootless-podman-users">overlay.ignore_chown_errors option&lt;/a>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">DEBUG&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span> &lt;span style="color:#000">DOCKER_CMD&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;podman --storage-opt overlay.ignore_chown_errors=true&amp;#34;&lt;/span> &lt;span style="color:#000">DOCKER_SOCK&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">$XDG_RUNTIME_DIR&lt;/span>/podman/podman.sock &lt;span style="color:#000">DOCKER_HOST&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>unix://&lt;span style="color:#000">$XDG_RUNTIME_DIR&lt;/span>/podman/podman.sock localstack start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>