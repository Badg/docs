<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs â€“ Enterprise plan</title><link>/tags/enterprise-plan/</link><description>Recent content in Enterprise plan on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/tags/enterprise-plan/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Guide: Outages Extension</title><link>/user-guide/chaos-engineering/outages-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/chaos-engineering/outages-extension/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>The &lt;a href="https://pypi.org/project/localstack-extension-outages/">LocalStack Outages Extension&lt;/a> allows you to mimic outages across any AWS region or service.
By integrating the Outages Extension using the &lt;a href="https://docs.localstack.cloud/user-guide/extensions/">LocalStack Extension mechanism&lt;/a>, you can assess
your infrastructure&amp;rsquo;s robustness. Intentionally triggering service outages and monitoring the system&amp;rsquo;s response in situations
where the infrastructure is compromised offers a powerful way to test. This strategy helps gauge the effectiveness of the system&amp;rsquo;s
deployment procedures and its resilience against infrastructure disruptions, which is a key element of chaos engineering.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Outages Extension is currently available as part of the &lt;strong>LocalStack Enterprise&lt;/strong> plan. If you&amp;rsquo;d like to try it out, please &lt;a href="https://www.localstack.cloud/demo">contact us&lt;/a> to request access.
&lt;/div>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>The general prerequisites for this guide are:&lt;/p>
&lt;ul>
&lt;li>LocalStack Pro with &lt;a href="https://docs.localstack.cloud/getting-started/installation/#localstack-cli">LocalStack CLI&lt;/a> &amp;amp; &lt;a href="https://docs.localstack.cloud/getting-started/auth-token/">LocalStack Auth Token&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/get-docker/">Docker&lt;/a> and &lt;a href="https://docs.docker.com/compose/install/">Docker Compose&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.python.org/downloads/">Python&lt;/a>&lt;/li>
&lt;/ul>
&lt;h3 id="installing-the-extension">Installing the extension&lt;/h3>
&lt;p>To install the LocalStack Outages Extension, first set up your LocalStack Auth Token in your environment. Once the token is configured, use the command below to install the extension:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>export LOCALSTACK_AUTH_TOKEN=&amp;lt;YOUR_LOCALSTACK_AUTH_TOKEN&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack extensions install localstack-extension-outages&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Alternatively, you can enable automatic installation of the extension by setting the environment variable &lt;code>EXTENSION_AUTO_INSTALL=localstack-extension-outages&lt;/code> when you start the LocalStack container.&lt;/p>
&lt;p>Follow our &lt;a href="https://docs.localstack.cloud/user-guide/extensions/managing-extensions/">Managing Extensions documentation&lt;/a> for more information on how to install &amp;amp; manage extensions.&lt;/p>
&lt;h3 id="configuration">Configuration&lt;/h3>
&lt;p>The extension is set up through an API endpoint, where the setup involves specifying a set of rules that are applied in order.
Each rule includes two key pieces of information: the service name and its region. You have the option to use the &lt;code>*&lt;/code> wildcard
for flexibility in either attribute.&lt;/p>
&lt;p>To initiate an outage for specific service/region combinations, you can make a POST request as described below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>curl --location --request POST &amp;#39;http://outages.localhost.localstack.cloud:4566/outages&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--data &amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;kms&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;us-east-1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;s3&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;us-*&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;lambda&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;*&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once activated, any API requests to the impacted services and regions will result in an HTTP 503 Service Unavailable error.&lt;/p>
&lt;p>In the given example, the services and regions affected include:&lt;/p>
&lt;ul>
&lt;li>KMS in us-east-1&lt;/li>
&lt;li>S3 in all US regions, including us-east-1, us-east-2, us-west-1, us-west-2, us-gov-east-1, and us-gov-west-1&lt;/li>
&lt;li>Lambda across all regions&lt;/li>
&lt;/ul>
&lt;p>To demonstrate this works as expected, we can try to create an S3 bucket in a US-based region:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://test-bucket --region us-east-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make_bucket failed: s3://test-bucket An error occurred (ServiceUnavailableException) when calling the CreateBucket operation (reached max retries: 4): Service &amp;#39;s3&amp;#39; not accessible in &amp;#39;us-east-1&amp;#39; region due to an outage
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>However, the same command executed for &lt;code>eu-central-1&lt;/code> is unaffected:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal s3 mb s3://test-bucket --region eu-central-1
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>make_bucket: test-bucket
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Outages may be stopped by using empty list in the configuration. The following request will clear the current configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>curl --location --request POST &amp;#39;http://outages.localhost.localstack.cloud:4566/outages&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--data &amp;#39;[]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To retrieve the current configuration, make the following GET call:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>curl --location --request GET &amp;#39;http://outages.localhost.localstack.cloud:4566/outages&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To add a new service/region rule pair to the configuration, make a PATCH call as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>curl --location --request PATCH &amp;#39;http://outages.localhost.localstack.cloud:4566/outages&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--data &amp;#39;[{&amp;#34;service&amp;#34;: &amp;#34;transcribe&amp;#34;, &amp;#34;region&amp;#34;: &amp;#34;us-west-1&amp;#34;}]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To remove a service/region rule pair from the configuration, make a DELETE call as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>curl --location --request DELETE &amp;#39;http://outages.localhost.localstack.cloud:4566/outages&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--data &amp;#39;[{&amp;#34;service&amp;#34;: &amp;#34;transcribe&amp;#34;, &amp;#34;region&amp;#34;: &amp;#34;us-west-1&amp;#34;}]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Special Configurations</title><link>/user-guide/chaos-engineering/special-configs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/chaos-engineering/special-configs/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>LocalStack allows users to inject intentional errors, particularly in Kinesis and DynamoDB. You can introduce controlled chaos into your development environment enhance to enhance service resilience. By configuring environment variables, you can simulate disruptions. This simple setup helps improve the response mechanisms of these key AWS services, ensuring robust architecture under challenging conditions with minimal initial configuration.&lt;/p>
&lt;p>This guide demonstrates the &lt;code>DYNAMODB_ERROR_PROBABILITY&lt;/code> and &lt;code>KINESIS_ERROR_PROBABILITY&lt;/code> configuration flags. The guide assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;h2 id="kinesis-error-probability">Kinesis Error Probability&lt;/h2>
&lt;p>The &lt;code>KINESIS_ERROR_PROBABILITY&lt;/code> setting allows users to introduce &lt;code>ProvisionedThroughputExceededException&lt;/code> errors randomly into Kinesis API responses. The value for this setting ranges from 0.0 (default) to 1.0.&lt;/p>
&lt;p>To demonstrate, set up LocalStack with &lt;code>KINESIS_ERROR_PROBABILITY&lt;/code> at 0.5, indicating a 50% chance of receiving a &lt;code>ProvisionedThroughputExceededException&lt;/code> from Kinesis.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>KINESIS_ERROR_PROBABILITY=0.5 localstack start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Next, create a Kinesis stream using the AWS CLI with the &lt;a href="https://docs.aws.amazon.com/kinesis/latest/APIReference/API_CreateStream.html">&lt;code>CreateStream&lt;/code>&lt;/a> API. For example, to create a stream named &amp;ldquo;ProductsStream&amp;rdquo; with one shard, use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis create-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stream-name ProductsStream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --shard-count 1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Assuming you have a product JSON converted into a Base64-encoded string, you can add this record to the stream like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis put-record \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stream-name ProductsStream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --partition-key &amp;#34;12345&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data &amp;#34;eyJwcm9kdWN0SWQiOiIxMjMiLCJwcm9kdWN0TmFtZSI6IlN1cGVyV2lkZ2V0IiwicHJvZHVjdFByaWNlIjoiMTk5Ljk5In0=&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After performing similar operations repeatedly, you can check the logs to verify that the configuration is working as intended. Remember, records will only be added during successful calls.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-11-09T23:33:49.867 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.CreateStream &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:01.003 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:05.114 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:08.178 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:08.346 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:09.726 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:10.499 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:11.982 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dynamodb-error-probability">DynamoDB Error Probability&lt;/h2>
&lt;p>The &lt;code>DYNAMODB_ERROR_PROBABILITY&lt;/code> setting, similar to the Kinesis configuration, allows for random &lt;code>ProvisionedThroughputExceededException&lt;/code> responses from the DynamoDB service. It also accepts a decimal value between 0.0 (default) and 1.0.&lt;/p>
&lt;p>To start LocalStack with a high error probability for DynamoDB, set &lt;code>DYNAMODB_ERROR_PROBABILITY&lt;/code> to 0.8:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>DYNAMODB_ERROR_PROBABILITY=0.8 localstack start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Next, create a DynamoDB table using the AWS CLI with the &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_CreateTable.html">&lt;code>CreateTable&lt;/code>&lt;/a> API. For example, to create a table named &amp;ldquo;Products&amp;rdquo; with a primary key of &amp;ldquo;ProductId&amp;rdquo;, use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ awslocal dynamodb create-table &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --table-name Products &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --attribute-definitions &lt;span style="color:#000">AttributeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ProductId,AttributeType&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>S &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --key-schema &lt;span style="color:#000">AttributeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ProductId,KeyType&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>HASH &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --provisioned-throughput &lt;span style="color:#000">ReadCapacityUnits&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>1,WriteCapacityUnits&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can add items to the table using the &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html">&lt;code>PutItem&lt;/code>&lt;/a> API. For example, to add a product with an ID of &amp;ldquo;123&amp;rdquo;, a name of &amp;ldquo;SuperWidget&amp;rdquo;, and a price of &amp;ldquo;199.99&amp;rdquo;, use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>awslocal dynamodb put-item &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --table-name Products &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --item &lt;span style="color:#4e9a06">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;ProductId&amp;#34;: {&amp;#34;S&amp;#34;: &amp;#34;123&amp;#34;},
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;ProductName&amp;#34;: {&amp;#34;S&amp;#34;: &amp;#34;SuperWidget&amp;#34;},
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;ProductPrice&amp;#34;: {&amp;#34;N&amp;#34;: &amp;#34;199.99&amp;#34;}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> }&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The logs will now show a higher frequency of &lt;code>ProvisionedThroughputExceededException&lt;/code> errors, followed by successful attempts due to the &lt;code>boto3&lt;/code> retry mechanism:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:12.836 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.CreateTable &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:27.889 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:27.968 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:28.089 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:28.410 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:35.845 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:35.911 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:36.028 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:36.249 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:36.673 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:37.484 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:39.101 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:42.326 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:48.737 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-10T00:00:01.606 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Despite these errors, the retry mechanism ensures that all items are eventually added to the DynamoDB table.&lt;/p></description></item><item><title>User-Guide: SSO for Azure AD</title><link>/user-guide/web-application/single-sign-on/azure-ad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/single-sign-on/azure-ad/</guid><description>
&lt;p>To configure SSO with an Azure AD Enterprise application, we provide a simple step-by-step solution below:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Navigate to &amp;ldquo;Set up single sign on&amp;rdquo; in your Azure AD Enterprise application.&lt;/p>
&lt;img src="azure-step-1.png" alt="Azure AD First Configuration Step">
&lt;/li>
&lt;li>
&lt;p>In the Basic SAML Configuration, ensure that the settings match the following details&lt;/p>
&lt;img src="azure-step-2.png" alt="Azure AD Second Configuration Step">
&lt;/li>
&lt;/ol>
&lt;p>Take the correct values for Identifier (Entity ID) and Reply URL from the Identity Provider configuration page.&lt;/p>
&lt;ol start="3">
&lt;li>
&lt;p>In the Attributes &amp;amp; Claims section, add a group claim with the following configuration and save it.&lt;/p>
&lt;img src="azure-step-3.png" alt="Azure AD Third Configuration Step">
&lt;/li>
&lt;li>
&lt;p>In the SAML Certificates section, copy the App Federation Metadata Url&lt;/p>
&lt;img src="azure-step-4.png" alt="Azure AD Fourth Configuration Step">
&lt;/li>
&lt;li>
&lt;p>Navigate to our web application, or follow this &lt;a href="https://app.localstack.cloud/workspace/sso">link&lt;/a>, and:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Create a new Identity provider&lt;/li>
&lt;li>Enter a name for you Identity provider, and choose SAML as the provider type.&lt;/li>
&lt;li>Select URL for the Metadata file and paste the link that you copied previously in step 4.&lt;/li>
&lt;li>For the attribute mapping, provide the following value for the Email attribute: &lt;code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name&lt;/code> - (This should match the Claim name of user.userprincipalname in your Attributes &amp;amp; Claims)&lt;/li>
&lt;li>Leave First name attribute and Last name attribute blank.&lt;/li>
&lt;/ul>
&lt;ol start="6">
&lt;li>Let your team members sign up to your LocalStack Organization via the Sign Up Portal Link.&lt;/li>
&lt;/ol></description></item><item><title>User-Guide: CI Analytics</title><link>/user-guide/web-application/ci-analytics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/ci-analytics/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>CI Analytics is a feature of LocalStack Web Application that allows users to get insights into their CI builds. CI Analytics unifies additional features, such as Cloud Pods &amp;amp; Stack Insights, and augments them with an integrated view of CI builds to provide users with insights and facilitate debugging. The features include:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>CI Project Runs&lt;/strong>: Offers a unified view of all CI builds for a particular project.&lt;/li>
&lt;li>&lt;strong>Log Output&lt;/strong>: Enables viewing of detailed logs for individual CI builds.&lt;/li>
&lt;li>&lt;strong>Request/Response Traces&lt;/strong>: Provides detailed traces of requests and responses, including the AWS service and operation involved, with expandable details of request and response data.&lt;/li>
&lt;li>&lt;strong>Cloud Pod State&lt;/strong>: Allows viewing the state of LocalStack resources for a specific CI build, accessible via a Cloud Pod.&lt;/li>
&lt;li>&lt;strong>Stack Insights&lt;/strong>: Displays a log of AWS API usage telemetry in your application stack, allowing you to examine the most frequently used services and API calls.&lt;/li>
&lt;/ul>
&lt;p>CI Analytics integrates with all of the popular CI/CD tools, including GitHub Actions, GitLab CI, CircleCI, to gather pipeline metrics that track the performance and results of your cloud infrastructure deployments.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
CI Analytics is currently in &lt;strong>private beta&lt;/strong>. If you&amp;rsquo;d like to try it out, please &lt;a href="https://www.localstack.cloud/demo">contact us&lt;/a> to request access.
&lt;/div>
&lt;h2 id="key-concepts">Key Concepts&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>CI Project&lt;/strong>: It represents an application executing builds and tests in a Continuous Integration (CI) pipeline. This corresponds to a repository or CI workflow on platforms like GitHub or GitLab.&lt;/li>
&lt;li>&lt;strong>CI Run&lt;/strong>: It refers to a single CI build within a CI project. It typically corresponds to a single instance of a LocalStack container.&lt;/li>
&lt;li>&lt;strong>CI Logs&lt;/strong>: These are the log outputs from the LocalStack container during a CI run.&lt;/li>
&lt;li>&lt;strong>CI Cloud Pod&lt;/strong>: A Cloud Pod that records the state of a project at the end of a CI run, or at specific checkpoints during the run.&lt;/li>
&lt;li>&lt;strong>CI Stack Insights&lt;/strong>: This includes the Stack Insights session and associated data for a particular CI run.&lt;/li>
&lt;/ul>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to CI Analytics and assumes basic knowledge of GitHub Actions and YAML. Though this guide uses GitHub Actions as an example, the steps are similar for other CI/CD tools. In this example, we will configure CI Analytics with an existing application that uses GitHub Actions.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>A &lt;a href="https://app.localstack.cloud/">LocalStack Account&lt;/a> and a &lt;a href="https://docs.localstack.cloud/getting-started/api-key/">LocalStack API key&lt;/a>.&lt;/li>
&lt;li>A &lt;a href="https://github.com/">GitHub Account&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>For practical testing, you can use an existing application that employs LocalStack for cloud infrastructure deployment on GitHub Actions. Alternatively, you can start by forking one of the &lt;a href="https://docs.localstack.cloud/applications/">Developer Hub samples&lt;/a>.&lt;/p>
&lt;h3 id="create-a-ci-project">Create a CI project&lt;/h3>
&lt;p>To create a new CI project:&lt;/p>
&lt;ol>
&lt;li>Go to the &lt;a href="https://app.localstack.cloud/ci">&lt;strong>CI Projects&lt;/strong>&lt;/a> section in the LocalStack Web Application.&lt;/li>
&lt;li>Click on &lt;strong>Create New Project&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;img src="create-new-project.png" alt="Create a new CI project" title="Create a new CI project" width="800" class="img-fluid shadow rounded" />
&lt;br>&lt;br>
&lt;p>When creating a new CI project, fill in the following information:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Project Name&lt;/strong>: Enter a name for your CI project.&lt;/li>
&lt;li>&lt;strong>Settings&lt;/strong>: Adjust the default-enabled options as needed:
&lt;ul>
&lt;li>&lt;strong>Store LocalStack Logs&lt;/strong>: Check this to save logs from your LocalStack container.&lt;/li>
&lt;li>&lt;strong>Store LocalStack Traces&lt;/strong>: Check this to save traces of your infrastructure tests.&lt;/li>
&lt;li>&lt;strong>Track the State of Your CI Run in a Cloud Pod&lt;/strong>: Check this to monitor the state of your LocalStack resources during the CI run.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Cloud Pod Services&lt;/strong>: Specify the AWS services for which you want to store infrastructure states. Select from the available options.&lt;/li>
&lt;li>&lt;strong>Historical CI Runs&lt;/strong>: Set the number of past CI runs to retain (default is 100).&lt;/li>
&lt;/ul>
&lt;p>The &lt;strong>Cloud Pod Name&lt;/strong> field will auto-fill with the name of your Cloud Pod, which identifies the resources created by LocalStack for your CI project. Click &lt;strong>Create&lt;/strong> to finalize your CI project.&lt;/p>
&lt;h3 id="configure-the-ci-pipeline">Configure the CI pipeline&lt;/h3>
&lt;p>Go to the GitHub Action workflow where you intend to monitor CI analytics for your application stack. If you haven&amp;rsquo;t already set up a CI pipeline using LocalStack for infrastructure deployments and tests, follow the instructions in our &lt;a href="https://docs.localstack.cloud/user-guide/ci/github-actions/">GitHub Actions documentation&lt;/a>.&lt;/p>
&lt;p>To link your CI pipeline to the project you created, use the &lt;code>LS_CI_PROJECT&lt;/code> configuration variable. For instance, if your CI project is named &lt;code>ls-platform-integration-tests&lt;/code>, include the line &lt;code>LS_CI_PROJECT: ls-platform-integration-tests&lt;/code> in your GitHub Action workflow.&lt;/p>
&lt;p>Here&amp;rsquo;s an example of a basic workflow configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack-ci-analytics-example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">push&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">example-job&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">runs-on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ubuntu-latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">steps&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Start LocalStack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">LOCALSTACK_API_KEY&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">${{ secrets.LOCALSTACK_API_KEY }}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">LS_CI_PROJECT&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ls-platform-integration-tests&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> pip install localstack awscli-local[ver1]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> docker pull localstack/localstack-pro
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> localstack start -d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> localstack wait -t 30&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Run some Tests against LocalStack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> awslocal s3 mb s3://test
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> awslocal s3 ls
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> echo &amp;#34;Test Execution complete!&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configure-the-api-key">Configure the API key&lt;/h3>
&lt;p>The LocalStack CLI utilizes the &lt;code>LOCALSTACK_API_KEY&lt;/code> for authentication with the LocalStack Platform. This process enables the storage of logs and request/response traces from your CI run in the LocalStack Web Application. For setting up an API key, refer our &lt;a href="https://docs.localstack.cloud/user-guide/ci/github-actions/#configuring-an-api-key">documentation on configuring an API key&lt;/a>.&lt;/p>
&lt;h3 id="review-the-analytics">Review the Analytics&lt;/h3>
&lt;p>You can now trigger the CI pipeline to run your application stack in a CI environment. Navigate to the &lt;a href="https://app.localstack.cloud/ci">&lt;strong>CI Projects&lt;/strong>&lt;/a> dashboard on the LocalStack Web Application. Here, you&amp;rsquo;ll find the CI project you created earlier. Click on the project to access its CI runs.&lt;/p>
&lt;img src="ci-project-runs.png" alt="CI Project Runs" title="CI Project Runs" width="800" class="img-fluid shadow rounded" />
&lt;br>&lt;br>
&lt;p>In the project&amp;rsquo;s detail view, you can select a specific &lt;strong>Run ID&lt;/strong> to examine its details. The CI run details page will display various information, including logs and other relevant data.&lt;/p>
&lt;img src="localstack-ci-run-details.png" alt="Logs being displayed on the CI Project run" title="Logs being displayed on the CI Project run" width="800" class="img-fluid shadow rounded" />
&lt;br>&lt;br>
&lt;p>For in-depth analysis, you have the option to view &lt;strong>Request/Response Traces&lt;/strong> for the CI run. These traces provide detailed insights into each request and response during the run. You can expand these traces to explore specific details and scroll down to review the traces for each test case.&lt;/p>
&lt;img src="request-response-traces.png" alt="Request/Response traces from the CI Project run" title="Request/Response traces from the CI Project run" width="800" class="img-fluid shadow rounded" />
&lt;br>&lt;br>
&lt;p>You can additionally scroll down to review the traces for each test case.&lt;/p>
&lt;img src="request-response-traces-test.png" alt="Request/Response traces from the application tests" title="Request/Response traces from the application tests" width="800" class="img-fluid shadow rounded" />
&lt;br>&lt;br>
&lt;p>Lastly, you can navigate to the top of the page to explore the &lt;strong>Cloud Pod&lt;/strong> and &lt;strong>Stack Insights&lt;/strong> related to the CI run. These features offer a broader view of the CI run&amp;rsquo;s impact and performance.&lt;/p></description></item><item><title>User-Guide: Single-Sign On</title><link>/user-guide/web-application/single-sign-on/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/single-sign-on/</guid><description>
&lt;p>Custom Single-Sign On (SSO) Identity providers, can be enabled to facilitate the process of quickly onboarding team members from your organization.&lt;/p>
&lt;p>In order to configure SSO access, first sign in to the LocalStack Web application under &lt;a href="https://app.localstack.cloud/">app.localstack.cloud&lt;/a>.
In your profile settings, navigate to the Single Sign-on tab which will list existing SSO Identity Providers (if any exist).&lt;/p>
&lt;img src="localstack-setting-sso.png" width="800px" alt="Adding SSO Identity providers in LocalStack Settings">
&lt;p>Next, click the button to create a new identity provider (IdP), where you can choose between the two leading industry standards:&lt;/p>
&lt;ul>
&lt;li>OpenID Connect (OIDC): &lt;a href="https://openid.net/connect/">openid.net/connect&lt;/a>&lt;/li>
&lt;li>SAML: &lt;a href="http://saml.xml.org/saml-specifications">saml.xml.org/saml-specifications&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="configuring-sso-using-openid-connect-oidc">Configuring SSO using OpenID Connect (OIDC)&lt;/h2>
&lt;p>In the form illustrated below, you can then enter the main information for the new IdP (using OpenID Connect):&lt;/p>
&lt;ul>
&lt;li>Name of your identity provider&lt;/li>
&lt;li>Client ID, Client Secret, Attributes request method, OIDC issues, Authorize scopes, and more.
&lt;ul>
&lt;li>You should be able to find these attributes in your OIDC IdP configuration.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;img src="oidc-sso.png" width="600px" alt="Configuring SSO using OpenID Connect (OIDC)">
&lt;h2 id="configuring-sso-using-saml">Configuring SSO using SAML&lt;/h2>
&lt;p>When configuring SSO using SAML, you can configure the settings of the Identity Provider via a standard SAML metadata file (see illustration below).
The SAML metadata file can be specified either via URL or via a file upload.&lt;/p>
&lt;p>Select &lt;strong>Enable IdP sign out flow&lt;/strong> if you want your users to be logged out from our app and your SAML IdP when they log out from your our Web Application.&lt;/p>
&lt;img src="saml-sso.png" width="600px" alt="Configuring SSO using SAML">
&lt;h2 id="attribute-mapping">Attribute mapping&lt;/h2>
&lt;p>These attributes can be defined to automatically map attributes of user entities in your internal IdP to user attributes in the LocalStack platform.&lt;/p>
&lt;p>The following user attribute mappings can currently be configured:&lt;/p>
&lt;ul>
&lt;li>Email&lt;/li>
&lt;li>First name&lt;/li>
&lt;li>Last name&lt;/li>
&lt;/ul>
&lt;p>The Email should be configured to ensure correct functionality.&lt;/p>
&lt;img src="attribute-mapping.png" width="600px" alt="Attribute Mapping">
&lt;h2 id="callback-url-sign-up-portal-url-and-identifier-entity-id">Callback URL, Sign Up Portal URL and Identifier (Entity Id)&lt;/h2>
&lt;p>After configuring the base details for your Identity Provider (IdP), the following additional information can be copied from the UI:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Callback URL&lt;/strong>: The Callback URL that you may need to configure in the settings of your IdP.&lt;/li>
&lt;li>&lt;strong>Identifier (Entity Id)&lt;/strong>: The Identifier (Entity Id) that you may need to configure in the settings of your IdP.&lt;/li>
&lt;li>&lt;strong>Sign Up Portal URL&lt;/strong>: This is the URL that can be shared with your users to start the SSO signup flow for the LocalStack Web Application. The format of this endpoint is &lt;code>https://app.localstack.cloud/auth/sso/&amp;lt;organizationId&amp;gt;/&amp;lt;ssoName&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;img src="additional-information-page.png" width="600px" alt="Callback URL, Sign Up Portal URL, and Identifier (Entity Id)">
&lt;h2 id="user-roles-and-permissions">User Roles and Permissions&lt;/h2>
&lt;p>For each new member that joins your org, you can specify user roles and permissions that should be assigned to them.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Default User Role&lt;/strong>: The Role that should be assigned to users of your organization signing up via SSO. In most cases, this should be a Member.&lt;/li>
&lt;li>&lt;strong>Default User Permissions&lt;/strong>: Use this to define which permissions should be assigned to users of your organization signing up via SSO.
&lt;ul>
&lt;li>Tip: In order to enable self-serve licences (i.e., allowing your users to allocate themselves their own license), make sure to select the &lt;strong>Allow member to issue a license for themselves (or a legacy API key)&lt;/strong> permission.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;img src="roles-permissions.png" width="600px" alt="User Roles and Permissions"></description></item></channel></rss>