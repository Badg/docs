<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs â€“ Enterprise plan</title><link>/tags/enterprise-plan/</link><description>Recent content in Enterprise plan on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/tags/enterprise-plan/index.xml" rel="self" type="application/rss+xml"/><item><title>User-Guide: CI Analytics</title><link>/user-guide/ci/ci-analytics/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/ci/ci-analytics/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>CI Analytics is a feature of LocalStack Web Application that allows users to get insights into their CI builds. CI Analytics unifies additional features, such as Cloud Pods &amp;amp; Stack Insights, and augments them with an integrated view of CI builds to provide users with insights and facilitate debugging. The features include:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>CI Project Runs&lt;/strong>: Offers a unified view of all CI builds for a particular project.&lt;/li>
&lt;li>&lt;strong>Log Output&lt;/strong>: Enables viewing of detailed logs for individual CI builds.&lt;/li>
&lt;li>&lt;strong>Request/Response Traces&lt;/strong>: Provides detailed traces of requests and responses, including the AWS service and operation involved, with expandable details of request and response data.&lt;/li>
&lt;li>&lt;strong>Cloud Pod State&lt;/strong>: Allows viewing the state of LocalStack resources for a specific CI build, accessible via a Cloud Pod.&lt;/li>
&lt;li>&lt;strong>Stack Insights&lt;/strong>: Displays a log of AWS API usage telemetry in your application stack, allowing you to examine the most frequently used services and API calls.&lt;/li>
&lt;/ul>
&lt;p>CI Analytics integrates with all of the popular CI/CD tools, including GitHub Actions, GitLab CI, CircleCI, to gather pipeline metrics that track the performance and results of your cloud infrastructure deployments.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
CI Analytics is currently in &lt;strong>private beta&lt;/strong>. If you&amp;rsquo;d like to try it out, please &lt;a href="https://www.localstack.cloud/demo">contact us&lt;/a> to request access.
&lt;/div>
&lt;h2 id="key-concepts">Key Concepts&lt;/h2>
&lt;ul>
&lt;li>&lt;strong>CI Project&lt;/strong>: It represents an application executing builds and tests in a Continuous Integration (CI) pipeline. This corresponds to a repository or CI workflow on platforms like GitHub or GitLab.&lt;/li>
&lt;li>&lt;strong>CI Run&lt;/strong>: It refers to a single CI build within a CI project. It typically corresponds to a single instance of a LocalStack container.&lt;/li>
&lt;li>&lt;strong>CI Logs&lt;/strong>: These are the log outputs from the LocalStack container during a CI run.&lt;/li>
&lt;li>&lt;strong>CI Cloud Pod&lt;/strong>: A Cloud Pod that records the state of a project at the end of a CI run, or at specific checkpoints during the run.&lt;/li>
&lt;li>&lt;strong>CI Stack Insights&lt;/strong>: This includes the Stack Insights session and associated data for a particular CI run.&lt;/li>
&lt;/ul>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to CI Analytics and assumes basic knowledge of GitHub Actions and YAML. Though this guide uses GitHub Actions as an example, the steps are similar for other CI/CD tools. In this example, we will configure CI Analytics with an existing application that uses GitHub Actions.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;ul>
&lt;li>A &lt;a href="https://app.localstack.cloud/">LocalStack Account&lt;/a> and a &lt;a href="https://docs.localstack.cloud/getting-started/api-key/">LocalStack API key&lt;/a>.&lt;/li>
&lt;li>A &lt;a href="https://github.com/">GitHub Account&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>For practical testing, you can use an existing application that employs LocalStack for cloud infrastructure deployment on GitHub Actions. Alternatively, you can start by forking one of the &lt;a href="https://docs.localstack.cloud/applications/">Developer Hub samples&lt;/a>.&lt;/p>
&lt;h3 id="create-a-ci-project">Create a CI project&lt;/h3>
&lt;p>To create a new CI project:&lt;/p>
&lt;ol>
&lt;li>Go to the &lt;a href="https://app.localstack.cloud/ci">&lt;strong>CI Projects&lt;/strong>&lt;/a> section in the LocalStack Web Application.&lt;/li>
&lt;li>Click on &lt;strong>Create New Project&lt;/strong>.&lt;/li>
&lt;/ol>
&lt;img src="create-new-project.png" alt="Create a new CI project" title="Create a new CI project" width="800" class="img-fluid shadow rounded" />
&lt;br>&lt;br>
&lt;p>When creating a new CI project, fill in the following information:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Project Name&lt;/strong>: Enter a name for your CI project.&lt;/li>
&lt;li>&lt;strong>Settings&lt;/strong>: Adjust the default-enabled options as needed:
&lt;ul>
&lt;li>&lt;strong>Store LocalStack Logs&lt;/strong>: Check this to save logs from your LocalStack container.&lt;/li>
&lt;li>&lt;strong>Store LocalStack Traces&lt;/strong>: Check this to save traces of your infrastructure tests.&lt;/li>
&lt;li>&lt;strong>Track the State of Your CI Run in a Cloud Pod&lt;/strong>: Check this to monitor the state of your LocalStack resources during the CI run.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>&lt;strong>Cloud Pod Services&lt;/strong>: Specify the AWS services for which you want to store infrastructure states. Select from the available options.&lt;/li>
&lt;li>&lt;strong>Historical CI Runs&lt;/strong>: Set the number of past CI runs to retain (default is 100).&lt;/li>
&lt;/ul>
&lt;p>The &lt;strong>Cloud Pod Name&lt;/strong> field will auto-fill with the name of your Cloud Pod, which identifies the resources created by LocalStack for your CI project. Click &lt;strong>Create&lt;/strong> to finalize your CI project.&lt;/p>
&lt;h3 id="configure-the-ci-pipeline">Configure the CI pipeline&lt;/h3>
&lt;p>Go to the GitHub Action workflow where you intend to monitor CI analytics for your application stack. If you haven&amp;rsquo;t already set up a CI pipeline using LocalStack for infrastructure deployments and tests, follow the instructions in our &lt;a href="https://docs.localstack.cloud/user-guide/ci/github-actions/">GitHub Actions documentation&lt;/a>.&lt;/p>
&lt;p>To link your CI pipeline to the project you created, use the &lt;code>LS_CI_PROJECT&lt;/code> configuration variable. For instance, if your CI project is named &lt;code>ls-platform-integration-tests&lt;/code>, include the line &lt;code>LS_CI_PROJECT: ls-platform-integration-tests&lt;/code> in your GitHub Action workflow.&lt;/p>
&lt;p>Here&amp;rsquo;s an example of a basic workflow configuration:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yaml" data-lang="yaml">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">localstack-ci-analytics-example&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">push&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">&lt;/span>&lt;span style="color:#204a87;font-weight:bold">jobs&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">example-job&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">runs-on&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ubuntu-latest&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">steps&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Start LocalStack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">env&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">LOCALSTACK_API_KEY&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">${{ secrets.LOCALSTACK_API_KEY }}&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">LS_CI_PROJECT&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">ls-platform-integration-tests&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> pip install localstack awscli-local[ver1]
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> docker pull localstack/localstack-pro
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> localstack start -d
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> localstack wait -t 30&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>- &lt;span style="color:#204a87;font-weight:bold">name&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000">Run some Tests against LocalStack&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#204a87;font-weight:bold">run&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline"> &lt;/span>&lt;span style="color:#000;font-weight:bold">|&lt;/span>&lt;span style="color:#8f5902;font-style:italic">
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> awslocal s3 mb s3://test
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> awslocal s3 ls
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"> echo &amp;#34;Test Execution complete!&amp;#34;&lt;/span>&lt;span style="color:#f8f8f8;text-decoration:underline">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="configure-the-api-key">Configure the API key&lt;/h3>
&lt;p>The LocalStack CLI utilizes the &lt;code>LOCALSTACK_API_KEY&lt;/code> for authentication with the LocalStack Platform. This process enables the storage of logs and request/response traces from your CI run in the LocalStack Web Application. For setting up an API key, refer our &lt;a href="https://docs.localstack.cloud/user-guide/ci/github-actions/#configuring-an-api-key">documentation on configuring an API key&lt;/a>.&lt;/p>
&lt;h3 id="review-the-analytics">Review the Analytics&lt;/h3>
&lt;p>You can now trigger the CI pipeline to run your application stack in a CI environment. Navigate to the &lt;a href="https://app.localstack.cloud/ci">&lt;strong>CI Projects&lt;/strong>&lt;/a> dashboard on the LocalStack Web Application. Here, you&amp;rsquo;ll find the CI project you created earlier. Click on the project to access its CI runs.&lt;/p>
&lt;img src="ci-project-runs.png" alt="CI Project Runs" title="CI Project Runs" width="800" class="img-fluid shadow rounded" />
&lt;br>&lt;br>
&lt;p>In the project&amp;rsquo;s detail view, you can select a specific &lt;strong>Run ID&lt;/strong> to examine its details. The CI run details page will display various information, including logs and other relevant data.&lt;/p>
&lt;img src="localstack-ci-run-details.png" alt="Logs being displayed on the CI Project run" title="Logs being displayed on the CI Project run" width="800" class="img-fluid shadow rounded" />
&lt;br>&lt;br>
&lt;p>For in-depth analysis, you have the option to view &lt;strong>Request/Response Traces&lt;/strong> for the CI run. These traces provide detailed insights into each request and response during the run. You can expand these traces to explore specific details and scroll down to review the traces for each test case.&lt;/p>
&lt;img src="request-response-traces.png" alt="Request/Response traces from the CI Project run" title="Request/Response traces from the CI Project run" width="800" class="img-fluid shadow rounded" />
&lt;br>&lt;br>
&lt;p>You can additionally scroll down to review the traces for each test case.&lt;/p>
&lt;img src="request-response-traces-test.png" alt="Request/Response traces from the application tests" title="Request/Response traces from the application tests" width="800" class="img-fluid shadow rounded" />
&lt;br>&lt;br>
&lt;p>Lastly, you can navigate to the top of the page to explore the &lt;strong>Cloud Pod&lt;/strong> and &lt;strong>Stack Insights&lt;/strong> related to the CI run. These features offer a broader view of the CI run&amp;rsquo;s impact and performance.&lt;/p></description></item><item><title>User-Guide: Fault Injection Simulator Experiments</title><link>/user-guide/chaos-engineering/fis-experiments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/chaos-engineering/fis-experiments/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Fault Injection Simulator (FIS) is a service designed for conducting controlled chaos engineering tests on AWS infrastructure. Its purpose is to uncover vulnerabilities and improve system robustness. FIS offers a means to deliberately introduce failures and observe their impacts, helping developers to better equip their systems against actual outages. To read about the FIS service, refer to the dedicated &lt;a href="https://docs.localstack.cloud/user-guide/aws/fis/">FIS documentation&lt;/a>.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to the Fault Injection Simulator and assumes basic knowledge of the AWS CLI and our
&lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script. In this example, we will use the FIS to create controlled outages in a DynamoDB database. The aim is to test the software&amp;rsquo;s behavior and error handling capabilities.&lt;/p>
&lt;p>For this particular example, we&amp;rsquo;ll be using a &lt;a href="https://github.com/localstack-samples/samples-chaos-engineering/tree/main/FIS-experiments">sample application repository&lt;/a>. Clone the repository, and follow the instructions below to get started.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>The general prerequisites for this guide are:&lt;/p>
&lt;ul>
&lt;li>LocalStack Pro with &lt;a href="https://docs.localstack.cloud/getting-started/auth-token/">LocalStack Auth Token&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/integrations/aws-cli/">AWS CLI&lt;/a> with the &lt;a href="https://docs.localstack.cloud/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal">&lt;code>awslocal&lt;/code> wrapper&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/get-docker/">Docker&lt;/a> and &lt;a href="https://docs.docker.com/compose/install/">Docker Compose&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Start LocalStack by using the &lt;code>docker-compose.yml&lt;/code> file from the repository. Ensure to set your Auth Token as an environment variable during this process. The cloud resources will be automatically created upon the LocalStack start.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>LOCALSTACK_AUTH_TOKEN=&amp;lt;YOUR_LOCALSTACK_AUTH_TOKEN&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker compose up&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="application-architecture">Application Architecture&lt;/h3>
&lt;p>The following diagram shows the architecture that this application builds and deploys:&lt;/p>
&lt;figure>
&lt;img src="/user-guide/chaos-engineering/fis-experiments/fis-experiment-1.png" width="800"/>
&lt;/figure>
&lt;h3 id="creating-an-experiment-template">Creating an experiment template&lt;/h3>
&lt;p>Before starting any FIS experiments, it&amp;rsquo;s important to verify that our application is functioning correctly. Start by creating an entity and saving it. To do this, use &lt;code>cURL&lt;/code> to call the API Gateway endpoint for the POST method:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location &amp;#39;http://12345.execute-api.localhost.localstack.cloud:4566/dev/productApi&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;prod-2004&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;Ultimate Gadget&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;price&amp;#34;: &amp;#34;49.99&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;The Ultimate Gadget is the perfect tool for tech enthusiasts looking for the next level in gadgetry. Compact, powerful, and loaded with features.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Product added/updated successfully.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can use the file named &lt;code>experiment-ddb.json&lt;/code> that contains the FIS experiment configuration. This file will be used in the upcoming call to the &lt;a href="https://docs.aws.amazon.com/fis/latest/APIReference/API_CreateExperimentTemplate.html">&lt;code>CreateExperimentTemplate&lt;/code>&lt;/a> API within the FIS resource.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ cat experiment-ddb.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Test action 1&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actionId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;localstack:generic:api-error&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;parameters&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;service&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;dynamodb&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;api&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;all&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;percentage&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;100&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;exception&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;DynamoDbException&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;errorCode&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;500&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;description&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Template for interfering with the DynamoDB service&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;stopConditions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;source&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;roleArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This template is designed to target all APIs of the DynamoDB resource. While it&amp;rsquo;s possible to specify particular operations like &lt;code>PutItem&lt;/code> or &lt;code>GetItem&lt;/code>, the objective here is to entirely disconnect the database.&lt;/p>
&lt;p>As a result, this configuration will cause all API calls to fail with a 100% failure rate, each resulting in an HTTP 500 status code and a &lt;code>DynamoDbException&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis create-experiment-template --cli-input-json file://experiment-ddb.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experimentTemplate&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;895591e8-11e6-44c4-adc3-86592010562b&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;Template for interfering with the DynamoDB service&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Test action 1&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;dynamodb&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;api&amp;#34;: &amp;#34;all&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;percentage&amp;#34;: &amp;#34;100&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;exception&amp;#34;: &amp;#34;DynamoDbException&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;errorCode&amp;#34;: &amp;#34;500&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;source&amp;#34;: &amp;#34;none&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;creationTime&amp;#34;: 1699308754.415716,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;lastUpdateTime&amp;#34;: 1699308754.415716,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Take note of the &lt;code>id&lt;/code> field in the response. This is the ID of the experiment template that will be used in the next step.&lt;/p>
&lt;h3 id="starting-the-experiment">Starting the experiment&lt;/h3>
&lt;p>Following the creation of the experiment template, you can create a new experiment using the template&amp;rsquo;s ID.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis start-experiment --experiment-template-id &amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experiment&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;1b1238fd-316d-4956-93e7-5ada677a6f69&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experimentTemplateId&amp;#34;: &amp;#34;895591e8-11e6-44c4-adc3-86592010562b&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;state&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;running&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Test action 1&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;dynamodb&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;api&amp;#34;: &amp;#34;all&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;percentage&amp;#34;: &amp;#34;100&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;exception&amp;#34;: &amp;#34;DynamoDbException&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;errorCode&amp;#34;: &amp;#34;500&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;source&amp;#34;: &amp;#34;none&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;creationTime&amp;#34;: 1699308823.74327,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;startTime&amp;#34;: 1699308823.74327
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace the &lt;code>&amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;&lt;/code> placeholder with the ID of the experiment template that was created in the previous step.&lt;/p>
&lt;h3 id="simulating-an-outage">Simulating an outage&lt;/h3>
&lt;p>Once the experiment starts, the database becomes inaccessible. This means users cannot retrieve or add new products, resulting in the API Gateway returning an Internal Server Error. Downtime and data loss are critical issues to avoid in enterprise applications.&lt;/p>
&lt;p>Fortunately, encountering this issue early in the development phase allows developers to implement effective error handling and develop mechanisms to prevent data loss during a database outage.&lt;/p>
&lt;p>It&amp;rsquo;s important to note that this approach is not limited to DynamoDB; outages can be simulated for any storage resource.&lt;/p>
&lt;h3 id="setting-up-a-solution">Setting up a solution&lt;/h3>
&lt;figure>
&lt;img src="/user-guide/chaos-engineering/fis-experiments/fis-experiment-2.png" width="800"/>
&lt;/figure>
&lt;p>A possible solution involves setting up an SNS topic, an SQS queue, and a Lambda function. The Lambda function will be responsible for retrieving queued items and attempting to re-execute the &lt;code>PutItem&lt;/code> operation on the database. If DynamoDB remains unavailable, the item will be placed back in the queue for a later retry.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location &amp;#39;http://12345.execute-api.localhost.localstack.cloud:4566/dev/productApi&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;prod-1003&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;Super Widget&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;price&amp;#34;: &amp;#34;29.99&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;A versatile widget that can be used for a variety of purposes. Durable, reliable, and affordable.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>A DynamoDB error occurred. Message sent to queue.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If we review the logs, it will show that the &lt;code>DynamoDbException&lt;/code> has been managed effectively.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-11-06T22:21:40.789 DEBUG --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_2&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> l.services.fis.handler : FIS handler called with configs: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;dynamodb&amp;#39;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>None: &lt;span style="color:#ce5c00;font-weight:bold">[(&lt;/span>100, &lt;span style="color:#4e9a06">&amp;#39;DynamoDbException&amp;#39;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#39;500&amp;#39;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)]}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-06T22:21:40.789 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_2&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">500&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>DynamoDbException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-06T22:21:40.834 DEBUG --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_4&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> l.services.sns.publisher : Topic &lt;span style="color:#4e9a06">&amp;#39;arn:aws:sns:us-east-1:000000000000:ProductEventsTopic&amp;#39;&lt;/span> publishing &lt;span style="color:#4e9a06">&amp;#39;5520d37a-fc21-4a73-b1bf-f9b9afce5908&amp;#39;&lt;/span> to subscribed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#39;arn:aws:sqs:us-east-1:000000000000:ProductEventsQueue&amp;#39;&lt;/span> with protocol &lt;span style="color:#4e9a06">&amp;#39;sqs&amp;#39;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>subscription &lt;span style="color:#4e9a06">&amp;#39;arn:aws:sns:us-east-1:000000000000:ProductEventsTopic:0a4abf8c-744a-404a-9ff9-f132e25d1b30&amp;#39;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This element will remain in the queue until the outage is resolved.&lt;/p>
&lt;h3 id="stopping-the-experiment">Stopping the experiment&lt;/h3>
&lt;p>To stop the experiment, use the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis stop-experiment --id &amp;lt;EXPERIMENT_ID&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experiment&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;1b1238fd-316d-4956-93e7-5ada677a6f69&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experimentTemplateId&amp;#34;: &amp;#34;895591e8-11e6-44c4-adc3-86592010562b&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;state&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;stopped&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Test action 1&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;dynamodb&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;api&amp;#34;: &amp;#34;all&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;percentage&amp;#34;: &amp;#34;100&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;exception&amp;#34;: &amp;#34;DynamoDbException&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;errorCode&amp;#34;: &amp;#34;500&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;startTime&amp;#34;: 1699308823.750742,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endTime&amp;#34;: 1699309736.259625
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;source&amp;#34;: &amp;#34;none&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;creationTime&amp;#34;: 1699308823.74327,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;startTime&amp;#34;: 1699308823.74327,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endTime&amp;#34;: 1699309736.259646
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace the &lt;code>&amp;lt;EXPERIMENT_ID&amp;gt;&lt;/code> placeholder with the ID of the experiment that was created in the previous step.&lt;/p>
&lt;p>The experiment has been terminated, allowing the Product that initially failed to reach the database to finally be stored successfully. This can be confirmed by scanning the database.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb scan --table-name Products
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Items&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;Super Widget&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;A versatile widget that can be used for a variety of purposes. Durable, reliable, and affordable.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;prod-1003&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;price&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;N&amp;#34;: &amp;#34;29.99&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;Ultimate Gadget&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;The Ultimate Gadget is the perfect tool for tech enthusiasts looking for the next level in gadgetry. Compact, powerful, and loaded with features.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;prod-2004&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;price&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;N&amp;#34;: &amp;#34;49.99&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Count&amp;#34;: 2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ScannedCount&amp;#34;: 2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ConsumedCapacity&amp;#34;: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="configuring-the-latency">Configuring the latency&lt;/h3>
&lt;p>The LocalStack FIS service can also introduce latency using the following experiment template:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;description&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;template for testing delays in API calls&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;latency&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actionId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;localstack:generic:api-error&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;parameters&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;latency&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;4&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;stopConditions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;source&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;roleArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Save this template as &lt;code>latency-experiment.json&lt;/code> and use it to create an experiment definition through the FIS service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis create-experiment-template --cli-input-json file://latency-experiment.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experimentTemplate&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;966f5632-4e2c-4567-b99c-436c333e523f&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;template for testing delays in API calls&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;latency&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;latency&amp;#34;: &amp;#34;4&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;source&amp;#34;: &amp;#34;none&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;creationTime&amp;#34;: 1699619228.208613,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;lastUpdateTime&amp;#34;: 1699619228.208613,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis start-experiment --experiment-template-id &amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace the &lt;code>&amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;&lt;/code> placeholder with the ID of the experiment template that was created in the previous step.&lt;/p>
&lt;p>While the experiment is active, you can use the same sample stack to observe and understand the effects of a 4-second delay on each service call.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location &amp;#39;http://12345.execute-api.localhost.localstack.cloud:4566/dev/productApi&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;prod-1088&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;Super Widget&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;price&amp;#34;: &amp;#34;29.99&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;A versatile widget that can be used for a variety of purposes. Durable, reliable, and affordable.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>An error occurred (InternalError) when calling the GetResources operation (reached max retries: 4): Failing as per Fault Injection Simulator configuration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Outages Extension</title><link>/user-guide/chaos-engineering/outages-extension/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/chaos-engineering/outages-extension/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>&lt;a href="https://pypi.org/project/localstack-extension-outages/">LocalStack Outages Extension&lt;/a> can simulate outages for any AWS region or service. You can install and use the Outages Extension through &lt;a href="https://docs.localstack.cloud/user-guide/extensions/">LocalStack Extension mechanism&lt;/a> to test infrastructure resilience by intentionally causing service outages and observing the system&amp;rsquo;s recovery in scenarios with incomplete infrastructure is an effective approach. This method evaluates the system&amp;rsquo;s deployment mechanisms and its ability to handle and recover from infrastructure anomalies, a critical aspect of chaos engineering.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Outages Extension is currently available as part of the &lt;strong>LocalStack Enterprise&lt;/strong> plan. If you&amp;rsquo;d like to try it out, please &lt;a href="https://www.localstack.cloud/demo">contact us&lt;/a> to request access.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users who are new to Outages Extension. We&amp;rsquo;ll simulate partial outages by interrupting specific services, such as halting an ECS instance creation or disrupting a database service. By closely watching Terraform&amp;rsquo;s responses and the status of AWS resources, you&amp;rsquo;ll learn how Terraform manages these disruptions.&lt;/p>
&lt;p>For this particular example, we&amp;rsquo;ll be using a Terraform configuration file from a &lt;a href="https://github.com/localstack-samples/samples-chaos-engineering/tree/main/extension-outages">sample application repository&lt;/a>. Clone the repository, and follow the instructions below to get started.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>The general prerequisites for this guide are:&lt;/p>
&lt;ul>
&lt;li>LocalStack Pro with &lt;a href="https://docs.localstack.cloud/getting-started/installation/#localstack-cli">LocalStack CLI&lt;/a> &amp;amp; &lt;a href="https://docs.localstack.cloud/getting-started/auth-token/">LocalStack Auth Token&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/integrations/aws-cli/">AWS CLI&lt;/a> with the &lt;a href="https://docs.localstack.cloud/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal">&lt;code>awslocal&lt;/code> wrapper&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/get-docker/">Docker&lt;/a> and &lt;a href="https://docs.docker.com/compose/install/">Docker Compose&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.terraform.io/downloads.html">Terraform&lt;/a> and &lt;a href="https://docs.localstack.cloud/user-guide/integrations/terraform/#tflocal-wrapper-script">&lt;code>tflocal&lt;/code> wrapper&lt;/a>.&lt;/li>
&lt;/ul>
&lt;p>Start LocalStack by using the &lt;code>docker-compose.yml&lt;/code> file from the repository. Ensure to set your Auth Token as an environment variable during this process.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>LOCALSTACK_AUTH_TOKEN=&amp;lt;YOUR_LOCALSTACK_AUTH_TOKEN&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker compose up&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="installing-the-extension">Installing the extension&lt;/h3>
&lt;p>To install the LocalStack Outages Extension, first set up your LocalStack Auth Token in your environment. Once the token is configured, use the command below to install the extension:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>localstack extensions install localstack-extension-outages&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Alternatively, you can enable automatic installation of the extension by setting the environment variable &lt;code>EXTENSION_AUTO_INSTALL=localstack-extension-outages&lt;/code> when you start the LocalStack container. This can be done by including it in your &lt;code>docker&lt;/code> command line interface (CLI) or in your &lt;code>docker-compose&lt;/code> configuration as an environment variable.&lt;/p>
&lt;p>Follow our &lt;a href="https://docs.localstack.cloud/user-guide/extensions/managing-extensions/">Managing Extensions documentation&lt;/a> for more information on how to install &amp;amp; manage extensions.&lt;/p>
&lt;h3 id="running-terraform">Running Terraform&lt;/h3>
&lt;p>To get started, initialize &amp;amp; apply the Terraform configuration using the &lt;code>tflocal&lt;/code> CLI to create the local resources. The Terraform configuration file operates independently of the application, meaning the application won&amp;rsquo;t be available during this phase. To deploy the entire stack, including the application, refer to the &lt;a href="https://github.com/localstack-samples/sample-terraform-ecs-apigateway">sample repository&lt;/a>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>tflocal init
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>tflocal plan
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>tflocal apply&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The following output would be retrieved:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>Apply complete! Resources: &lt;span style="color:#0000cf;font-weight:bold">57&lt;/span> added, &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> changed, &lt;span style="color:#0000cf;font-weight:bold">0&lt;/span> destroyed.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Outputs:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">api_id&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;3eed6d1d&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">api_invoke_url&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://3eed6d1d.execute-api.us-east-1.amazonaws.com&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">api_invoke_url_foodstore_foods&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://3eed6d1d.execute-api.us-east-1.amazonaws.com/foodstore/foods/{foodId}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">api_invoke_url_petstore_pets&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;https://3eed6d1d.execute-api.us-east-1.amazonaws.com/petstore/domestic/pets/{petId}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">api_test_page&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &amp;lt;sensitive&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">container_security_group&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;sg-db749514a062de41c&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">ecs_cluster_name&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;arn:aws:ecs:us-east-1:000000000000:cluster/ecs-cluster&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">private_dns_namespace&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;60bfac90&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">vpc_id&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#34;vpc-f9d6b124&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Next, you can update certain resources. This includes increasing the number of tasks in the &lt;code>task_definition&lt;/code> for the ECS service from 3 to 5 and upgrading the &lt;code>openapi&lt;/code> specification version used by API Gateway from 3.0.1 to 3.1.0.&lt;/p>
&lt;h3 id="simulating-outages">Simulating outages&lt;/h3>
&lt;p>After running the Terraform &lt;code>plan&lt;/code> command to preview these changes, you can simulate an outage affecting the ECS and API Gateway V2 services before applying the changes. To do this, execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location --request POST &amp;#39;http://outages.localhost.localstack.cloud:4566/outages&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data-raw &amp;#39;[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;ecs&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;us-east-1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;apigatewayv2&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;us-east-1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>In the LocalStack logs, you&amp;rsquo;ll notice that during the periods between successful calls, the controlled outages are marked by a &lt;code>ServiceUnavailableException&lt;/code> accompanied by a 503 HTTP status code. These exceptions specifically affect the targeted AWS APIs.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:31.801 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_9&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ec2.GetTransitGatewayRouteTableAssociations &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:31.824 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_2&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS apigatewayv2.GetVpcLink &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">503&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ServiceUnavailableException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:31.828 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_6&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS servicediscovery.ListTagsForResource &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:31.831 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_8&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ec2.DescribeRouteTables &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:31.834 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_7&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS servicediscovery.ListTagsForResource &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:31.836 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ec2.DescribePrefixLists &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:31.842 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ec2.DescribeSecurityGroups &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:31.848 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_6&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ec2.GetTransitGatewayRouteTablePropagations &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:31.876 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_9&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ec2.DescribeRouteTables &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:31.879 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_5&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ec2.DescribeRouteTables &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:32.205 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_8&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ecs.DescribeClusters &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">503&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ServiceUnavailableException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:32.280 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_3&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ecs.DescribeTaskDefinition &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">503&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ServiceUnavailableException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:32.443 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ecs.DescribeTaskDefinition &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">503&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ServiceUnavailableException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:32.584 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_6&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS apigatewayv2.GetVpcLink &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">503&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ServiceUnavailableException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:33.271 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_9&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ecs.DescribeClusters &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">503&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ServiceUnavailableException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:33.473 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_2&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ecs.DescribeTaskDefinition &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">503&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ServiceUnavailableException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T21:53:33.889 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_7&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS ecs.DescribeTaskDefinition &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">503&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ServiceUnavailableException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>During infrastructure provisioning, depending on the tool and provider used, attempts may be made to reapply changes to resources following a failure, or the action might simply fail.&lt;/p>
&lt;h3 id="simulating-shutdowns">Simulating shutdowns&lt;/h3>
&lt;p>To simulate the shutdown of an entire region, execute the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location --request POST &amp;#39;http://outages.localhost.localstack.cloud:4566/outages&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data-raw &amp;#39;[
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;*&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;us-east-1&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="other-operations">Other operations&lt;/h3>
&lt;p>To stop outages, submit an empty list in the configuration using the following &lt;code>POST&lt;/code> request:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location --request POST &amp;#39;http://outages.localhost.localstack.cloud:4566/outages&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data-raw &amp;#39;[]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To view the current configuration, use this &lt;code>GET&lt;/code> request:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location --request GET &amp;#39;http://outages.localhost.localstack.cloud:4566/outages&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To add a new service/region rule to the configuration, use a &lt;code>PATCH&lt;/code> request as shown below:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location --request PATCH &amp;#39;http://outages.localhost.localstack.cloud:4566/outages&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data-raw &amp;#39;[{&amp;#34;service&amp;#34;: &amp;#34;transcribe&amp;#34;, &amp;#34;region&amp;#34;: &amp;#34;us-west-1&amp;#34;}]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>To remove a service/region rule from the configuration, execute a &lt;code>DELETE&lt;/code> request as follows:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location --request DELETE &amp;#39;http://outages.localhost.localstack.cloud:4566/outages&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data-raw &amp;#39;[{&amp;#34;service&amp;#34;: &amp;#34;transcribe&amp;#34;, &amp;#34;region&amp;#34;: &amp;#34;us-west-1&amp;#34;}]&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="conclusion">Conclusion&lt;/h3>
&lt;p>By closely watching Terraform&amp;rsquo;s responses and the status of cloud resources, you&amp;rsquo;ll learn how Terraform manages these disruptions. It&amp;rsquo;s important to note how it attempts to retry operations, whether it rolls back changes or faces partial failures, and how it logs these incidents.&lt;/p>
&lt;p>This is crucial for understanding the resilience of your infrastructure provisioning against challenging conditions. It also aids in enhancing your IaC configurations, ensuring they are more robust and effective in handling faults and errors in real-life situations.&lt;/p></description></item><item><title>User-Guide: Route53 Failover with FIS</title><link>/user-guide/chaos-engineering/route53-failover/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/chaos-engineering/route53-failover/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>LocalStack allows you to integrate &amp;amp; test &lt;a href="https://docs.localstack.cloud/user-guide/aws/fis/">Fault Injection Simulator (FIS)&lt;/a> with &lt;a href="https://docs.localstack.cloud/user-guide/aws/route53/">Route53&lt;/a> to automatically divert users to a healthy secondary zone if the primary region fails, ensuring system availability and responsiveness. Route53&amp;rsquo;s health checks and traffic redirection enhance architecture resilience and ensure service continuity during regional outages, crucial for uninterrupted user experiences.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Route53 Failover with FIS is currently available as part of the &lt;strong>LocalStack Enterprise&lt;/strong> plan. If you&amp;rsquo;d like to try it out, please &lt;a href="https://www.localstack.cloud/demo">contact us&lt;/a> to request access.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This guide is designed for users new to the Route53 and FIS services. In this example, there&amp;rsquo;s an active-primary and passive-standby configuration. Route53 routes traffic to the primary region, which processes product-related requests through API Gateway and Lambda functions, with data stored in DynamoDB. If the primary region fails, Route53 redirects to the standby region, maintained in sync by a replication Lambda function.&lt;/p>
&lt;p>For this particular example, we&amp;rsquo;ll be using a &lt;a href="https://github.com/localstack-samples/samples-chaos-engineering/tree/main/route53-failover">sample application repository&lt;/a>. Clone the repository, and follow the instructions below to get started.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>The general prerequisites for this guide are:&lt;/p>
&lt;ul>
&lt;li>LocalStack Pro with a &lt;a href="https://docs.localstack.cloud/getting-started/auth-token/">LocalStack Auth Token&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/integrations/aws-cli/">AWS CLI&lt;/a> with the &lt;a href="https://docs.localstack.cloud/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal">&lt;code>awslocal&lt;/code> wrapper&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/get-docker/">Docker&lt;/a> and &lt;a href="https://docs.docker.com/compose/install/">Docker Compose&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.python.org/downloads/">Python-3&lt;/a>&lt;/li>
&lt;li>&lt;code>dig&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Start LocalStack by using the &lt;code>docker-compose.yml&lt;/code> file from the repository. Ensure to set your Auth Token as an environment variable during this process.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>LOCALSTACK_AUTH_TOKEN=&amp;lt;YOUR_LOCALSTACK_AUTH_TOKEN&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker compose up&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="application-architecture">Application Architecture&lt;/h3>
&lt;p>The following diagram shows the architecture that this application builds and deploys:&lt;/p>
&lt;figure>
&lt;img src="/user-guide/chaos-engineering/route53-failover/route53-failover-1.png" width="800"/>
&lt;/figure>
&lt;h3 id="creating-the-resources">Creating the resources&lt;/h3>
&lt;p>To begin, deploy the same services in both &lt;code>us-west-1&lt;/code> and &lt;code>us-east-1&lt;/code> regions. The resources specified in the &lt;code>init-resources.sh&lt;/code> file will be created when the LocalStack container starts, using Initialization Hooks and the &lt;code>awslocal&lt;/code> CLI tool.&lt;/p>
&lt;p>The objective is to have a backup system in case of a regional outage in the primary availability zone (&lt;code>us-west-1&lt;/code>). We&amp;rsquo;ll focus on this region to examine the existing resilience mechanisms.&lt;/p>
&lt;figure>
&lt;img src="/user-guide/chaos-engineering/route53-failover/route53-failover-2.png" width="800"/>
&lt;/figure>
&lt;ul>
&lt;li>The primary API Gateway includes a health check endpoint that returns a 200 HTTP status code, serving as a basic check for its availability.&lt;/li>
&lt;li>Data synchronization across regions can be achieved with AWS-native tools like DynamoDB Streams and AWS Lambda. Here, any changes to the primary table trigger a Lambda function, replicating these changes to a secondary table. This configuration is essential for high availability and disaster recovery.&lt;/li>
&lt;/ul>
&lt;h3 id="configuring-a-route53-hosted-zone">Configuring a Route53 hosted zone&lt;/h3>
&lt;p>Let&amp;rsquo;s begin by setting up a hosted zone in Route53 named &lt;code>hello-localstack.com&lt;/code> and retrieved the hosted zone ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>HOSTED_ZONE_NAME=hello-localstack.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>HOSTED_ZONE_ID=$(awslocal route53 create-hosted-zone --name $HOSTED_ZONE_NAME --caller-reference foo | jq -r .HostedZone.Id)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Then, define the health check ID for the API Gateway available in the &lt;code>us-west-1&lt;/code> region:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>HEALTH_CHECK_ID=$(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> awslocal route53 create-health-check \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --caller-reference foobar \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --health-check-config &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;FullyQualifiedDomainName&amp;#34;: &amp;#34;12345.execute-api.localhost.localstack.cloud&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Port&amp;#34;: 4566,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourcePath&amp;#34;: &amp;#34;/dev/healthcheck&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;HTTP&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RequestInterval&amp;#34;: 10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&amp;#39; | jq -r .HealthCheck.Id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This command creates a Route 53 health check for an HTTP endpoint (&lt;code>12345.execute-api.localhost.localstack.cloud:4566/dev/healthcheck&lt;/code>) with a 10-second request interval and captures the health check&amp;rsquo;s ID. The caller reference identifier in AWS resource creation or updates prevents accidental duplication if requests are repeated.&lt;/p>
&lt;p>To update DNS records in the specified Route53 hosted zone (&lt;code>$HOSTED_ZONE_ID&lt;/code>), add two CNAME records: &lt;code>12345.$HOSTED_ZONE_NAME&lt;/code> pointing to &lt;code>12345.execute-api.localhost.localstack.cloud&lt;/code>, and &lt;code>67890.$HOSTED_ZONE_NAME&lt;/code> pointing to &lt;code>67890.execute-api.localhost.localstack.cloud&lt;/code>. Set a TTL (Time to Live) of 60 seconds for these records.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal route53 change-resource-record-sets \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --hosted-zone $HOSTED_ZONE_ID \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --change-batch &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Changes&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &amp;#34;CREATE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecordSet&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;12345.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;CNAME&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TTL&amp;#34;: 60,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecords&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&amp;#34;Value&amp;#34;: &amp;#34;12345.execute-api.localhost.localstack.cloud&amp;#34;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &amp;#34;CREATE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecordSet&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;67890.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;CNAME&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TTL&amp;#34;: 60,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecords&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&amp;#34;Value&amp;#34;: &amp;#34;67890.execute-api.localhost.localstack.cloud&amp;#34;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Finally, we&amp;rsquo;ll update the DNS records in the Route53 hosted zone identified by &lt;strong>&lt;code>$HOSTED_ZONE_ID&lt;/code>&lt;/strong>. We&amp;rsquo;re adding two CNAME records for the subdomain &lt;code>test.$HOSTED_ZONE_NAME&lt;/code>. The first record points to &lt;code>12345.$HOSTED_ZONE_NAME&lt;/code> and is linked with the earlier created health check, designated as the primary failover target. The second record points to &lt;code>67890.$HOSTED_ZONE_NAME&lt;/code> and is set as the secondary failover target.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal route53 change-resource-record-sets \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --hosted-zone-id $HOSTED_ZONE_ID \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --change-batch &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Changes&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &amp;#34;CREATE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecordSet&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;test.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;CNAME&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SetIdentifier&amp;#34;: &amp;#34;12345&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AliasTarget&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;HostedZoneId&amp;#34;: &amp;#34;&amp;#39;$HOSTED_ZONE_ID&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DNSName&amp;#34;: &amp;#34;12345.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EvaluateTargetHealth&amp;#34;: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;HealthCheckId&amp;#34;: &amp;#34;&amp;#39;$HEALTH_CHECK_ID&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Failover&amp;#34;: &amp;#34;PRIMARY&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &amp;#34;CREATE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecordSet&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;test.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;CNAME&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SetIdentifier&amp;#34;: &amp;#34;67890&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AliasTarget&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;HostedZoneId&amp;#34;: &amp;#34;&amp;#39;$HOSTED_ZONE_ID&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DNSName&amp;#34;: &amp;#34;67890.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EvaluateTargetHealth&amp;#34;: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Failover&amp;#34;: &amp;#34;SECONDARY&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This setup represents the basic failover configuration where traffic is redirected to different endpoints based on their health check status. To confirm that the CNAME record for &lt;code>test.hello-localstack.com&lt;/code> points to &lt;code>12345.execute-api.localhost.localstack.cloud&lt;/code>, you can use the following &lt;code>dig&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>dig @localhost test.hello-localstack.com CNAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; QUESTION SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;test.hello-localstack.com. IN CNAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; ANSWER SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test.hello-localstack.com. 300 IN CNAME 12345.execute-api.localhost.localstack.cloud.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="creating-a-controlled-outage">Creating a controlled outage&lt;/h3>
&lt;p>Our setup is now complete and ready for testing. To mimic a regional outage in the &lt;code>us-west-1&lt;/code> region, we&amp;rsquo;ll conduct an experiment that halts all service invocations in this region, including the health check function. Once the primary region becomes non-functional, Route 53&amp;rsquo;s health checks will fail. This failure will activate the failover policy, redirecting traffic to the corresponding services in the secondary region, thus maintaining service continuity.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat region-outage-experiment.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;template for internal server error for few regions i.e. us-west-1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;regionUnavailable-us-west-1&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;us-west-1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;errorCode&amp;#34;: &amp;#34;503&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This Fault Injection Simulator (FIS) experiment template is set up to mimic a &lt;code>Service Unavailable&lt;/code> (503 error) in the &lt;code>us-west-1&lt;/code> region. To create the experiment template, use the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis create-experiment-template --cli-input-json file://region-outage-experiment.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the template is created, start the experiment using its ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis start-experiment --experiment-template-id &amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experiment&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;651b5196-b244-4a8b-8ab6-d7b9e13998a0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experimentTemplateId&amp;#34;: &amp;#34;d3a1a31b-c52e-49ec-8387-8f5eb75a11df&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;state&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;running&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;regionUnavailable-us-east-1&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;us-west-1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;errorCode&amp;#34;: &amp;#34;503&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;creationTime&amp;#34;: 1699902569.439826,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;startTime&amp;#34;: 1699902569.439826
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace &lt;code>&amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;&lt;/code> with the ID of the experiment template created in the previous step. When the experiment is active, Route 53&amp;rsquo;s health checks will detect the failure and redirect traffic to the standby region as per the failover setup. Confirm this redirection with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>dig @localhost test.hello-localstack.com CNAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; QUESTION SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;test.hello-localstack.com. IN CNAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; ANSWER SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test.hello-localstack.com. 300 IN CNAME 67890.execute-api.localhost.localstack.cloud.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This indicates that the hosted zone name now points to the secondary API Gateway, and &lt;code>us-east-1&lt;/code> services are in use.&lt;/p>
&lt;p>A Python script can simulate backend handling of this switch:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">dns.resolver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Set the Route53 DNS resolver to use&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">dns_resolver_ip&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;127.0.0.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Domain to resolve&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">domain_to_resolve&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;test.hello-localstack.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Resolve the CNAME record using the specified DNS server&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">resolver&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dns&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">resolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Resolver&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configure&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">False&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">resolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">nameservers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">dns_resolver_ip&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">try&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">cname_record&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">query&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">domain_to_resolve&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">rdtype&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">dns&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">rdatatype&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">CNAME&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">resolved_domain&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">str&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cname_record&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">target&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># Construct the full URL with the resolved domain&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">resolved_url&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;http://&lt;/span>&lt;span style="color:#4e9a06">{&lt;/span>&lt;span style="color:#000">resolved_domain&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">:4566/dev/productApi?id=prod-1088&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># Make an HTTP request to the resolved URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">response&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">requests&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolved_url&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># Print the response&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">text&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">except&lt;/span> &lt;span style="color:#000">dns&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">resolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NXDOMAIN&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;CNAME record not found for &lt;/span>&lt;span style="color:#4e9a06">{&lt;/span>&lt;span style="color:#000">domain_to_resolve&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">except&lt;/span> &lt;span style="color:#c00;font-weight:bold">Exception&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">e&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Error: &lt;/span>&lt;span style="color:#4e9a06">{&lt;/span>&lt;span style="color:#000">e&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Running the script will resolve the CNAME record for &amp;rsquo;test.hello-localstack.com&amp;rsquo;, make an HTTP request to the resolved URL, and print the response, which fetches a Product object from DynamoDB in the &lt;code>us-east-1&lt;/code> region.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>python3 dns-resolver.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{&amp;#34;price&amp;#34;:&amp;#34;29.99&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;Super Widget&amp;#34;,&amp;#34;description&amp;#34;:&amp;#34;A versatile widget that can be used for a variety of purposes.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> Durable, reliable, and affordable.&amp;#34;,&amp;#34;id&amp;#34;:&amp;#34;prod-1088&amp;#34;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The LocalStack logs will confirm which API Gateway was called based on the resolved domain.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-11-07T11:59:28.292 DEBUG --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_9&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> l.s.l.i.version_manager : &amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>resource: /productApi,path: /productApi,httpMethod: GET,headers: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#000">Host&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>67890.execute-api.localhost.localstack.cloud:4566,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>python-requests/2.31.0, accept-encoding&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gzip, deflate, &lt;span style="color:#000">accept&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>*/*, &lt;span style="color:#000">Connection&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>keep-alive, x-localstack-tgt-api&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>apigateway ....
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>User-Guide: Subsequent Configurations</title><link>/user-guide/chaos-engineering/subsequent-configs/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/chaos-engineering/subsequent-configs/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>LocalStack allows users to inject intentional errors, particularly in Kinesis and DynamoDB. You can introduce controlled chaos into your development environment enhance to enhance service resilience. By configuring environment variables, you can simulate disruptions. This simple setup helps improve the response mechanisms of these key AWS services, ensuring robust architecture under challenging conditions with minimal initial configuration.&lt;/p>
&lt;p>This guide demonstrates the &lt;code>DYNAMODB_ERROR_PROBABILITY&lt;/code> and &lt;code>KINESIS_ERROR_PROBABILITY&lt;/code> configuration flags. The guide assumes basic knowledge of the AWS CLI and our &lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script.&lt;/p>
&lt;h2 id="kinesis-error-probability">Kinesis Error Probability&lt;/h2>
&lt;p>The &lt;code>KINESIS_ERROR_PROBABILITY&lt;/code> setting allows users to introduce &lt;code>ProvisionedThroughputExceededException&lt;/code> errors randomly into Kinesis API responses. The value for this setting ranges from 0.0 (default) to 1.0.&lt;/p>
&lt;p>To demonstrate, set up LocalStack with &lt;code>KINESIS_ERROR_PROBABILITY&lt;/code> at 0.5, indicating a 50% chance of receiving a &lt;code>ProvisionedThroughputExceededException&lt;/code> from Kinesis.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>KINESIS_ERROR_PROBABILITY=0.5 localstack start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Next, create a Kinesis stream using the AWS CLI with the &lt;a href="https://docs.aws.amazon.com/kinesis/latest/APIReference/API_CreateStream.html">&lt;code>CreateStream&lt;/code>&lt;/a> API. For example, to create a stream named &amp;ldquo;ProductsStream&amp;rdquo; with one shard, use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis create-stream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stream-name ProductsStream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --shard-count 1&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Assuming you have a product JSON converted into a Base64-encoded string, you can add this record to the stream like so:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal kinesis put-record \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --stream-name ProductsStream \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --partition-key &amp;#34;12345&amp;#34; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> --data &amp;#34;eyJwcm9kdWN0SWQiOiIxMjMiLCJwcm9kdWN0TmFtZSI6IlN1cGVyV2lkZ2V0IiwicHJvZHVjdFByaWNlIjoiMTk5Ljk5In0=&amp;#34;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After performing similar operations repeatedly, you can check the logs to verify that the configuration is working as intended. Remember, records will only be added during successful calls.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-11-09T23:33:49.867 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.CreateStream &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:01.003 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:05.114 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:08.178 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:08.346 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:09.726 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:10.499 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:34:11.982 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS kinesis.PutRecord &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="dynamodb-error-probability">DynamoDB Error Probability&lt;/h2>
&lt;p>The &lt;code>DYNAMODB_ERROR_PROBABILITY&lt;/code> setting, similar to the Kinesis configuration, allows for random &lt;code>ProvisionedThroughputExceededException&lt;/code> responses from the DynamoDB service. It also accepts a decimal value between 0.0 (default) and 1.0.&lt;/p>
&lt;p>To start LocalStack with a high error probability for DynamoDB, set &lt;code>DYNAMODB_ERROR_PROBABILITY&lt;/code> to 0.8:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>DYNAMODB_ERROR_PROBABILITY=0.8 localstack start&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Next, create a DynamoDB table using the AWS CLI with the &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_CreateTable.html">&lt;code>CreateTable&lt;/code>&lt;/a> API. For example, to create a table named &amp;ldquo;Products&amp;rdquo; with a primary key of &amp;ldquo;ProductId&amp;rdquo;, use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ awslocal dynamodb create-table &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --table-name Products &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --attribute-definitions &lt;span style="color:#000">AttributeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ProductId,AttributeType&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>S &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --key-schema &lt;span style="color:#000">AttributeName&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>ProductId,KeyType&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>HASH &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --provisioned-throughput &lt;span style="color:#000">ReadCapacityUnits&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>1,WriteCapacityUnits&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">1&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>You can add items to the table using the &lt;a href="https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html">&lt;code>PutItem&lt;/code>&lt;/a> API. For example, to add a product with an ID of &amp;ldquo;123&amp;rdquo;, a name of &amp;ldquo;SuperWidget&amp;rdquo;, and a price of &amp;ldquo;199.99&amp;rdquo;, use:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>awslocal dynamodb put-item &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --table-name Products &lt;span style="color:#4e9a06">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&lt;/span> --item &lt;span style="color:#4e9a06">&amp;#39;{
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;ProductId&amp;#34;: {&amp;#34;S&amp;#34;: &amp;#34;123&amp;#34;},
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;ProductName&amp;#34;: {&amp;#34;S&amp;#34;: &amp;#34;SuperWidget&amp;#34;},
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> &amp;#34;ProductPrice&amp;#34;: {&amp;#34;N&amp;#34;: &amp;#34;199.99&amp;#34;}
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06"> }&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>The logs will now show a higher frequency of &lt;code>ProvisionedThroughputExceededException&lt;/code> errors, followed by successful attempts due to the &lt;code>boto3&lt;/code> retry mechanism:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:12.836 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.CreateTable &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:27.889 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:27.968 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:28.089 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:28.410 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:35.845 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:35.911 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:36.028 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:36.249 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:36.673 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:37.484 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:39.101 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_0&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:42.326 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-09T23:59:48.737 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">400&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>ProvisionedThroughputExceededException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-10T00:00:01.606 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_1&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">200&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Despite these errors, the retry mechanism ensures that all items are eventually added to the DynamoDB table.&lt;/p></description></item><item><title>User-Guide: SSO for Azure AD</title><link>/user-guide/web-application/single-sign-on/azure-ad/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/single-sign-on/azure-ad/</guid><description>
&lt;p>To configure SSO with an Azure AD Enterprise application, we provide a simple step-by-step solution below:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>Navigate to &amp;ldquo;Set up single sign on&amp;rdquo; in your Azure AD Enterprise application.&lt;/p>
&lt;img src="azure-step-1.png" alt="Azure AD First Configuration Step">
&lt;/li>
&lt;li>
&lt;p>In the Basic SAML Configuration, ensure that the settings match the following details&lt;/p>
&lt;img src="azure-step-2.png" alt="Azure AD Second Configuration Step">
&lt;/li>
&lt;/ol>
&lt;p>Take the correct values for Identifier (Entity ID) and Reply URL from the Identity Provider configuration page.&lt;/p>
&lt;ol start="3">
&lt;li>
&lt;p>In the Attributes &amp;amp; Claims section, add a group claim with the following configuration and save it.&lt;/p>
&lt;img src="azure-step-3.png" alt="Azure AD Third Configuration Step">
&lt;/li>
&lt;li>
&lt;p>In the SAML Certificates section, copy the App Federation Metadata Url&lt;/p>
&lt;img src="azure-step-4.png" alt="Azure AD Fourth Configuration Step">
&lt;/li>
&lt;li>
&lt;p>Navigate to our web application, or follow this &lt;a href="https://app.localstack.cloud/workspace/sso">link&lt;/a>, and:&lt;/p>
&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>Create a new Identity provider&lt;/li>
&lt;li>Enter a name for you Identity provider, and choose SAML as the provider type.&lt;/li>
&lt;li>Select URL for the Metadata file and paste the link that you copied previously in step 4.&lt;/li>
&lt;li>For the attribute mapping, provide the following value for the Email attribute: &lt;code>http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name&lt;/code> - (This should match the Claim name of user.userprincipalname in your Attributes &amp;amp; Claims)&lt;/li>
&lt;li>Leave First name attribute and Last name attribute blank.&lt;/li>
&lt;/ul>
&lt;ol start="6">
&lt;li>Let your team members sign up to your LocalStack Organization via the Sign Up Portal Link.&lt;/li>
&lt;/ol></description></item><item><title>User-Guide: Single-Sign On</title><link>/user-guide/web-application/single-sign-on/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/user-guide/web-application/single-sign-on/</guid><description>
&lt;p>Custom Single-Sign On (SSO) Identity providers, can be enabled to facilitate the process of quickly onboarding team members from your organization.&lt;/p>
&lt;p>In order to configure SSO access, first sign in to the LocalStack Web application under &lt;a href="https://app.localstack.cloud/">app.localstack.cloud&lt;/a>.
In your profile settings, navigate to the Single Sign-on tab which will list existing SSO Identity Providers (if any exist).&lt;/p>
&lt;img src="localstack-setting-sso.png" width="800px" alt="Adding SSO Identity providers in LocalStack Settings">
&lt;p>Next, click the button to create a new identity provider (IdP), where you can choose between the two leading industry standards:&lt;/p>
&lt;ul>
&lt;li>OpenID Connect (OIDC): &lt;a href="https://openid.net/connect/">openid.net/connect&lt;/a>&lt;/li>
&lt;li>SAML: &lt;a href="http://saml.xml.org/saml-specifications">saml.xml.org/saml-specifications&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="configuring-sso-using-openid-connect-oidc">Configuring SSO using OpenID Connect (OIDC)&lt;/h2>
&lt;p>In the form illustrated below, you can then enter the main information for the new IdP (using OpenID Connect):&lt;/p>
&lt;ul>
&lt;li>Name of your identity provider&lt;/li>
&lt;li>Client ID, Client Secret, Attributes request method, OIDC issues, Authorize scopes, and more.
&lt;ul>
&lt;li>You should be able to find these attributes in your OIDC IdP configuration.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;img src="oidc-sso.png" width="600px" alt="Configuring SSO using OpenID Connect (OIDC)">
&lt;h2 id="configuring-sso-using-saml">Configuring SSO using SAML&lt;/h2>
&lt;p>When configuring SSO using SAML, you can configure the settings of the Identity Provider via a standard SAML metadata file (see illustration below).
The SAML metadata file can be specified either via URL or via a file upload.&lt;/p>
&lt;p>Select &lt;strong>Enable IdP sign out flow&lt;/strong> if you want your users to be logged out from our app and your SAML IdP when they log out from your our Web Application.&lt;/p>
&lt;img src="saml-sso.png" width="600px" alt="Configuring SSO using SAML">
&lt;h2 id="attribute-mapping">Attribute mapping&lt;/h2>
&lt;p>These attributes can be defined to automatically map attributes of user entities in your internal IdP to user attributes in the LocalStack platform.&lt;/p>
&lt;p>The following user attribute mappings can currently be configured:&lt;/p>
&lt;ul>
&lt;li>Email&lt;/li>
&lt;li>First name&lt;/li>
&lt;li>Last name&lt;/li>
&lt;/ul>
&lt;p>The Email should be configured to ensure correct functionality.&lt;/p>
&lt;img src="attribute-mapping.png" width="600px" alt="Attribute Mapping">
&lt;h2 id="callback-url-sign-up-portal-url-and-identifier-entity-id">Callback URL, Sign Up Portal URL and Identifier (Entity Id)&lt;/h2>
&lt;p>After configuring the base details for your Identity Provider (IdP), the following additional information can be copied from the UI:&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Callback URL&lt;/strong>: The Callback URL that you may need to configure in the settings of your IdP.&lt;/li>
&lt;li>&lt;strong>Identifier (Entity Id)&lt;/strong>: The Identifier (Entity Id) that you may need to configure in the settings of your IdP.&lt;/li>
&lt;li>&lt;strong>Sign Up Portal URL&lt;/strong>: This is the URL that can be shared with your users to start the SSO signup flow for the LocalStack Web Application. The format of this endpoint is &lt;code>https://app.localstack.cloud/auth/sso/&amp;lt;organizationId&amp;gt;/&amp;lt;ssoName&amp;gt;&lt;/code>&lt;/li>
&lt;/ul>
&lt;img src="additional-information-page.png" width="600px" alt="Callback URL, Sign Up Portal URL, and Identifier (Entity Id)">
&lt;h2 id="user-roles-and-permissions">User Roles and Permissions&lt;/h2>
&lt;p>For each new member that joins your org, you can specify user roles and permissions that should be assigned to them.&lt;/p>
&lt;ul>
&lt;li>&lt;strong>Default User Role&lt;/strong>: The Role that should be assigned to users of your organization signing up via SSO. In most cases, this should be a Member.&lt;/li>
&lt;li>&lt;strong>Default User Permissions&lt;/strong>: Use this to define which permissions should be assigned to users of your organization signing up via SSO.
&lt;ul>
&lt;li>Tip: In order to enable self-serve licences (i.e., allowing your users to allocate themselves their own license), make sure to select the &lt;strong>Allow member to issue a license for themselves (or a legacy API key)&lt;/strong> permission.&lt;/li>
&lt;/ul>
&lt;/li>
&lt;/ul>
&lt;img src="roles-permissions.png" width="600px" alt="User Roles and Permissions"></description></item></channel></rss>