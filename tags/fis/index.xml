<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs â€“ FIS</title><link>/tags/fis/</link><description>Recent content in FIS on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/tags/fis/index.xml" rel="self" type="application/rss+xml"/><item><title>Tutorials: Chaos Engineering: Running Experiments with Fault Injection Service</title><link>/tutorials/fault-injection-service-experiments/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/tutorials/fault-injection-service-experiments/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>Fault Injection Simulator (FIS) is a service designed for conducting controlled chaos engineering tests on AWS infrastructure. Its purpose is to uncover vulnerabilities and improve system robustness. FIS offers a means to deliberately introduce failures and observe their impacts, helping developers to better equip their systems against actual outages. To read about the FIS service, refer to the dedicated &lt;a href="https://docs.localstack.cloud/user-guide/aws/fis/">FIS documentation&lt;/a>.&lt;/p>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This tutorial is designed for users new to the Fault Injection Simulator and assumes basic knowledge of the AWS CLI and our
&lt;a href="https://github.com/localstack/awscli-local">&lt;code>awslocal&lt;/code>&lt;/a> wrapper script. In this example, we will use the FIS to create controlled outages in a DynamoDB database. The aim is to test the software&amp;rsquo;s behavior and error handling capabilities.&lt;/p>
&lt;p>For this particular example, we&amp;rsquo;ll be using a &lt;a href="https://github.com/localstack-samples/samples-chaos-engineering/tree/main/FIS-experiments">sample application repository&lt;/a>. Clone the repository, and follow the instructions below to get started.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>The general prerequisites for this guide are:&lt;/p>
&lt;ul>
&lt;li>LocalStack Pro with &lt;a href="/getting-started/auth-token/">LocalStack Auth Token&lt;/a>&lt;/li>
&lt;li>&lt;a href="/user-guide/integrations/aws-cli/">AWS CLI&lt;/a> with the &lt;a href="/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal">&lt;code>awslocal&lt;/code> wrapper&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/get-docker/">Docker&lt;/a> and &lt;a href="https://docs.docker.com/compose/install/">Docker Compose&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Start LocalStack by using the &lt;code>docker-compose.yml&lt;/code> file from the repository. Ensure to set your Auth Token as an environment variable during this process. The cloud resources will be automatically created upon the LocalStack start.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>LOCALSTACK_AUTH_TOKEN=&amp;lt;YOUR_LOCALSTACK_AUTH_TOKEN&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker compose up&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="application-architecture">Application Architecture&lt;/h3>
&lt;p>The following diagram shows the architecture that this application builds and deploys:&lt;/p>
&lt;figure>
&lt;img src="/tutorials/fault-injection-service-experiments/fis-experiment-1.png" width="800"/>
&lt;/figure>
&lt;h3 id="creating-an-experiment-template">Creating an experiment template&lt;/h3>
&lt;p>Before starting any FIS experiments, it&amp;rsquo;s important to verify that our application is functioning correctly. Start by creating an entity and saving it. To do this, use &lt;code>cURL&lt;/code> to call the API Gateway endpoint for the POST method:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location &amp;#39;http://12345.execute-api.localhost.localstack.cloud:4566/dev/productApi&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--data &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;prod-2004&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;Ultimate Gadget&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;price&amp;#34;: &amp;#34;49.99&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;The Ultimate Gadget is the perfect tool for tech enthusiasts looking for the next level in gadgetry. Compact, powerful, and loaded with features.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Product added/updated successfully.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>You can use the file named &lt;code>experiment-ddb.json&lt;/code> that contains the FIS experiment configuration. This file will be used in the upcoming call to the &lt;a href="https://docs.aws.amazon.com/fis/latest/APIReference/API_CreateExperimentTemplate.html">&lt;code>CreateExperimentTemplate&lt;/code>&lt;/a> API within the FIS resource.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>$ cat experiment-ddb.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;Test action 1&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actionId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;localstack:generic:api-error&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;parameters&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;service&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;dynamodb&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;api&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;all&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;percentage&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;100&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;exception&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;DynamoDbException&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;errorCode&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;500&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;description&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;Template for interfering with the DynamoDB service&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;stopConditions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;source&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;roleArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This template is designed to target all APIs of the DynamoDB resource. While it&amp;rsquo;s possible to specify particular operations like &lt;code>PutItem&lt;/code> or &lt;code>GetItem&lt;/code>, the objective here is to entirely disconnect the database.&lt;/p>
&lt;p>As a result, this configuration will cause all API calls to fail with a 100% failure rate, each resulting in an HTTP 500 status code and a &lt;code>DynamoDbException&lt;/code>.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis create-experiment-template --cli-input-json file://experiment-ddb.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experimentTemplate&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;895591e8-11e6-44c4-adc3-86592010562b&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;Template for interfering with the DynamoDB service&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Test action 1&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;dynamodb&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;api&amp;#34;: &amp;#34;all&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;percentage&amp;#34;: &amp;#34;100&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;exception&amp;#34;: &amp;#34;DynamoDbException&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;errorCode&amp;#34;: &amp;#34;500&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;source&amp;#34;: &amp;#34;none&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;creationTime&amp;#34;: 1699308754.415716,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;lastUpdateTime&amp;#34;: 1699308754.415716,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Take note of the &lt;code>id&lt;/code> field in the response. This is the ID of the experiment template that will be used in the next step.&lt;/p>
&lt;h3 id="starting-the-experiment">Starting the experiment&lt;/h3>
&lt;p>Following the creation of the experiment template, you can create a new experiment using the template&amp;rsquo;s ID.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis start-experiment --experiment-template-id &amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experiment&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;1b1238fd-316d-4956-93e7-5ada677a6f69&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experimentTemplateId&amp;#34;: &amp;#34;895591e8-11e6-44c4-adc3-86592010562b&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;state&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;running&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Test action 1&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;dynamodb&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;api&amp;#34;: &amp;#34;all&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;percentage&amp;#34;: &amp;#34;100&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;exception&amp;#34;: &amp;#34;DynamoDbException&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;errorCode&amp;#34;: &amp;#34;500&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;source&amp;#34;: &amp;#34;none&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;creationTime&amp;#34;: 1699308823.74327,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;startTime&amp;#34;: 1699308823.74327
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace the &lt;code>&amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;&lt;/code> placeholder with the ID of the experiment template that was created in the previous step.&lt;/p>
&lt;h3 id="simulating-an-outage">Simulating an outage&lt;/h3>
&lt;p>Once the experiment starts, the database becomes inaccessible. This means users cannot retrieve or add new products, resulting in the API Gateway returning an Internal Server Error. Downtime and data loss are critical issues to avoid in enterprise applications.&lt;/p>
&lt;p>Fortunately, encountering this issue early in the development phase allows developers to implement effective error handling and develop mechanisms to prevent data loss during a database outage.&lt;/p>
&lt;p>It&amp;rsquo;s important to note that this approach is not limited to DynamoDB; outages can be simulated for any storage resource.&lt;/p>
&lt;h3 id="setting-up-a-solution">Setting up a solution&lt;/h3>
&lt;figure>
&lt;img src="/tutorials/fault-injection-service-experiments/fis-experiment-2.png" width="800"/>
&lt;/figure>
&lt;p>A possible solution involves setting up an SNS topic, an SQS queue, and a Lambda function. The Lambda function will be responsible for retrieving queued items and attempting to re-execute the &lt;code>PutItem&lt;/code> operation on the database. If DynamoDB remains unavailable, the item will be placed back in the queue for a later retry.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location &amp;#39;http://12345.execute-api.localhost.localstack.cloud:4566/dev/productApi&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--data &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;prod-1003&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;Super Widget&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;price&amp;#34;: &amp;#34;29.99&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;A versatile widget that can be used for a variety of purposes. Durable, reliable, and affordable.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>A DynamoDB error occurred. Message sent to queue.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>If we review the logs, it will show that the &lt;code>DynamoDbException&lt;/code> has been managed effectively.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-11-06T22:21:40.789 DEBUG --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_2&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> l.services.fis.handler : FIS handler called with configs: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;dynamodb&amp;#39;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>None: &lt;span style="color:#ce5c00;font-weight:bold">[(&lt;/span>100, &lt;span style="color:#4e9a06">&amp;#39;DynamoDbException&amp;#39;&lt;/span>, &lt;span style="color:#4e9a06">&amp;#39;500&amp;#39;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)]}}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-06T22:21:40.789 INFO --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_2&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> localstack.request.aws : AWS dynamodb.PutItem &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&amp;gt; &lt;span style="color:#0000cf;font-weight:bold">500&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>DynamoDbException&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>2023-11-06T22:21:40.834 DEBUG --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_4&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> l.services.sns.publisher : Topic &lt;span style="color:#4e9a06">&amp;#39;arn:aws:sns:us-east-1:000000000000:ProductEventsTopic&amp;#39;&lt;/span> publishing &lt;span style="color:#4e9a06">&amp;#39;5520d37a-fc21-4a73-b1bf-f9b9afce5908&amp;#39;&lt;/span> to subscribed
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#4e9a06">&amp;#39;arn:aws:sqs:us-east-1:000000000000:ProductEventsQueue&amp;#39;&lt;/span> with protocol &lt;span style="color:#4e9a06">&amp;#39;sqs&amp;#39;&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">(&lt;/span>subscription &lt;span style="color:#4e9a06">&amp;#39;arn:aws:sns:us-east-1:000000000000:ProductEventsTopic:0a4abf8c-744a-404a-9ff9-f132e25d1b30&amp;#39;&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>This element will remain in the queue until the outage is resolved.&lt;/p>
&lt;h3 id="stopping-the-experiment">Stopping the experiment&lt;/h3>
&lt;p>To stop the experiment, use the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis stop-experiment --id &amp;lt;EXPERIMENT_ID&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experiment&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;1b1238fd-316d-4956-93e7-5ada677a6f69&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experimentTemplateId&amp;#34;: &amp;#34;895591e8-11e6-44c4-adc3-86592010562b&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;state&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;stopped&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Test action 1&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;service&amp;#34;: &amp;#34;dynamodb&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;api&amp;#34;: &amp;#34;all&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;percentage&amp;#34;: &amp;#34;100&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;exception&amp;#34;: &amp;#34;DynamoDbException&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;errorCode&amp;#34;: &amp;#34;500&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;startTime&amp;#34;: 1699308823.750742,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endTime&amp;#34;: 1699309736.259625
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;source&amp;#34;: &amp;#34;none&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;creationTime&amp;#34;: 1699308823.74327,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;startTime&amp;#34;: 1699308823.74327,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;endTime&amp;#34;: 1699309736.259646
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace the &lt;code>&amp;lt;EXPERIMENT_ID&amp;gt;&lt;/code> placeholder with the ID of the experiment that was created in the previous step.&lt;/p>
&lt;p>The experiment has been terminated, allowing the Product that initially failed to reach the database to finally be stored successfully. This can be confirmed by scanning the database.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal dynamodb scan --table-name Products
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Items&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;Super Widget&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;A versatile widget that can be used for a variety of purposes. Durable, reliable, and affordable.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;prod-1003&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;price&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;N&amp;#34;: &amp;#34;29.99&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;Ultimate Gadget&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;The Ultimate Gadget is the perfect tool for tech enthusiasts looking for the next level in gadgetry. Compact, powerful, and loaded with features.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;S&amp;#34;: &amp;#34;prod-2004&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;price&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;N&amp;#34;: &amp;#34;49.99&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Count&amp;#34;: 2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ScannedCount&amp;#34;: 2,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ConsumedCapacity&amp;#34;: null
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="configuring-the-latency">Configuring the latency&lt;/h3>
&lt;p>The LocalStack FIS service can also introduce latency using the following experiment template:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;description&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;template for testing delays in API calls&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;latency&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;actionId&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;localstack:generic:api-error&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;parameters&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;latency&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;4&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;stopConditions&amp;#34;&lt;/span>: &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;source&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;none&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#4e9a06">&amp;#34;roleArn&amp;#34;&lt;/span>: &lt;span style="color:#4e9a06">&amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#ce5c00;font-weight:bold">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Save this template as &lt;code>latency-experiment.json&lt;/code> and use it to create an experiment definition through the FIS service:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis create-experiment-template --cli-input-json file://latency-experiment.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experimentTemplate&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;966f5632-4e2c-4567-b99c-436c333e523f&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;template for testing delays in API calls&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;latency&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;latency&amp;#34;: &amp;#34;4&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;source&amp;#34;: &amp;#34;none&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;creationTime&amp;#34;: 1699619228.208613,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;lastUpdateTime&amp;#34;: 1699619228.208613,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis start-experiment --experiment-template-id &amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace the &lt;code>&amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;&lt;/code> placeholder with the ID of the experiment template that was created in the previous step.&lt;/p>
&lt;p>While the experiment is active, you can use the same sample stack to observe and understand the effects of a 4-second delay on each service call.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>curl --location &amp;#39;http://12345.execute-api.localhost.localstack.cloud:4566/dev/productApi&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--header &amp;#39;Content-Type: application/json&amp;#39; \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--data &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;prod-1088&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;name&amp;#34;: &amp;#34;Super Widget&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;price&amp;#34;: &amp;#34;29.99&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;A versatile widget that can be used for a variety of purposes. Durable, reliable, and affordable.&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&amp;#39;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>An error occurred (InternalError) when calling the GetResources operation (reached max retries: 4): Failing as per Fault Injection Simulator configuration
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Tutorials: Chaos Engineering: Route53 Failover with FIS</title><link>/tutorials/route53-failover-with-fis/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/tutorials/route53-failover-with-fis/</guid><description>
&lt;h2 id="introduction">Introduction&lt;/h2>
&lt;p>LocalStack allows you to integrate &amp;amp; test &lt;a href="https://docs.localstack.cloud/user-guide/aws/fis/">Fault Injection Simulator (FIS)&lt;/a> with &lt;a href="https://docs.localstack.cloud/user-guide/aws/route53/">Route53&lt;/a> to automatically divert users to
a healthy secondary zone if the primary region fails, ensuring system availability and responsiveness. Route53&amp;rsquo;s health checks and
traffic redirection enhance architecture resilience and ensure service continuity during regional outages, crucial for uninterrupted
user experiences.&lt;/p>
&lt;div class="alert alert-primary" role="alert">
&lt;h4 class="alert-heading">Note&lt;/h4>
Route53 Failover with FIS is currently available as part of the &lt;strong>LocalStack Enterprise&lt;/strong> plan. If you&amp;rsquo;d like to try it out,
please &lt;a href="https://www.localstack.cloud/demo">contact us&lt;/a> to request access.
&lt;/div>
&lt;h2 id="getting-started">Getting started&lt;/h2>
&lt;p>This tutorial is designed for users new to the Route53 and FIS services. In this example, there&amp;rsquo;s an active-primary and
passive-standby configuration. Route53 routes traffic to the primary region, which processes product-related requests through
API Gateway and Lambda functions, with data stored in DynamoDB. If the primary region fails, Route53 redirects to the standby
region, maintained in sync by a replication Lambda function.&lt;/p>
&lt;p>For this particular example, we&amp;rsquo;ll be using a &lt;a href="https://github.com/localstack-samples/samples-chaos-engineering/tree/main/route53-failover">sample application repository&lt;/a>. Clone the repository, and follow the
instructions below to get started.&lt;/p>
&lt;h3 id="prerequisites">Prerequisites&lt;/h3>
&lt;p>The general prerequisites for this guide are:&lt;/p>
&lt;ul>
&lt;li>LocalStack Pro with &lt;a href="/getting-started/auth-token/">LocalStack Auth Token&lt;/a>&lt;/li>
&lt;li>&lt;a href="/user-guide/integrations/aws-cli/">AWS CLI&lt;/a> with the &lt;a href="/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal">&lt;code>awslocal&lt;/code> wrapper&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.docker.com/get-docker/">Docker&lt;/a> and &lt;a href="https://docs.docker.com/compose/install/">Docker Compose&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://www.python.org/downloads/">Python-3&lt;/a>&lt;/li>
&lt;li>&lt;code>dig&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Start LocalStack by using the &lt;code>docker-compose.yml&lt;/code> file from the repository. Ensure to set your Auth Token as an environment variable
during this process.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>LOCALSTACK_AUTH_TOKEN=&amp;lt;YOUR_LOCALSTACK_AUTH_TOKEN&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>docker compose up&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="application-architecture">Application Architecture&lt;/h3>
&lt;p>The following diagram shows the architecture that this application builds and deploys:&lt;/p>
&lt;figure>
&lt;img src="/tutorials/route53-failover-with-fis/route53-failover-1.png" width="800"/>
&lt;/figure>
&lt;h3 id="creating-the-resources">Creating the resources&lt;/h3>
&lt;p>To begin, deploy the same services in both &lt;code>us-west-1&lt;/code> and &lt;code>us-east-1&lt;/code> regions. The resources specified in the &lt;code>init-resources.sh&lt;/code>
file will be created when the LocalStack container starts, using Initialization Hooks and the &lt;code>awslocal&lt;/code> CLI tool.&lt;/p>
&lt;p>The objective is to have a backup system in case of a regional outage in the primary availability zone (&lt;code>us-west-1&lt;/code>). We&amp;rsquo;ll focus
on this region to examine the existing resilience mechanisms.&lt;/p>
&lt;figure>
&lt;img src="/tutorials/route53-failover-with-fis/route53-failover-2.png" width="800"/>
&lt;/figure>
&lt;ul>
&lt;li>The primary API Gateway includes a health check endpoint that returns a 200 HTTP status code, serving as a basic check for its availability.&lt;/li>
&lt;li>Data synchronization across regions can be achieved with AWS-native tools like DynamoDB Streams and AWS Lambda. Here, any changes to the
primary table trigger a Lambda function, replicating these changes to a secondary table. This configuration is essential for high availability
and disaster recovery.&lt;/li>
&lt;/ul>
&lt;h3 id="configuring-a-route53-hosted-zone">Configuring a Route53 hosted zone&lt;/h3>
&lt;p>Let&amp;rsquo;s begin by setting up a hosted zone in Route53 named &lt;code>hello-localstack.com&lt;/code> and retrieved the hosted zone ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>HOSTED_ZONE_NAME=hello-localstack.com
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>HOSTED_ZONE_ID=$(awslocal route53 create-hosted-zone --name $HOSTED_ZONE_NAME --caller-reference foo | jq -r .HostedZone.Id)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Then, define the health check ID for the API Gateway available in the &lt;code>us-west-1&lt;/code> region:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>HEALTH_CHECK_ID=$(
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>awslocal route53 create-health-check \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--caller-reference foobar \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--health-check-config &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;FullyQualifiedDomainName&amp;#34;: &amp;#34;12345.execute-api.localhost.localstack.cloud&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Port&amp;#34;: 4566,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourcePath&amp;#34;: &amp;#34;/dev/healthcheck&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;HTTP&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;RequestInterval&amp;#34;: 10
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&amp;#39; | jq -r .HealthCheck.Id
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>)&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This command creates a Route 53 health check for an HTTP endpoint (&lt;code>12345.execute-api.localhost.localstack.cloud:4566/dev/healthcheck&lt;/code>)
with a 10-second request interval and captures the health check&amp;rsquo;s ID. The caller reference identifier in AWS resource creation or updates
prevents accidental duplication if requests are repeated.&lt;/p>
&lt;p>To update DNS records in the specified Route53 hosted zone (&lt;code>$HOSTED_ZONE_ID&lt;/code>), add two CNAME records: &lt;code>12345.$HOSTED_ZONE_NAME&lt;/code>
pointing to &lt;code>12345.execute-api.localhost.localstack.cloud&lt;/code>, and &lt;code>67890.$HOSTED_ZONE_NAME&lt;/code> pointing to &lt;code>67890.execute-api.localhost.localstack.cloud&lt;/code>.
Set a TTL (Time to Live) of 60 seconds for these records.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal route53 change-resource-record-sets \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--hosted-zone $HOSTED_ZONE_ID \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--change-batch &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Changes&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &amp;#34;CREATE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecordSet&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;12345.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;CNAME&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TTL&amp;#34;: 60,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecords&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&amp;#34;Value&amp;#34;: &amp;#34;12345.execute-api.localhost.localstack.cloud&amp;#34;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &amp;#34;CREATE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecordSet&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;67890.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;CNAME&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;TTL&amp;#34;: 60,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecords&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {&amp;#34;Value&amp;#34;: &amp;#34;67890.execute-api.localhost.localstack.cloud&amp;#34;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> ]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Finally, we&amp;rsquo;ll update the DNS records in the Route53 hosted zone identified by &lt;strong>&lt;code>$HOSTED_ZONE_ID&lt;/code>&lt;/strong>. We&amp;rsquo;re adding two CNAME records
for the subdomain &lt;code>test.$HOSTED_ZONE_NAME&lt;/code>. The first record points to &lt;code>12345.$HOSTED_ZONE_NAME&lt;/code> and is linked with the earlier created
health check, designated as the primary failover target. The second record points to &lt;code>67890.$HOSTED_ZONE_NAME&lt;/code> and is set as the secondary
failover target.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal route53 change-resource-record-sets \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--hosted-zone-id $HOSTED_ZONE_ID \
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>--change-batch &amp;#39;{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Changes&amp;#34;: [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &amp;#34;CREATE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecordSet&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;test.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;CNAME&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SetIdentifier&amp;#34;: &amp;#34;12345&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AliasTarget&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;HostedZoneId&amp;#34;: &amp;#34;&amp;#39;$HOSTED_ZONE_ID&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DNSName&amp;#34;: &amp;#34;12345.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EvaluateTargetHealth&amp;#34;: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;HealthCheckId&amp;#34;: &amp;#34;&amp;#39;$HEALTH_CHECK_ID&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Failover&amp;#34;: &amp;#34;PRIMARY&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Action&amp;#34;: &amp;#34;CREATE&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;ResourceRecordSet&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Name&amp;#34;: &amp;#34;test.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Type&amp;#34;: &amp;#34;CNAME&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;SetIdentifier&amp;#34;: &amp;#34;67890&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;AliasTarget&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;HostedZoneId&amp;#34;: &amp;#34;&amp;#39;$HOSTED_ZONE_ID&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;DNSName&amp;#34;: &amp;#34;67890.&amp;#39;$HOSTED_ZONE_NAME&amp;#39;&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;EvaluateTargetHealth&amp;#34;: true
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;Failover&amp;#34;: &amp;#34;SECONDARY&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}&amp;#39;&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This setup represents the basic failover configuration where traffic is redirected to different endpoints based on their health check
status. To confirm that the CNAME record for &lt;code>test.hello-localstack.com&lt;/code> points to &lt;code>12345.execute-api.localhost.localstack.cloud&lt;/code>,
you can use the following &lt;code>dig&lt;/code> command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>dig @localhost test.hello-localstack.com CNAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; QUESTION SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;test.hello-localstack.com. IN CNAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; ANSWER SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test.hello-localstack.com. 300 IN CNAME 12345.execute-api.localhost.localstack.cloud.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;h3 id="creating-a-controlled-outage">Creating a controlled outage&lt;/h3>
&lt;p>Our setup is now complete and ready for testing. To mimic a regional outage in the &lt;code>us-west-1&lt;/code> region, we&amp;rsquo;ll conduct an experiment that
halts all service invocations in this region, including the health check function. Once the primary region becomes non-functional,
Route 53&amp;rsquo;s health checks will fail. This failure will activate the failover policy, redirecting traffic to the corresponding services
in the secondary region, thus maintaining service continuity.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>cat region-outage-experiment.json
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;description&amp;#34;: &amp;#34;template for internal server error for few regions i.e. us-west-1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;regionUnavailable-us-west-1&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;us-west-1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;errorCode&amp;#34;: &amp;#34;503&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This Fault Injection Simulator (FIS) experiment template is set up to mimic a &lt;code>Service Unavailable&lt;/code> (503 error) in the &lt;code>us-west-1&lt;/code> region.
To create the experiment template, use the following command:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis create-experiment-template --cli-input-json file://region-outage-experiment.json&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Once the template is created, start the experiment using its ID:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>awslocal fis start-experiment --experiment-template-id &amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>{
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experiment&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;id&amp;#34;: &amp;#34;651b5196-b244-4a8b-8ab6-d7b9e13998a0&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;experimentTemplateId&amp;#34;: &amp;#34;d3a1a31b-c52e-49ec-8387-8f5eb75a11df&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;roleArn&amp;#34;: &amp;#34;arn:aws:iam:000000000000:role/ExperimentRole&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;state&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;status&amp;#34;: &amp;#34;running&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actions&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;regionUnavailable-us-east-1&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;actionId&amp;#34;: &amp;#34;localstack:generic:api-error&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;parameters&amp;#34;: {
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;region&amp;#34;: &amp;#34;us-west-1&amp;#34;,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;errorCode&amp;#34;: &amp;#34;503&amp;#34;
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;stopConditions&amp;#34;: [],
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;creationTime&amp;#34;: 1699902569.439826,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &amp;#34;startTime&amp;#34;: 1699902569.439826
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Replace &lt;code>&amp;lt;EXPERIMENT_TEMPLATE_ID&amp;gt;&lt;/code> with the ID of the experiment template created in the previous step. When the experiment is active,
Route 53&amp;rsquo;s health checks will detect the failure and redirect traffic to the standby region as per the failover setup. Confirm this redirection with:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>dig @localhost test.hello-localstack.com CNAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; QUESTION SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;test.hello-localstack.com. IN CNAME
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>;; ANSWER SECTION:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>test.hello-localstack.com. 300 IN CNAME 67890.execute-api.localhost.localstack.cloud.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>.....
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>This indicates that the hosted zone name now points to the secondary API Gateway, and &lt;code>us-east-1&lt;/code> services are in use.&lt;/p>
&lt;p>A Python script can simulate backend handling of this switch:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">dns.resolver&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">import&lt;/span> &lt;span style="color:#000">requests&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Set the Route53 DNS resolver to use&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">dns_resolver_ip&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;127.0.0.1&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Domain to resolve&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">domain_to_resolve&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">&amp;#39;test.hello-localstack.com&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#8f5902;font-style:italic"># Resolve the CNAME record using the specified DNS server&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">resolver&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">dns&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">resolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">Resolver&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">configure&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#204a87;font-weight:bold">False&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">resolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">nameservers&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#000">dns_resolver_ip&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">try&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">cname_record&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">resolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">query&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">domain_to_resolve&lt;/span>&lt;span style="color:#000;font-weight:bold">,&lt;/span> &lt;span style="color:#000">rdtype&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>&lt;span style="color:#000">dns&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">rdatatype&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">CNAME&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">resolved_domain&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#204a87">str&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">cname_record&lt;/span>&lt;span style="color:#000;font-weight:bold">[&lt;/span>&lt;span style="color:#0000cf;font-weight:bold">0&lt;/span>&lt;span style="color:#000;font-weight:bold">]&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">target&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># Construct the full URL with the resolved domain&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">resolved_url&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#4e9a06">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#39;http://&lt;/span>&lt;span style="color:#4e9a06">{&lt;/span>&lt;span style="color:#000">resolved_domain&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">:4566/dev/productApi?id=prod-1088&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># Make an HTTP request to the resolved URL&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">response&lt;/span> &lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span> &lt;span style="color:#000">requests&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">get&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">resolved_url&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#8f5902;font-style:italic"># Print the response&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#000">response&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">text&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">except&lt;/span> &lt;span style="color:#000">dns&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">resolver&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">.&lt;/span>&lt;span style="color:#000">NXDOMAIN&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;CNAME record not found for &lt;/span>&lt;span style="color:#4e9a06">{&lt;/span>&lt;span style="color:#000">domain_to_resolve&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#204a87;font-weight:bold">except&lt;/span> &lt;span style="color:#c00;font-weight:bold">Exception&lt;/span> &lt;span style="color:#204a87;font-weight:bold">as&lt;/span> &lt;span style="color:#000">e&lt;/span>&lt;span style="color:#000;font-weight:bold">:&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#204a87">print&lt;/span>&lt;span style="color:#000;font-weight:bold">(&lt;/span>&lt;span style="color:#4e9a06">f&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;Error: &lt;/span>&lt;span style="color:#4e9a06">{&lt;/span>&lt;span style="color:#000">e&lt;/span>&lt;span style="color:#4e9a06">}&lt;/span>&lt;span style="color:#4e9a06">&amp;#34;&lt;/span>&lt;span style="color:#000;font-weight:bold">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Running the script will resolve the CNAME record for &amp;rsquo;test.hello-localstack.com&amp;rsquo;, make an HTTP request to the resolved URL, and print the response, which fetches a Product object from DynamoDB in the &lt;code>us-east-1&lt;/code> region.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-text" data-lang="text">&lt;span style="display:flex;">&lt;span>&lt;span class="command-prefix">$ &lt;/span>python3 dns-resolver.py
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;div class="disable-copy">
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>s{&amp;#34;price&amp;#34;:&amp;#34;29.99&amp;#34;,&amp;#34;name&amp;#34;:&amp;#34;Super Widget&amp;#34;,&amp;#34;description&amp;#34;:&amp;#34;A versatile widget that can be used for a variety of purposes.
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>Durable, reliable, and affordable.&amp;#34;,&amp;#34;id&amp;#34;:&amp;#34;prod-1088&amp;#34;}
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;/div>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>The LocalStack logs will confirm which API Gateway was called based on the resolved domain.&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="background-color:#f8f8f8;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>2023-11-07T11:59:28.292 DEBUG --- &lt;span style="color:#ce5c00;font-weight:bold">[&lt;/span> asgi_gw_9&lt;span style="color:#ce5c00;font-weight:bold">]&lt;/span> l.s.l.i.version_manager : &amp;gt; &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>resource: /productApi,path: /productApi,httpMethod: GET,headers: &lt;span style="color:#ce5c00;font-weight:bold">{&lt;/span>&lt;span style="color:#000">Host&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>67890.execute-api.localhost.localstack.cloud:4566,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>User-Agent&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>python-requests/2.31.0, accept-encoding&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>gzip, deflate, &lt;span style="color:#000">accept&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>*/*, &lt;span style="color:#000">Connection&lt;/span>&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>keep-alive, x-localstack-tgt-api&lt;span style="color:#ce5c00;font-weight:bold">=&lt;/span>apigateway ....
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item></channel></rss>