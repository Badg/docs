<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Development &amp; Deployment with LocalStack on Docs</title><link>/academy/localstack-development/</link><description>Recent content in Development &amp; Deployment with LocalStack on Docs</description><generator>Hugo</generator><language>en</language><atom:link href="/academy/localstack-development/index.xml" rel="self" type="application/rss+xml"/><item><title>Course Overview</title><link>/academy/localstack-deployment/course-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/course-overview/</guid><description/></item><item><title>Deploy a full fledged containerised application using LocalStack</title><link>/academy/localstack-deployment/deploy-app-ls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/deploy-app-ls/</guid><description>In this lesson, we&amp;rsquo;ll guide you through deploying a continer-based application, which mimics the complexity of a real-world application. We are using the following AWS services and their features to build our infrastructure:
Elastic Container Service to create and deploy our containerized application. DynamoDB as a key-value and document database to persist our data. API Gateway to expose the containerized services to the user through HTTP APIs. Cognito User Pools for user authentication and authorizing requests to container APIs.</description></item><item><title>LocalStack Integrations - Infrastructure-as-Code and CI tools</title><link>/academy/localstack-deployment/ls-integrations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/ls-integrations/</guid><description>LocalStack integrates with various Infrastructure as Code tools like Terraform or Pulumi assist in configuration management with added advantages like version control, ease of editing, and reproducibility. Additionally, LocalStack integrates with various CI platforms, such as GitHub Actions or CircleCI, to enable the cloud integrations tests before pushing changes to production.
We discuss how LocalStack integrates with infrastructure-as-code (IaC) and continuous integration (CI) tools. Towards the end, we&amp;rsquo;ll demonstrate a Terraform deployment of a PostgreSQL Aurora cluster on LocalStack, highlighting the time and resource savings compared to deploying directly on AWS.</description></item><item><title>Creating infrastructure with Terraform locally</title><link>/academy/localstack-deployment/infra-terraform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/infra-terraform/</guid><description>In this video, we&amp;rsquo;ll utilize Terraform to deploy AWS resources locally through LocalStack. These resources include DynamoDB tables, API Gateway, and VPC. We&amp;rsquo;ll use tflocal, a wrapper CLI that serves as a wrapper on the terraform CLI to execute Terraform commands against LocalStack.
Here&amp;rsquo;s a breakdown of the steps we&amp;rsquo;ll take:
We&amp;rsquo;ll create a main.tf file and then apply the Terraform configuration on LocalStack. We&amp;rsquo;ll demonstrate various configuration options for setting up the infrastructure for our application.</description></item><item><title>Creating infra with CloudFormation locally</title><link>/academy/localstack-deployment/infra-cloudformation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/infra-cloudformation/</guid><description>In this video, we&amp;rsquo;ll utilize AWS CloudFormation to deploy AWS resources locally through LocalStack. These resources include DynamoDB tables, API Gateway, and VPC. We&amp;rsquo;ll use awslocal, a wrapper CLI that serves as a wrapper on the aws CLI to execute Terraform commands against LocalStack.
Here&amp;rsquo;s a breakdown of the steps we&amp;rsquo;ll take:
We&amp;rsquo;ll guide you through the entire CloudFormation Stack, demonstrating various configuration options for creating the infrastructure for our application.</description></item><item><title>Security Testing with IAM Policy Stream</title><link>/academy/localstack-deployment/iam-policy-stream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/iam-policy-stream/</guid><description>In this video, we&amp;rsquo;ll explore the IAM Policy Stream that assists in assigning precise IAM permissions to a resource. This ensures accurate and secure access to the resource.
Here&amp;rsquo;s a breakdown of the steps we&amp;rsquo;ll take:
Enable IAM Policy Stream on the LocalStack Web Application. Trigger an AWS API request from the CLI, triggering the generation of the necessary policy for the request. Submit another request to generate the corresponding policy for the resource.</description></item><item><title>Setup GitHub Action workflow that starts up LocalStack and deploys the infrastructure</title><link>/academy/localstack-deployment/github-action-ls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/github-action-ls/</guid><description>LocalStack allows organizations to automate their application testing and integration process using continuous integration (CI). You can seamlessly integrate LocalStack with your current CI platform. LocalStack offers native plugin for CircleCI &amp;amp; GitHub Actions, and a universal driver for other CI platforms. This integration enables you to include LocalStack&amp;rsquo;s local AWS cloud emulation in your CI pipelines, leverage advanced features such as Cloud Pods and CI analytics, and execute your test and integration suite before deploying to production.</description></item><item><title>Cloud pods - Team Collaboration</title><link>/academy/localstack-deployment/cloud-pods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/cloud-pods/</guid><description>LocalStack is an ephemeral environment by nature. It means that when you stop your LocalStack instance, all data is removed. However, by using Cloud Pods, you can preserve the LocalStack state. Cloud Pods are snapshots of your LocalStack instance&amp;rsquo;s state that can be saved, versioned, shared, and restored.
In this video, we&amp;rsquo;ll follow the quickstart to import Cloud Pods shared by our team member into our LocalStack instance and observe how this process supports local development and deployment of cloud applications.</description></item></channel></rss>