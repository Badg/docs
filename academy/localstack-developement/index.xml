<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Docs â€“ Development &amp; Deployment with LocalStack</title><link>/academy/localstack-developement/</link><description>Recent content in Development &amp; Deployment with LocalStack on Docs</description><generator>Hugo -- gohugo.io</generator><atom:link href="/academy/localstack-developement/index.xml" rel="self" type="application/rss+xml"/><item><title>Academy: Course Overview</title><link>/academy/localstack-deployment/course-overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/course-overview/</guid><description/></item><item><title>Academy: Deploy a full fledged containerised application using LocalStack</title><link>/academy/localstack-deployment/deploy-app-ls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/deploy-app-ls/</guid><description>
&lt;p>In this lesson, we&amp;rsquo;ll guide you through deploying a &lt;a href="https://github.com/localstack/localstack-workshop/tree/main/02-serverless-api-ecs-apigateway">continer-based application&lt;/a>, which mimics the complexity of a real-world application. We are using the following AWS services and their features to build our infrastructure:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/aws/elastic-container-service/">Elastic Container Service&lt;/a> to create and deploy our containerized application.&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/aws/dynamodb/">DynamoDB&lt;/a> as a key-value and document database to persist our data.&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/aws/apigatewayv2/">API Gateway&lt;/a> to expose the containerized services to the user through HTTP APIs.&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/aws/cognito/">Cognito User Pools&lt;/a> for user authentication and authorizing requests to container APIs.&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/aws/amplify/">Amplify&lt;/a> to create the user client with ReactJS to send requests to container APIs.&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/aws/s3/">S3&lt;/a> to deploy the Amplify application to make the web application available to users.&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/aws/iam/">IAM&lt;/a> to create policies to specify roles and permissions for various AWS services.&lt;/li>
&lt;/ul>
&lt;p>Additionally, we&amp;rsquo;ll explore the &lt;strong>Resource Browser&lt;/strong>, that enables you to perform basic management operations for the locally deployed AWS resources during the development and testing process, in a fashion similar to the AWS Management Console.&lt;/p>
&lt;p>Finally, we&amp;rsquo;ll manually generate certain resources using &lt;code>awslocal&lt;/code>, a wrapper over the &lt;code>aws&lt;/code> CLI which re-routes requests to LocalStack, to demonstrate how LocalStack can be used to create and manage resources locally.&lt;/p>
&lt;p>Further reading:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://aws.amazon.com/blogs/architecture/field-notes-serverless-container-based-apis-with-amazon-ecs-and-amazon-api-gateway/">Field Notes: Serverless Container-based APIs with Amazon ECS and Amazon API Gateway&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/integrations/aws-cli/#localstack-aws-cli-awslocal">What is &lt;code>awslocal&lt;/code> CLI?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/web-application/resource-browser/">LocalStack Resource Browser&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Academy: LocalStack Integrations - Infrastructure-as-Code and CI tools</title><link>/academy/localstack-deployment/ls-integrations/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/ls-integrations/</guid><description>
&lt;p>LocalStack integrates with various Infrastructure as Code tools like &lt;a href="https://docs.localstack.cloud/user-guide/integrations/terraform/">Terraform&lt;/a> or &lt;a href="https://docs.localstack.cloud/user-guide/integrations/pulumi/">Pulumi&lt;/a> assist in configuration management with added advantages like version control, ease of editing, and reproducibility. Additionally, LocalStack integrates with various CI platforms, such as &lt;a href="https://docs.localstack.cloud/user-guide/ci/github-actions/">GitHub Actions&lt;/a> or &lt;a href="https://docs.localstack.cloud/user-guide/ci/circle-ci/">CircleCI&lt;/a>, to enable the cloud integrations tests before pushing changes to production.&lt;/p>
&lt;p>We discuss how LocalStack integrates with infrastructure-as-code (IaC) and continuous integration (CI) tools. Towards the end, we&amp;rsquo;ll demonstrate a &lt;a href="https://github.com/terraform-aws-modules/terraform-aws-rds-aurora/tree/v8.1.1/examples/postgresql">Terraform deployment of a PostgreSQL Aurora cluster&lt;/a> on LocalStack, highlighting the time and resource savings compared to deploying directly on AWS.&lt;/p>
&lt;p>Additionally, we&amp;rsquo;ll provide examples of using LocalStack with Terraform and Pulumi for reference.&lt;/p>
&lt;p>Further reading:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/localstack-samples/localstack-terraform-samples">Terraform samples&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://github.com/localstack-samples/localstack-pulumi-samples">Pulumi samples&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://youtu.be/bx2XpR9xLFA">Infrastructure as Code with LocalStack&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Academy: Creating infrastructure with Terraform locally</title><link>/academy/localstack-deployment/infra-terraform/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/infra-terraform/</guid><description>
&lt;p>In this video, we&amp;rsquo;ll utilize Terraform to deploy AWS resources locally through LocalStack. These resources include DynamoDB tables, API Gateway, and VPC. We&amp;rsquo;ll use &lt;code>tflocal&lt;/code>, a wrapper CLI that serves as a wrapper on the &lt;code>terraform&lt;/code> CLI to execute Terraform commands against LocalStack.&lt;/p>
&lt;p>Here&amp;rsquo;s a breakdown of the steps we&amp;rsquo;ll take:&lt;/p>
&lt;ul>
&lt;li>We&amp;rsquo;ll create a &lt;code>main.tf&lt;/code> file and then apply the Terraform configuration on LocalStack.&lt;/li>
&lt;li>We&amp;rsquo;ll demonstrate various configuration options for setting up the infrastructure for our application.&lt;/li>
&lt;li>After applying Terraform, we&amp;rsquo;ll inspect the output, showcasing deployed resources such as API URLs, ECS cluster name, and VPC ID.&lt;/li>
&lt;li>Towards the end, we&amp;rsquo;ll verify the deployment and resource creation using the Resource Browser.&lt;/li>
&lt;/ul>
&lt;p>Further reading:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/integrations/terraform/#tflocal-wrapper-script">What is &lt;code>tflocal&lt;/code>?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/tutorials/s3-static-website-terraform/">Tutorial: Host a static website locally using Simple Storage Service (S3) and Terraform with LocalStack&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://registry.terraform.io/providers/hashicorp/aws/latest/docs/guides/custom-service-endpoints#localstack">Custom Service Endpoint configuration for LocalStack&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Academy: Creating infra with CloudFormation locally</title><link>/academy/localstack-deployment/infra-cloudformation/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/infra-cloudformation/</guid><description>
&lt;p>In this video, we&amp;rsquo;ll utilize &lt;a href="https://docs.localstack.cloud/user-guide/aws/cloudformation/">AWS CloudFormation&lt;/a> to deploy AWS resources locally through LocalStack. These resources include DynamoDB tables, API Gateway, and VPC. We&amp;rsquo;ll use &lt;code>awslocal&lt;/code>, a wrapper CLI that serves as a wrapper on the &lt;code>aws&lt;/code> CLI to execute Terraform commands against LocalStack.&lt;/p>
&lt;p>Here&amp;rsquo;s a breakdown of the steps we&amp;rsquo;ll take:&lt;/p>
&lt;ul>
&lt;li>We&amp;rsquo;ll guide you through the entire CloudFormation Stack, demonstrating various configuration options for creating the infrastructure for our application.&lt;/li>
&lt;li>After deploying the CloudFormation Stack, we&amp;rsquo;ll examine some outputted resources, including API URLs, ECS cluster names, VPC ID, and more.&lt;/li>
&lt;li>Finally, we&amp;rsquo;ll verify the deployment and confirm the creation of resources using the Resource Browser.&lt;/li>
&lt;/ul>
&lt;p>Further reading:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.aws.amazon.com/AWSCloudFormation/latest/UserGuide/Welcome.html">What is AWS CloudFormation?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/aws/cloudformation/#feature-coverage">What features are supported in LocalStack CloudFormation?&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/references/coverage/coverage_cloudformation/">LocalStack CloudFormation Coverage&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Academy: Security Testing with IAM Policy Stream</title><link>/academy/localstack-deployment/iam-policy-stream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/iam-policy-stream/</guid><description>
&lt;p>In this video, we&amp;rsquo;ll explore the &lt;a href="https://docs.localstack.cloud/user-guide/security-testing/iam-policy-stream/">IAM Policy Stream&lt;/a> that assists in assigning precise IAM permissions to a resource. This ensures accurate and secure access to the resource.&lt;/p>
&lt;p>Here&amp;rsquo;s a breakdown of the steps we&amp;rsquo;ll take:&lt;/p>
&lt;ol>
&lt;li>Enable IAM Policy Stream on the &lt;a href="https://app.localstack.cloud/policy-stream">LocalStack Web Application&lt;/a>.&lt;/li>
&lt;li>Trigger an AWS API request from the CLI, triggering the generation of the necessary policy for the request.&lt;/li>
&lt;li>Submit another request to generate the corresponding policy for the resource.&lt;/li>
&lt;li>Explore the &lt;strong>Summary Policy&lt;/strong> section to view the consolidated policy for both requests.&lt;/li>
&lt;/ol>
&lt;p>Further reading:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/security-testing/">Security Testing&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://youtube.com/watch?v=HQ2V44ImJ3E">IAM Policy Stream&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hashnode.localstack.cloud/generate-iam-policies-locally-using-localstack">Generate IAM policies locally with LocalStack&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Academy: Setup GitHub Action workflow that starts up LocalStack and deploys the infrastructure</title><link>/academy/localstack-deployment/github-action-ls/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/github-action-ls/</guid><description>
&lt;p>LocalStack allows organizations to automate their application testing and integration process using continuous integration (CI). You can seamlessly integrate LocalStack with your current CI platform. LocalStack offers native plugin for &lt;a href="https://circleci.com/developer/orbs/orb/localstack/platform">CircleCI&lt;/a> &amp;amp; &lt;a href="https://github.com/marketplace/actions/setup-localstack">GitHub Actions&lt;/a>, and a universal driver for other CI platforms. This integration enables you to include LocalStack&amp;rsquo;s local AWS cloud emulation in your CI pipelines, leverage advanced features such as Cloud Pods and CI analytics, and execute your test and integration suite before deploying to production.&lt;/p>
&lt;p>Here&amp;rsquo;s a breakdown of the steps we&amp;rsquo;ll take:&lt;/p>
&lt;ul>
&lt;li>We&amp;rsquo;ll look the &lt;code>main.yml&lt;/code> file located in the &lt;code>.github&lt;/code> directory. This file sets up LocalStack on the GitHub Action runner.&lt;/li>
&lt;li>We install &lt;code>awslocal&lt;/code> and &lt;code>tflocal&lt;/code> to deploy the local infrastructure on LocalStack&amp;rsquo;s cloud emulator running in the CI pipeline.&lt;/li>
&lt;li>Following this deployment, we utilize &lt;code>awslocal&lt;/code> to validate the deployed resources and conduct a diagnostic test on LocalStack to ensure everything is functioning correctly.&lt;/li>
&lt;/ul>
&lt;p>Further reading:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/ci/ci-keys/">Configuring CI Keys in LocalStack&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/ci/ci-analytics/">LocalStack CI Analytics&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hashnode.localstack.cloud/github-actions-infrastructure-testing-with-localstack">GitHub Actions &amp;amp; Infrastructure Testing with LocalStack&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hashnode.localstack.cloud/github-actions-end-to-end-testing-with-testcontainers-localstack">Github Actions &amp;amp; End-to-End Testing with Testcontainers &amp;amp; LocalStack&lt;/a>&lt;/li>
&lt;/ul></description></item><item><title>Academy: Cloud pods - Team Collaboration</title><link>/academy/localstack-deployment/cloud-pods/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/academy/localstack-deployment/cloud-pods/</guid><description>
&lt;p>LocalStack is an ephemeral environment by nature. It means that when you stop your LocalStack instance, all data is removed. However, by using &lt;a href="https://docs.localstack.cloud/user-guide/state-management/cloud-pods/">Cloud Pods&lt;/a>, you can preserve the LocalStack state. Cloud Pods are snapshots of your LocalStack instance&amp;rsquo;s state that can be saved, versioned, shared, and restored.&lt;/p>
&lt;p>In this video, we&amp;rsquo;ll follow the &lt;a href="https://app.localstack.cloud/quickstart">quickstart&lt;/a> to import Cloud Pods shared by our team member into our LocalStack instance and observe how this process supports local development and deployment of cloud applications.&lt;/p>
&lt;p>Further reading:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://docs.localstack.cloud/user-guide/state-management/">State Management in LocalStack&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://hashnode.localstack.cloud/localstack-cloud-pods">LocalStack Cloud Pods&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://youtu.be/InqTdSvxuag">LocalStack 101: Cloud Pods and Collaborative Work&lt;/a>&lt;/li>
&lt;/ul></description></item></channel></rss>